<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Kubernetes 架构和核心组件简述</title>
      <link href="2020/10/22/Kubernetes-%E6%9E%B6%E6%9E%84%E5%92%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E7%AE%80%E8%BF%B0/"/>
      <url>2020/10/22/Kubernetes-%E6%9E%B6%E6%9E%84%E5%92%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E7%AE%80%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Kubernetes 简称K8s,是一个可移植的，可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。它拥有一个庞大且快速增长的生态系统。<br>Kubernetes的服务，支持和工具广泛可用。<br>Kubernetes这个名字起源于希腊语，意思是舵手或飞行员。Google在2014年开源了Kubernetes项目。Kubernetes将超过15年的Google在大规模生产工作负载方面的经验与社区中最好的想法和实践相结合。</p><p><em>Logo:</em></p><img src="/img/1603354615160.jpg"><h2 id="Kubernetes-特点"><a href="#Kubernetes-特点" class="headerlink" title="Kubernetes 特点"></a>Kubernetes 特点</h2><ul><li>可移植: 支持公有云，私有云，混合云，多重云（multi-cloud）</li><li>可扩展: 模块化，插件化，可挂载，可组合</li><li>自动化: 自动部署，自动重启，自动复制，自动伸缩/扩展</li></ul><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><ul><li><a href="https://kubernetes.io" target="_blank" rel="noopener">https://kubernetes.io</a></li><li><a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes</a></li></ul><h2 id="设计架构"><a href="#设计架构" class="headerlink" title="设计架构"></a>设计架构</h2><p>在Kubernetes中分为两种角色即：Master（主管理节点）、Node（工作节点）<br>其中Master管理Node，主要负责整个集群的管理控制，相当于集群首脑。Node管理容器并且提供容器所需要的各种环境，由Master分配工作负载。</p><img src="/img/1603354835071.jpg"><h2 id="Master（主节点）"><a href="#Master（主节点）" class="headerlink" title="Master（主节点）"></a>Master（主节点）</h2><p>master包含以下组件,其中master需要做高可用的话可以为多台。</p><h3 id="1-kube-apiserver"><a href="#1-kube-apiserver" class="headerlink" title="1.kube-apiserver"></a>1.kube-apiserver</h3><p>kube-apiserver用于暴露Kubernetes API，提供了资源操作的唯一入口。对于资源的任何操作都需要经过API Server进程来处理。同时 API Server进程还提供了一系列认证授权机制。</p><p>API Server通过运行在master上的kube-apiserver进程提供服务,默认使用本机的8080端口提供REST服务，可以同时启动HTTPS安全端口(–secure-port=6443)来启动安全机制，加强REST API访问的安全性。</p><h3 id="2-etcd"><a href="#2-etcd" class="headerlink" title="2.etcd"></a>2.etcd</h3><p>etcd是一个轻量的分布式键值存储，他是整个Kubernetes集群中非常重要的组件之一。它主要用于保存集群所有的网络配置和对象的状态信息。它也是Kubernetes的默认存储系统，只有Api Server进程才可以访问。</p><h3 id="3-kube-scheduler"><a href="#3-kube-scheduler" class="headerlink" title="3.kube-scheduler"></a>3.kube-scheduler</h3><p>scheduler(调度器)是pod资源的调度器，主要监听最近创建但还未分配node的Pod资源，会根据调度算法自动分配到相应的node节点上。可以理解为pod找一个合适的家。</p><p>调度器考虑的因数</p><ul><li>资源需求</li><li>硬件/软件等条件</li><li>负载情况等</li></ul><h3 id="4-kube-controller-manager"><a href="#4-kube-controller-manager" class="headerlink" title="4.kube-controller-manager"></a>4.kube-controller-manager</h3><p>kube-controller-manager运行管理控制器，它们是集群中处理常规任务的后台线程。逻辑上，每个控制器是一个单独的进程，但为了降低复杂性，它们都被编译成单个二进制文件，并在单个进程中运行。</p><p>这些控制器包括：</p><ul><li><p>节点（Node）控制器：负责在节点出现故障时警示和响应。</p></li><li><p>副本（Replication）控制器：负责为系统中的每个副本控制器（ReplicationController）对象维护正确的pod数量。</p></li><li><p>端点（Endpoints）控制器：负责生成和维护所有的Endpoint对象的控制器。用于监听service和对应的pod副本变化。</p></li><li><p>Service Account和Token控制器：为新的Namespace创建默认帐户访问API 访问Token。</p></li></ul><h2 id="Node（工作节点）"><a href="#Node（工作节点）" class="headerlink" title="Node（工作节点）"></a>Node（工作节点）</h2><h3 id="1-kubelet"><a href="#1-kubelet" class="headerlink" title="1.kubelet"></a>1.kubelet</h3><p>kubelet 在每个node上运行的节点代理。每个node上的kubelet会定期调用master节点上的api server接口报告状态。它负责管理pods和它们上面的容器，images镜像、volumes、etc，确保容器在pod中运行</p><h3 id="2-kube-proxy"><a href="#2-kube-proxy" class="headerlink" title="2.kube-proxy"></a>2.kube-proxy</h3><p>proxy 顾名思义为代理，在这里为节点网络代理。负责请求转发。可以执行简单的 TCP、UDP 和 SCTP 流转发，或者在一组后端进行循环TCP、UDP和SCTP转发。当前可通过 Docker-links-compatible 环境变量找到服务集群 IP 和端口，这些环境变量指定了服务代理打开的端口。有一个可选的插件可以为这些集群IP 提供集群 DNS。用户必须使用 apiserver API 创建服务才能配置代理。</p><h3 id="3-Container-Runtime"><a href="#3-Container-Runtime" class="headerlink" title="3.Container Runtime"></a>3.Container Runtime</h3><p>容器运行时是负责运行容器的软件。它支持多种运行时，最常见的容器运行时就是Docker,也是目前最佳的组合。以后也许会出现更好的容器运行时。</p><p>支持的容器运行时：</p><ul><li>Docker</li><li>cri-io</li><li>rktlet</li><li>containerd</li><li>Kubernetes CRI(容器接口实现)</li></ul><h2 id="交互流程"><a href="#交互流程" class="headerlink" title="交互流程"></a>交互流程</h2><img src="/img/1603363629432.jpg"><p>交互流程：</p><ul><li>1.用户通过REST API创建一个Pod</li><li>2.API Server验证请求并保存到etcd当中</li><li>3.etcd通知Api server</li><li>4.scheduler检测到未绑定的pod,开始调度、绑定并将结果写入etcd</li><li>5.kubelet检测到新的pod调度，然后创建容器</li><li>6.kubelet将pod状态更新到api server</li><li>7.api server 把最新的状态保存到etcd中</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/home/</a></li><li><a href="https://kubernetes.io/zh/docs/reference/command-line-tools-reference" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/reference/command-line-tools-reference</a></li><li><a href="https://www.kubernetes.org.cn/kubernetes%e8%ae%be%e8%ae%a1%e6%9e%b6%e6%9e%84" target="_blank" rel="noopener">https://www.kubernetes.org.cn/kubernetes%e8%ae%be%e8%ae%a1%e6%9e%b6%e6%9e%84</a></li><li>《kubernets 入门到实践》</li></ul>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 1.19 集群安装 for Centos 7.8</title>
      <link href="2020/10/20/Kubernetes-%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85-for-Centos-7/"/>
      <url>2020/10/20/Kubernetes-%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85-for-Centos-7/</url>
      
        <content type="html"><![CDATA[<h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><p>kubeadm 搭建kubernetes集群环境</p><h2 id="集群节点规划"><a href="#集群节点规划" class="headerlink" title="集群节点规划"></a>集群节点规划</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">k8s-master     172.19.153.97      Centos 7.8       2核4G</span><br><span class="line">k8s-node1      172.19.153.98      Centos 7.8       2核4G</span><br><span class="line">k8s-node2      172.19.153.99      Centos 7.8       2核4G</span><br></pre></td></tr></table></figure><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="1-修改hostname"><a href="#1-修改hostname" class="headerlink" title="1.修改hostname"></a>1.修改hostname</h3><p>分别设置各台主机设备的hostname<br>master 节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zefbuojpotsgnr3i6weZ ~]<span class="comment"># hostnamectl set-hostname k8s-master</span></span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6weZ ~]<span class="comment"># hostname</span></span><br><span class="line">k8s-master</span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6weZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>在node1节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment"># hostnamectl set-hostname k8s-node1</span></span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment"># hostname</span></span><br><span class="line">k8s-node1</span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>在node2节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment"># hostnamectl set-hostname k8s-node2</span></span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment"># hostname</span></span><br><span class="line">k8s-node2</span><br><span class="line">[root@iZ2zefbuojpotsgnr3i6wfZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="2-添加hosts解析"><a href="#2-添加hosts解析" class="headerlink" title="2.添加hosts解析"></a>2.添加hosts解析</h3><p>操作节点：所有节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt;/etc/hosts&lt;&lt;EOF</span><br><span class="line">172.19.153.97 k8s-master</span><br><span class="line">172.19.153.98 k8s-node1</span><br><span class="line">172.19.153.99 k8s-node2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>ping测试下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># </span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># ping k8s-node1</span></span><br><span class="line">PING k8s-node1 (172.19.153.98) 56(84) bytes of data.</span><br><span class="line">64 bytes from k8s-node1 (172.19.153.98): icmp_seq=1 ttl=64 time=0.342 ms</span><br><span class="line">64 bytes from k8s-node1 (172.19.153.98): icmp_seq=2 ttl=64 time=0.221 ms</span><br><span class="line">^C</span><br><span class="line">--- k8s-node1 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 999ms</span><br><span class="line">rtt min/avg/max/mdev = 0.221/0.281/0.342/0.062 ms</span><br><span class="line">[root@k8s-master ~]<span class="comment"># ping k8s-node2</span></span><br><span class="line">PING k8s-node2 (172.19.153.99) 56(84) bytes of data.</span><br><span class="line">64 bytes from k8s-node2 (172.19.153.99): icmp_seq=1 ttl=64 time=0.357 ms</span><br><span class="line">64 bytes from k8s-node2 (172.19.153.99): icmp_seq=2 ttl=64 time=0.205 ms</span><br><span class="line">^C</span><br><span class="line">--- k8s-node2 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 0.205/0.281/0.357/0.076 ms</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="3-系统优化配置"><a href="#3-系统优化配置" class="headerlink" title="3.系统优化配置"></a>3.系统优化配置</h3><p>操作节点：所有节点执行</p><p>防火墙配置<br>如果节点间无安全组限制，可以忽略。否则需要打开如下端口<br>k8s-master：tcp:6443,2379,2380,60080,60081,udp全部打开<br>k8s-node节点：udp协议开放</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><p><strong>关闭selinux和防火墙</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/enforcing/disabled/'</span> /etc/selinux/config <span class="comment"># 永久关闭</span></span><br><span class="line">setenforce 0    <span class="comment">#临时关闭</span></span><br><span class="line">systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>检查所有节点是否为disabled状态，阿里云默认关闭了selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># getenforce  #查看selinux状态</span></span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure><p><strong>关闭swap分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br><span class="line">sed -i <span class="string">'s/.\\*swap.\\*/#&amp;/'</span> /etc/fstab <span class="comment">#防止开机自动挂载</span></span><br></pre></td></tr></table></figure><p><strong>修改内核参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line">EOF</span><br><span class="line">modprobe br_netfilter</span><br><span class="line">sysctl -p /etc/sysctl.d/k8s.conf</span><br></pre></td></tr></table></figure><h3 id="4-配置yum源"><a href="#4-配置yum源" class="headerlink" title="4.配置yum源"></a>4.配置yum源</h3><p>配置docker、linux、kubernetes默认的yum源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-7.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/docker-ce.repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure><h3 id="5-安装Docker"><a href="#5-安装Docker" class="headerlink" title="5.安装Docker"></a>5.安装Docker</h3><p>操作节点：所有节点执行</p><p>获取阿里的加速器地址<br><img src="/img/1603187904462.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line">yum install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改docker daemon配置文件</span></span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://rsgc4jk0.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>启动状态检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># systemctl  status docker-ce</span></span><br><span class="line">Unit docker-ce.service could not be found.</span><br><span class="line">[root@k8s-master ~]<span class="comment"># systemctl  status docker</span></span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2020-10-20 18:01:20 CST; 1min 13s ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line"> Main PID: 11667 (dockerd)</span><br><span class="line">    Tasks: 10</span><br><span class="line">   Memory: 38.2M</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           └─11667 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line">Oct 20 18:01:20 k8s-master dockerd[11667]: time=<span class="string">"2020-10-20T18:01:20.767736680+08:00"</span> level=info msg=<span class="string">"scheme \"unix\" not registered, fallback to default scheme"</span> module=grpc</span><br><span class="line">Oct 20 18:01:20 k8s-master dockerd[11667]: time=<span class="string">"2020-10-20T18:01:20.767752808+08:00"</span> level=info msg=<span class="string">"ccResolverWrapper: sending update to cc: &#123;[&#123;unix:///run/co...odule=grpc</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.767764079+08:00<span class="string">" level=info msg="</span>ClientConn switching balancer to \"pick_first\"<span class="string">" module=grpc</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.796876109+08:00<span class="string">" level=info msg="</span>Loading containers: start.<span class="string">"</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.885563057+08:00<span class="string">" level=info msg="</span>Default bridge (docker0) is assigned with an IP address 17...P address<span class="string">"</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.928135025+08:00<span class="string">" level=info msg="</span>Loading containers: <span class="keyword">done</span>.<span class="string">"</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.943819098+08:00<span class="string">" level=info msg="</span>Docker daemon<span class="string">" commit=4484c46d9d graphdriver(s)=overlay2 v...n=19.03.13</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.943914032+08:00<span class="string">" level=info msg="</span>Daemon has completed initialization<span class="string">"</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master dockerd[11667]: time="</span>2020-10-20T18:01:20.968326432+08:00<span class="string">" level=info msg="</span>API listen on /var/run/docker.sock<span class="string">"</span></span><br><span class="line"><span class="string">Oct 20 18:01:20 k8s-master systemd[1]: Started Docker Application Container Engine.</span></span><br><span class="line"><span class="string">Hint: Some lines were ellipsized, use -l to show in full.</span></span><br></pre></td></tr></table></figure><h2 id="安装部署Kubernetes"><a href="#安装部署Kubernetes" class="headerlink" title="安装部署Kubernetes"></a>安装部署Kubernetes</h2><p>参看可以安装的版本,目前最新版本为1.19.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># yum list kubelet --showduplicates | tail </span></span><br><span class="line">Repository base is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Repository updates is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Repository extras is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">kubelet.x86_64                       1.18.4-1                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.18.5-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.18.6-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.18.8-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.18.9-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.18.10-0                        kubernetes</span><br><span class="line">kubelet.x86_64                       1.19.0-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.19.1-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.19.2-0                         kubernetes</span><br><span class="line">kubelet.x86_64                       1.19.3-0                         kubernetes</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="1-安装kubeadm-kubelet-kubectl"><a href="#1-安装kubeadm-kubelet-kubectl" class="headerlink" title="1.安装kubeadm,kubelet,kubectl"></a>1.安装kubeadm,kubelet,kubectl</h3><p>操作节点：所有节点执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install kubelet-1.19.3 kubeadm-1.19.3 kubectl-1.19.3 -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查版本</span></span><br><span class="line">bueadm version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h3 id="2-初始化kubeadm配置"><a href="#2-初始化kubeadm配置" class="headerlink" title="2.初始化kubeadm配置"></a>2.初始化kubeadm配置</h3><p>操作节点：只在master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubeadm config print init-defaults &gt; kubeadm.yaml</span></span><br></pre></td></tr></table></figure><p>修改三处配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># vim kubeadm.yaml</span></span><br><span class="line"></span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 172.19.153.97 <span class="comment"># master ip</span></span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: /var/run/dockershim.sock</span><br><span class="line">  name: k8s-master</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns:</span><br><span class="line">  <span class="built_in">type</span>: CoreDNS</span><br><span class="line">etcd:</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers <span class="comment"># aliyun镜像地址</span></span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.19.0</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  podSubnet: 10.244.0.0/16 <span class="comment"># pod 网段</span></span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="3-下载镜像"><a href="#3-下载镜像" class="headerlink" title="3.下载镜像"></a>3.下载镜像</h3><p>参看需要使用的镜像列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubeadm config images list --config kubeadm.yaml </span></span><br><span class="line">W1020 18:41:31.595354   12031 configset.go:348] WARNING: kubeadm cannot validate component configs <span class="keyword">for</span> API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]</span><br><span class="line">registry.aliyuncs.com/google_containers/kube-apiserver:v1.19.0</span><br><span class="line">registry.aliyuncs.com/google_containers/kube-controller-manager:v1.19.0</span><br><span class="line">registry.aliyuncs.com/google_containers/kube-scheduler:v1.19.0</span><br><span class="line">registry.aliyuncs.com/google_containers/kube-proxy:v1.19.0</span><br><span class="line">registry.aliyuncs.com/google_containers/pause:3.2</span><br><span class="line">registry.aliyuncs.com/google_containers/etcd:3.4.13-0</span><br><span class="line">registry.aliyuncs.com/google_containers/coredns:1.7.0</span><br></pre></td></tr></table></figure><p>使用pull下载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubeadm config images pull --config kubeadm.yaml     </span></span><br><span class="line">W1020 18:47:17.290279   12065 configset.go:348] WARNING: kubeadm cannot validate component configs <span class="keyword">for</span> API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-apiserver:v1.19.0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.19.0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.19.0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-proxy:v1.19.0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/pause:3.2</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/etcd:3.4.13-0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/coredns:1.7.0</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="4-初始化kubeadm"><a href="#4-初始化kubeadm" class="headerlink" title="4.初始化kubeadm"></a>4.初始化kubeadm</h3><p>操作节点：只在master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubeadm init --config </span></span><br><span class="line">flag needs an argument: --config</span><br><span class="line">To see the stack trace of this error execute with --v=5 or higher</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubeadm init --config kubeadm.yaml </span></span><br><span class="line">W1020 18:55:45.497737   12312 configset.go:348] WARNING: kubeadm cannot validate component configs <span class="keyword">for</span> API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]</span><br><span class="line">[init] Using Kubernetes version: v1.19.0</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">        [WARNING IsDockerSystemdCheck]: detected <span class="string">"cgroupfs"</span> as the Docker cgroup driver. The recommended driver is <span class="string">"systemd"</span>. Please follow the guide at https://kubernetes.io/docs/setup/cri/</span><br><span class="line">[preflight] Pulling images required <span class="keyword">for</span> setting up a Kubernetes cluster</span><br><span class="line"></span><br><span class="line">.......</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"><span class="comment"># 使用以前命令加入到集群</span></span><br><span class="line">kubeadm join 172.19.153.97:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:31a4ae4022fed0410031c099424152ff3bf7a91d95a7e67f66b17fe3e1372e02 </span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>执行上面提示的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment">#  mkdir -p $HOME/.kube</span></span><br><span class="line">[root@k8s-master ~]<span class="comment">#  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span></span><br><span class="line">[root@k8s-master ~]<span class="comment">#  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span></span><br></pre></td></tr></table></figure><h3 id="5-添加node节点到集群"><a href="#5-添加node节点到集群" class="headerlink" title="5.添加node节点到集群"></a>5.添加node节点到集群</h3><p>操作节点：node节点</p><p>node1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-node1 ~]<span class="comment"># kubeadm join 172.19.153.97:6443 --token abcdef.0123456789abcdef \</span></span><br><span class="line">&gt;     --discovery-token-ca-cert-hash sha256:31a4ae4022fed0410031c099424152ff3bf7a91d95a7e67f66b17fe3e1372e02 </span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">        [WARNING IsDockerSystemdCheck]: detected <span class="string">"cgroupfs"</span> as the Docker cgroup driver. The recommended driver is <span class="string">"systemd"</span>. Please follow the guide at https://kubernetes.io/docs/setup/cri/</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">'kubectl -n kube-system get cm kubeadm-config -oyaml'</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">"/var/lib/kubelet/config.yaml"</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">"/var/lib/kubelet/kubeadm-flags.env"</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">'kubectl get nodes'</span> on the control-plane to see this node join the cluster.</span><br><span class="line"></span><br><span class="line">[root@k8s-node1 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>node2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-node2 ~]<span class="comment"># kubeadm join 172.19.153.97:6443 --token abcdef.0123456789abcdef \</span></span><br><span class="line">&gt;     --discovery-token-ca-cert-hash sha256:31a4ae4022fed0410031c099424152ff3bf7a91d95a7e67f66b17fe3e1372e02 </span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">        [WARNING IsDockerSystemdCheck]: detected <span class="string">"cgroupfs"</span> as the Docker cgroup driver. The recommended driver is <span class="string">"systemd"</span>. Please follow the guide at https://kubernetes.io/docs/setup/cri/</span><br><span class="line">[preflight] Reading configuration from the cluster...</span><br><span class="line">[preflight] FYI: You can look at this config file with <span class="string">'kubectl -n kube-system get cm kubeadm-config -oyaml'</span></span><br><span class="line">[kubelet-start] Writing kubelet configuration to file <span class="string">"/var/lib/kubelet/config.yaml"</span></span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file <span class="string">"/var/lib/kubelet/kubeadm-flags.env"</span></span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[kubelet-start] Waiting <span class="keyword">for</span> the kubelet to perform the TLS Bootstrap...</span><br><span class="line"></span><br><span class="line">This node has joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver and a response was received.</span><br><span class="line">* The Kubelet was informed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run <span class="string">'kubectl get nodes'</span> on the control-plane to see this node join the cluster.</span><br><span class="line"></span><br><span class="line">[root@k8s-node2 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>检查-在master节点上，可以看到有两个node加入进来了，但是处于NotReady状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME         STATUS     ROLES    AGE    VERSION</span><br><span class="line">k8s-master   NotReady   master   19m    v1.19.3</span><br><span class="line">k8s-node1    NotReady   &lt;none&gt;   2m7s   v1.19.3</span><br><span class="line">k8s-node2    NotReady   &lt;none&gt;   2m     v1.19.3</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="6-安装flannel"><a href="#6-安装flannel" class="headerlink" title="6.安装flannel"></a>6.安装flannel</h3><p>下载flannel的yaml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p>应用配置文件，创建flannel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl apply -f kube-flannel.yml </span></span><br><span class="line">podsecuritypolicy.policy/psp.flannel.unprivileged created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/flannel created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/flannel created</span><br><span class="line">serviceaccount/flannel created</span><br><span class="line">configmap/kube-flannel-cfg created</span><br><span class="line">daemonset.apps/kube-flannel-ds created</span><br></pre></td></tr></table></figure><p>检查flannel是否创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># docker ps -a | grep flannel</span></span><br><span class="line">b3a28fe53910        e708f4bb69e3                                        <span class="string">"/opt/bin/flanneld -…"</span>   3 minutes ago       Up 3 minutes                                   k8s_kubeflannel_kube-flannel-ds-nvrdd_kube-system_d4d504b3-b579-4e90-94cf-3584da4395ec_0</span><br><span class="line">f6e5f8546895        quay.io/coreos/flannel                              <span class="string">"cp -f /etc/kube-fla…"</span>   3 minutes ago       Exited (0) 3 minutes ago                       k8s_install-cni_kube-flannel-ds-nvrdd_kube-system_d4d504b3-b579-4e90-94cf-3584da4395ec_0</span><br><span class="line">6a3fb130f7b3        registry.aliyuncs.com/google_containers/pause:3.2   <span class="string">"/pause"</span>                 3 minutes ago       Up 3 minutes                                   k8s_POD_kube-flannel-ds-nvrdd_kube-system_d4d504b3-b579-4e90-94cf-3584da4395ec_0</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="7-验证集群状态"><a href="#7-验证集群状态" class="headerlink" title="7.验证集群状态"></a>7.验证集群状态</h3><p>等待1-2分钟后再次查看结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   52m   v1.19.3</span><br><span class="line">k8s-node1    Ready    &lt;none&gt;   35m   v1.19.3</span><br><span class="line">k8s-node2    Ready    &lt;none&gt;   35m   v1.19.3</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="8-部署Dashboard"><a href="#8-部署Dashboard" class="headerlink" title="8.部署Dashboard"></a>8.部署Dashboard</h3><p>下载yaml配置文件，最新版本的dashboard参考<a href="https://github.com/kubernetes/dashboard/releases" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/releases</a></p><p>注意兼容性：<br><img src="/img/1603196694975.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml</span></span><br><span class="line">--2020-10-20 20:16:00--  https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml</span><br><span class="line">Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.108.133</span><br><span class="line">Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.108.133|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 7552 (7.4K) [text/plain]</span><br><span class="line">Saving to: ‘recommended.yaml’</span><br><span class="line"></span><br><span class="line">100%[===================================================================================================================================&gt;] 7,552       --.-K/s   <span class="keyword">in</span> 0.1s    </span><br><span class="line"></span><br><span class="line">2020-10-20 20:16:02 (53.8 KB/s) - ‘recommended.yaml’ saved [7552/7552]</span><br></pre></td></tr></table></figure><p>修改yaml文件,添加NodePort</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">39 spec:</span><br><span class="line">40   ports:</span><br><span class="line">41     - port: 443</span><br><span class="line">42       targetPort: 8443</span><br><span class="line">43   selector:</span><br><span class="line">44     k8s-app: kubernetes-dashboard</span><br><span class="line">45   <span class="built_in">type</span>: NodePort <span class="comment"># 变成nodeport 类型服务</span></span><br></pre></td></tr></table></figure><p>也可以固定成某一个port端口，不设置默认会动态生成一个端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: NodePort</span><br><span class="line">ports:</span><br><span class="line">  - port: 443</span><br><span class="line">    targetPort: 8443</span><br><span class="line">    nodePort: 30443     <span class="comment">#对外暴露的端口</span></span><br></pre></td></tr></table></figure><p>应用配置并检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl  apply -f recommended.yaml</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl -n kubernetes-dashboard get svc</span></span><br><span class="line">NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.97.20.216     &lt;none&gt;        8000/TCP        32m</span><br><span class="line">kubernetes-dashboard        NodePort    10.107.133.135   &lt;none&gt;        443:30078/TCP   32m</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>访问:<a href="https://x.x.x.x:30078" target="_blank" rel="noopener">https://x.x.x.x:30078</a></p><img src="/img/1603196584305.jpg"><p>提示两种验证方式</p><img src="/img/1603197466610.jpg"><h3 id="9-创建token令牌"><a href="#9-创建token令牌" class="headerlink" title="9.创建token令牌"></a>9.创建token令牌</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create serviceaccount  dashboard-admin -n kube-system</span></span><br><span class="line">serviceaccount/dashboard-admin created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl create clusterrolebinding  dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span></span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/dashboard-admin created</span><br><span class="line">[root@k8s-master ~]<span class="comment"># kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/&#123;print $1&#125;')</span></span><br><span class="line">Name:         dashboard-admin-token-cpmgn</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: 1d68fc57-c316-4e5a-96bf-e2524053c2b6</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1066 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">[root@k8s-master ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>在token处输入上面生成的令牌<br><img src="/img/1603198173908.jpg"></p><p>登录成功<br><img src="/img/1603198230738.jpg"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a></li><li><a href="https://kubernetes.io/zh/docs/setup/independent/create-cluster-kubeadm" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/independent/create-cluster-kubeadm</a></li><li><a href="https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm/</a></li><li><a href="https://docs.projectcalico.org/getting-started/kubernetes/quickstart" target="_blank" rel="noopener">https://docs.projectcalico.org/getting-started/kubernetes/quickstart</a></li><li><a href="https://my.oschina.net/u/4275654/blog/4665479" target="_blank" rel="noopener">https://my.oschina.net/u/4275654/blog/4665479</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome 您的连接不是私密连接解决办法</title>
      <link href="2020/10/19/Chrome-%E6%82%A8%E7%9A%84%E8%BF%9E%E6%8E%A5%E4%B8%8D%E6%98%AF%E7%A7%81%E5%AF%86%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>2020/10/19/Chrome-%E6%82%A8%E7%9A%84%E8%BF%9E%E6%8E%A5%E4%B8%8D%E6%98%AF%E7%A7%81%E5%AF%86%E8%BF%9E%E6%8E%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>谷歌浏览器隐私设置错误 NET::ERR_CERT_AUTHORITY_INVALID 攻击者可能会试图从 xx 窃取您的信息（例如：密码、通讯内容或信用卡信息）。</p><p>谷歌浏览器访问 https 提示您的连接不是私密连接 - 隐私设置错误</p><p>例如：</p><img src="/img/1603196584305.jpg"><p>解决：在当前页面用键盘输入  <code>thisisunsafe</code>  不是在地址栏输入，直接敲键盘页面即会自动刷新进入网页。</p><p>参考：</p><ul><li><a href="https://blog.csdn.net/qq_34629352/article/details/109023000" target="_blank" rel="noopener">https://blog.csdn.net/qq_34629352/article/details/109023000</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Influxdb for Centos 7 安装部署</title>
      <link href="2020/10/10/influxdb-for-centos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
      <url>2020/10/10/influxdb-for-centos-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="Influxdb介绍"><a href="#Influxdb介绍" class="headerlink" title="Influxdb介绍"></a>Influxdb介绍</h2><p>InfluxDB是一个时间序列数据库，旨在处理较高的写入和查询负载。它是TICK Stack（Telegraf，InfluxDB，Chronograf，Kapacitor）的开源时间序列数据库组件。旨在处理高写入和查询负载，并提供一种称为InfluxQL的类似于SQL的查询语言，用于与数据进行交互。目前有开源版和企业版本，具体费用及价格参照官网<a href="https://www.influxdata.com/products/influxdb-overview/" target="_blank" rel="noopener">https://www.influxdata.com/products/influxdb-overview/</a></p><p><strong>主要特性有：</strong></p><ul><li>内置HTTP接口，使用方便</li><li>数据可以打标记，这样查询可以很灵活</li><li>类SQL的查询语句</li><li>安装管理很简单，并且读写数据很高效</li><li>能够实时查询，数据在写入时被索引后就能够被立即查出</li><li>……</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装环境系统为 Centos7</p><p>1.下载<br><a href="https://portal.influxdata.com/downloads/" target="_blank" rel="noopener">https://portal.influxdata.com/downloads/</a></p><p>选择1.8.3<br>后会弹出如下安装方式<br><img src="/img/1602296276751.jpg"></p><p>2.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># wget https://dl.influxdata.com/influxdb/releases/influxdb-1.8.3.x86_64.rpm  # 下载</span></span><br><span class="line">sudo yum localinstall influxdb-1.8.3.x86_64.rpm--2020-10-10 10:14:53--  https://dl.influxdata.com/influxdb/releases/influxdb-1.8.3.x86_64.rpm</span><br><span class="line">Resolving dl.influxdata.com (dl.influxdata.com)... 13.227.75.119, 13.227.75.14, 13.227.75.22, ...</span><br><span class="line">Connecting to dl.influxdata.com (dl.influxdata.com)|13.227.75.119|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 64097226 (61M) [application/octet-stream]</span><br><span class="line">Saving to: ‘influxdb-1.8.3.x86_64.rpm’</span><br><span class="line"></span><br><span class="line">100%[===========================================================================================================================&gt;] 64,097,226  2.62MB/s   <span class="keyword">in</span> 27s    </span><br><span class="line"></span><br><span class="line">2020-10-10 10:15:20 (2.28 MB/s) - ‘influxdb-1.8.3.x86_64.rpm’ saved [64097226/64097226]</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># sudo yum localinstall influxdb-1.8.3.x86_64.rpm # 安装</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="网络端口"><a href="#网络端口" class="headerlink" title="网络端口"></a>网络端口</h2><p>默认情况下，InfluxDB使用以下端口</p><ul><li>TCP端口8086通过InfluxDB HTTP API进行客户端-服务器通信。</li><li>TCP端口8088可用于RPC服务执行备份和还原操作。</li></ul><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/etc/influxdb/influxdb.conf    <span class="comment"># 配置文件</span></span><br><span class="line">/etc/logrotate.d/influxdb      <span class="comment"># 日志文件轮询配置</span></span><br><span class="line">/usr/bin/influx                <span class="comment"># cli 命令</span></span><br><span class="line">/usr/bin/influx_inspect</span><br><span class="line">/usr/bin/influx_stress</span><br><span class="line">/usr/bin/influx_tsm</span><br><span class="line">/usr/bin/influxd              <span class="comment"># 二进制文件</span></span><br><span class="line">/usr/lib/influxdb/scripts/influxdb.service <span class="comment"># 开机启动文件</span></span><br><span class="line">/usr/lib/influxdb/scripts/init.sh</span><br><span class="line">/usr/share/man/man1/influx.1.gz</span><br><span class="line">/usr/share/man/man1/influx_inspect.1.gz</span><br><span class="line">/usr/share/man/man1/influx_stress.1.gz</span><br><span class="line">/usr/share/man/man1/influx_tsm.1.gz</span><br><span class="line">/usr/share/man/man1/influxd-backup.1.gz</span><br><span class="line">/usr/share/man/man1/influxd-config.1.gz</span><br><span class="line">/usr/share/man/man1/influxd-restore.1.gz</span><br><span class="line">/usr/share/man/man1/influxd-run.1.gz</span><br><span class="line">/usr/share/man/man1/influxd-version.1.gz</span><br><span class="line">/usr/share/man/man1/influxd.1.gz</span><br><span class="line">/var/lib/influxdb   <span class="comment"># 库文件</span></span><br><span class="line">/var/<span class="built_in">log</span>/influxdb   <span class="comment"># 日志存放路径</span></span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">[meta]</span><br><span class="line">  <span class="comment"># Where the metadata/raft database is stored  # 元数据存放路径</span></span><br><span class="line">  dir = <span class="string">"/var/lib/influxdb/meta"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically create a default retention policy when creating a database.</span></span><br><span class="line">  <span class="comment"># retention-autocreate = true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If log messages are printed for the meta service</span></span><br><span class="line">  <span class="comment"># logging-enabled = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">### [data]</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">### Controls where the actual shard data for InfluxDB lives and how it is</span></span><br><span class="line"><span class="comment">### flushed from the WAL. "dir" may need to be changed to a suitable place</span></span><br><span class="line"><span class="comment">### for your system, but the WAL settings are an advanced configuration. The</span></span><br><span class="line"><span class="comment">### defaults should work for most systems.</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">  <span class="comment"># The directory where the TSM storage engine stores TSM files.</span></span><br><span class="line">  dir = <span class="string">"/var/lib/influxdb/data"</span> <span class="comment"># 数据存储目录</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The directory where the TSM storage engine stores WAL files.</span></span><br><span class="line">  wal-dir = <span class="string">"/var/lib/influxdb/wal"</span> <span class="comment"># wal 数据存储目录</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># The amount of time that a write will wait before fsyncing.  A duration</span></span><br><span class="line">  <span class="comment"># greater than 0 can be used to batch up multiple fsync calls.  This is useful for slower</span></span><br><span class="line">  <span class="comment"># disks or when WAL write contention is seen.  A value of 0s fsyncs every write to the WAL.</span></span><br><span class="line">  <span class="comment"># Values in the range of 0-100ms are recommended for non-SSD disks.</span></span><br><span class="line">  <span class="comment"># wal-fsync-delay = "0s"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The type of shard index to use for new shards.  The default is an in-memory index that is</span></span><br><span class="line">  <span class="comment"># recreated at startup.  A value of "tsi1" will use a disk based index that supports higher</span></span><br><span class="line">  <span class="comment"># cardinality datasets.</span></span><br><span class="line">  <span class="comment"># index-version = "inmem"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Trace logging provides more verbose output around the tsm engine. Turning</span></span><br><span class="line">  <span class="comment"># this on can provide more useful output for debugging tsm engine issues.</span></span><br><span class="line">  <span class="comment"># trace-logging-enabled = false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Whether queries should be logged before execution. Very useful for troubleshooting, but will</span></span><br><span class="line">  <span class="comment"># log any sensitive data contained within a query.</span></span><br><span class="line">  <span class="comment"># query-log-enabled = true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Validates incoming writes to ensure keys only have valid unicode characters.</span></span><br><span class="line">  <span class="comment"># This setting will incur a small overhead because every key must be checked.</span></span><br><span class="line">  <span class="comment"># validate-keys = false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Settings for the TSM engine</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># CacheMaxMemorySize is the maximum size a shard's cache can</span></span><br><span class="line">  <span class="comment"># reach before it starts rejecting writes.</span></span><br><span class="line">  <span class="comment"># Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k).</span></span><br><span class="line">  <span class="comment"># Values without a size suffix are in bytes.</span></span><br><span class="line">  cache-max-memory-size = <span class="string">"1g"</span>  <span class="comment"># 最大缓存大小，可以设置k,m,g</span></span><br><span class="line"></span><br><span class="line">[coordinator]</span><br><span class="line">  <span class="comment"># The default time a write request will wait until a "timeout" error is returned to the caller.</span></span><br><span class="line">  write-timeout = <span class="string">"10s"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The maximum number of concurrent queries allowed to be executing at one time.  If a query is</span></span><br><span class="line">  <span class="comment"># executed and exceeds this limit, an error is returned to the caller.  This limit can be disabled</span></span><br><span class="line">  <span class="comment"># by setting it to 0.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># max-concurrent-queries项是配置最大的可执行的命令数，此项值为零则表示无限制。</span></span><br><span class="line">  <span class="comment"># 如果你执行的命令数超过这个配置项的数量，则会报如下错误:</span></span><br><span class="line">  <span class="comment"># ERR: max concurrent queries reached</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  max-concurrent-queries = 0</span><br><span class="line"></span><br><span class="line">  <span class="comment"># The maximum time a query will is allowed to execute before being killed by the system.  This limit</span></span><br><span class="line">  <span class="comment"># can help prevent run away queries.  Setting the value to 0 disables the limit.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># query-timeout项用来配置命令的超时时间，如果命令的执行时长超过了此时间，则influxDB会杀掉这条语句并报出如下错误：</span></span><br><span class="line">  <span class="comment"># ERR: query timeout reached</span></span><br><span class="line">  <span class="comment"># 如果配置了连续查询，那么最好不要配置query-timeout超时时间，因为随着数据量的增加，连续查询生成的数据所需要的时间更长，配置之后会导致数据生成不成功。</span></span><br><span class="line">  query-timeout = <span class="string">"0"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The time threshold when a query will be logged as a slow query.  This limit can be set to help</span></span><br><span class="line">  <span class="comment"># discover slow or resource intensive queries.  Setting the value to 0 disables the slow query logging.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># log-queries-after用来配置执行时长为多少的语句会被记录为慢查询。配置为0则表示不会记录这些语句。</span></span><br><span class="line">  <span class="comment"># 比如，改项配置为“1s”，则执行时长超过1秒的语句会被标记为慢查询，并记录在日志里。</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="built_in">log</span>-queries-after = <span class="string">"10s"</span></span><br><span class="line"></span><br><span class="line">[http]</span><br><span class="line">  <span class="comment"># Determines whether HTTP endpoint is enabled.</span></span><br><span class="line">  <span class="comment"># enabled = true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The bind address used by the HTTP service.</span></span><br><span class="line">   <span class="built_in">bind</span>-address = <span class="string">":8066"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Determines whether user authentication is enabled over HTTP/HTTPS.</span></span><br><span class="line">  <span class="comment"># auth-enabled = false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The default realm sent back when issuing a basic auth challenge.</span></span><br><span class="line">  <span class="comment"># realm = "InfluxDB"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Determines whether HTTP request logging is enabled.</span></span><br><span class="line">  <span class="comment"># 默认为true,会生成很多http请求的数据，建议关闭，不然日志文件跟插入数据量成正比，大致1:1的关系</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="built_in">log</span>-enabled = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The default chunk size for result sets that should be chunked.</span></span><br><span class="line">  <span class="comment"># 查询页面显示最大记录数</span></span><br><span class="line">  max-row-limit = 10000</span><br><span class="line"></span><br><span class="line">[continuous_queries]</span><br><span class="line">  <span class="comment"># Determines whether the continuous query service is enabled.</span></span><br><span class="line">  <span class="comment"># //开启连续查询</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  enabled = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Controls whether queries are logged when executed by the CQ service.</span></span><br><span class="line">  <span class="comment"># //开启连续查询的日志，有助于异常发现</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="built_in">log</span>-enabled = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Controls whether queries are logged to the self-monitoring data store.</span></span><br><span class="line">  <span class="comment"># query-stats-enabled = false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># interval for how often continuous queries will be checked if they need to run</span></span><br><span class="line">  <span class="comment"># run-interval = "1s"</span></span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>可以看到目前两个端口都已启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl  start influxdb.service</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># netstat -nlpt | grep influxd</span></span><br><span class="line">tcp        0      0 127.0.0.1:8088          0.0.0.0:*               LISTEN      2844/influxd        </span><br><span class="line">tcp6       0      0 :::8086                 :::*                    LISTEN      2844/influxd        </span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="WEBUI"><a href="#WEBUI" class="headerlink" title="WEBUI"></a>WEBUI</h2><p>从influxdb1.3+都已经取消了web管理界面,只有安装低版本的influxdb,或者两种并存，但是需要修改数据目录指向1.8版本 参考<a href="https://blog.csdn.net/wsdc0521/article/details/106064914/。" target="_blank" rel="noopener">https://blog.csdn.net/wsdc0521/article/details/106064914/。</a></p><h2 id="命令行基本使用"><a href="#命令行基本使用" class="headerlink" title="命令行基本使用"></a>命令行基本使用</h2><p>安装完成后输入influx即可进入命令行</p><p>1.进入命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># influx</span></span><br><span class="line">Connected to http://localhost:8086 version 1.8.3</span><br><span class="line">InfluxDB shell version: 1.8.3</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>2.查看数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; show databases; <span class="comment"># 查看数据库</span></span><br><span class="line">name: databases</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">_internal   <span class="comment"># 默认系统自带数据库_internal</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>3.创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; create database roddydb;</span><br><span class="line">&gt; show databases;</span><br><span class="line">name: databases</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">_internal</span><br><span class="line">roddydb</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>4.使用数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; use roddydb</span><br><span class="line">Using database roddydb</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>5.写入数据</p><p>向cpu中新增一条记录，如果cpu这个measurement不存在，则新建一个。host，ip 称为TAG，value为值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; INSERT cpu,host=WEB,IP=172.16.2.3 value=0.64</span><br></pre></td></tr></table></figure><p>6.查询measurements(表)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; show MEASUREMENTS;</span><br><span class="line">name: measurements</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">cpu</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>7.查询全部记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from cpu</span><br><span class="line">name: cpu</span><br><span class="line">time                IP         host value</span><br><span class="line">----                --         ---- -----</span><br><span class="line">1602299302885589799 172.16.2.3 WEB  0.64</span><br><span class="line">1602299673721103381 172.16.243 WEB  0.95</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>8.筛选条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from <span class="string">"cpu"</span> <span class="built_in">where</span> value &gt; 0.8</span><br><span class="line">name: cpu</span><br><span class="line">time                IP         host value</span><br><span class="line">----                --         ---- -----</span><br><span class="line">1602299673721103381 172.16.243 WEB  0.95</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><strong>注意 ：在WHERE子句中，如果是string类型的field value，一定要用单引号括起来。如果不适用引号括起来，或者使用的是双引号，将不会返回任何数据，有时甚至都不报错！</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from <span class="string">"cpu"</span> <span class="built_in">where</span> <span class="string">"IP"</span> = <span class="string">'172.16.2.3'</span> <span class="comment"># value要为单引号</span></span><br><span class="line">name: cpu</span><br><span class="line">time                IP         host value</span><br><span class="line">----                --         ---- -----</span><br><span class="line">1602299302885589799 172.16.2.3 WEB  0.64</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; select * from <span class="string">"cpu"</span> <span class="built_in">where</span> <span class="string">"host"</span> = <span class="string">'WEB'</span></span><br><span class="line">name: cpu</span><br><span class="line">time                IP         host value</span><br><span class="line">----                --         ---- -----</span><br><span class="line">1602299302885589799 172.16.2.3 WEB  0.64</span><br><span class="line">1602299673721103381 172.16.243 WEB  0.95</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>9.删除表/measurements</p><p>方法1.删除表里的数据,直到没有数据那么该measurements就被删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; show MEASUREMENTs</span><br><span class="line">name: measurements</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">cpu</span><br><span class="line">&gt; select * from <span class="string">"cpu"</span></span><br><span class="line">name: cpu</span><br><span class="line">time                IP          host value</span><br><span class="line">----                --          ---- -----</span><br><span class="line">1602300774790998139 192.168.2.3 DB   0.12</span><br><span class="line"></span><br><span class="line">&gt; delete from cpu <span class="built_in">where</span> <span class="string">"IP"</span>=<span class="string">'192.168.2.3'</span></span><br><span class="line">&gt; select * from <span class="string">"cpu"</span></span><br><span class="line">&gt; show MEASUREMENTs</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>方法2.使用drop</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; drop MEASUREMENT cpu</span><br></pre></td></tr></table></figure><p>更多语法参考官网：<a href="https://docs.influxdata.com/influxdb/v1.8/query_language/sample-data/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.8/query_language/sample-data/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://portal.influxdata.com/downloads/" target="_blank" rel="noopener">https://portal.influxdata.com/downloads/</a></li><li><a href="https://docs.influxdata.com/influxdb/v1.8/introduction/install/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.8/introduction/install/</a></li><li><a href="https://www.jianshu.com/p/5f732c5b848e" target="_blank" rel="noopener">https://www.jianshu.com/p/5f732c5b848e</a></li><li><a href="https://docs.influxdata.com/influxdb/v1.8/query_language/sample-data/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.8/query_language/sample-data/</a></li><li><a href="https://www.cnblogs.com/suhaha/archive/2019/10/17/11692210.html" target="_blank" rel="noopener">https://www.cnblogs.com/suhaha/archive/2019/10/17/11692210.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Influxdb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> influxdb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 7.0 SMTP邮箱配置</title>
      <link href="2020/09/28/Grafana-7-0-SMTP%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE/"/>
      <url>2020/09/28/Grafana-7-0-SMTP%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="邮箱配置"><a href="#邮箱配置" class="headerlink" title="邮箱配置"></a>邮箱配置</h2><p>Grafana 以qq邮箱为例</p><p>修改grafana.ini配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># vim  /etc/grafana/grafana.ini  # 找到smtp标签</span></span><br><span class="line"><span class="comment">#################################### SMTP / Emailing ##########################</span></span><br><span class="line">[smtp]</span><br><span class="line">enabled = <span class="literal">true</span>。            <span class="comment"># 启用，默认是false</span></span><br><span class="line">host = smtp.qq.com:465      <span class="comment"># 邮箱服务器及端口</span></span><br><span class="line">user = 923401910@qq.com</span><br><span class="line"><span class="comment"># If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""</span></span><br><span class="line">password = xxxxxxxxxxx      <span class="comment"># 授权码/密码</span></span><br><span class="line">;cert_file =</span><br><span class="line">;key_file =</span><br><span class="line">;skip_verify = <span class="literal">false</span></span><br><span class="line">from_address = 923401910@qq.com <span class="comment"># 发件人账户，必须和user一致 </span></span><br><span class="line">from_name = Grafana   <span class="comment">#自定义的名字</span></span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># /etc/init.d/grafana-server restart</span></span><br><span class="line">Restarting grafana-server (via systemctl):                 [  OK  ]</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>测试结果</p><img src="/img/1601280147621.jpg"><img src="/img/1601279929133.jpg">]]></content>
      
      
      <categories>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 基础概念及用法</title>
      <link href="2020/09/28/Grafana-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%8F%8A%E7%94%A8%E6%B3%95/"/>
      <url>2020/09/28/Grafana-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%8F%8A%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Dashboard-仪表盘"><a href="#Dashboard-仪表盘" class="headerlink" title="Dashboard(仪表盘)"></a>Dashboard(仪表盘)</h3><p>仪表盘是Grafana里最为重要的一部分，它是由一行或者多行，或者多个面板组成。也就是说仪表盘可以单独由面板构成，也可以是面板和行一起构成。我们可以根据自己的需求来创建一个比较漂亮的仪表盘。<br>仪表盘也支持通过多种不同的方式来共享，支持通过链接的方式共享或者导出JSON等格式的文件。</p><p>仪表盘<br><img src="/img/1601276579189.jpg"></p><p>分享<br><img src="/img/1601275484127.jpg"></p><h3 id="Panel-面板"><a href="#Panel-面板" class="headerlink" title="Panel(面板)"></a>Panel(面板)</h3><p>面板(panel)是Grafana可视化的基本块。每个面板都有一个特定于面板中的选数据源的查询编辑器(依赖于数据源)。查询编辑器允许您提取完美的可视化效果以显示在面板上。<br>面板（或整个仪表板）可以以多种方式轻松共享，既可以通过链接分享，也可以导出JSON等文本文件。<br>为了显示数据，需要至少向Grafana添加一个数据源。同时面板可以在仪表板上拖放和重新排列。它们也可以调整大小。</p><p>比如像这样<br><img src="/img/1601274613586.jpg"></p><h3 id="Row-行"><a href="#Row-行" class="headerlink" title="Row(行)"></a>Row(行)</h3><p>行(Row)是仪表板内的逻辑分隔。用于将面板分组在一起。它一般是12个单位宽度，这些单位会根据浏览器的水平分辨率自动缩放。同时可以通过设置面板的特定宽度来控制面板中的相对宽度。<br>添加一个Row</p><p>1.添加一个面板<br><img src="/img/1601274985565.jpg"></p><p>2.修改成行<br><img src="/img/1601275067404.jpg"></p><p>3.添加完成<br>如果当前dashboard没有row，那么默认的面板将在新添加的row下。</p><p>可以编辑或者删除<br><img src="/img/1601275134123.jpg"></p><h3 id="Data-Source-数据源"><a href="#Data-Source-数据源" class="headerlink" title="Data Source(数据源)"></a>Data Source(数据源)</h3><p>数据源顾名思义就是数据来源，grafana只是作为数据可视化，需要后端提供数据。目前，Grafana官方提供了对：Graphite, InfluxDB,Mysql,OpenTSDB, Prometheus, Elasticsearch, CloudWatch,PostgreSQL等的支持。对于管理员而言，只需要将这些对象以数据源的形式添加到Grafana中，Grafana便可以轻松的实现对这些数据的可视化工作。从Grafana 3.0开始，可以将数据源安装为插件。</p><p>获得更多数据源：<a href="https://grafana.com/grafana/plugins，选择&quot;Plugin" target="_blank" rel="noopener">https://grafana.com/grafana/plugins，选择&quot;Plugin</a> Type” 为 “Data Source”即可查询数据源。</p><img src="/img/1601273969369.jpg"><h3 id="User-用户"><a href="#User-用户" class="headerlink" title="User(用户)"></a>User(用户)</h3><p>Grafana默认创建的用户为管理员账户，一般情况下如果需求开发或者给普通运维权限的话需要为每个用户单独创建一个指定的用户。并且可以给这些用户设定相关的权限。<br>在Grafana中，只有管理员可以管理用户和团队</p><img src="/img/1601277109820.jpg"><img src="/img/1601277292682.jpg"><img src="/img/1601277202629.jpg"><h3 id="Permissions-权限"><a href="#Permissions-权限" class="headerlink" title="Permissions(权限)"></a>Permissions(权限)</h3><ul><li>Admin Role（管理员角色）：可以做一切操作的组织。 例如：添加和编辑数据源。添加和编辑组织用户和团队。配置App插件并设置组织设置。</li><li>Editor Role（编辑角色）：可以创建和修改仪表板和警报规则。 可以在特定文件夹和仪表板上禁用此功能。无法创建或编辑数据源，也无法邀请新用户。</li><li>Viewer Role（查看者角色）：查看任何仪表板。 可以在特定文件夹和仪表板上禁用此功能。无法创建或编辑仪表板或数据源。</li></ul><p>重置管理员密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli  admin</span></span><br><span class="line">NAME:</span><br><span class="line">   Grafana CLI admin - Grafana admin commands</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   Grafana CLI admin <span class="built_in">command</span> [<span class="built_in">command</span> options] [arguments...]</span><br><span class="line"></span><br><span class="line">COMMANDS:</span><br><span class="line">   reset-admin-password  reset-admin-password &lt;new password&gt;</span><br><span class="line">   data-migration        Runs a script that migrates or cleanups data <span class="keyword">in</span> your db</span><br><span class="line">   <span class="built_in">help</span>, h               Shows a list of commands or <span class="built_in">help</span> <span class="keyword">for</span> one <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --<span class="built_in">help</span>, -h     show <span class="built_in">help</span> (default: <span class="literal">false</span>)</span><br><span class="line">   --version, -v  <span class="built_in">print</span> the version (default: <span class="literal">false</span>)</span><br><span class="line">   </span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli  admin reset-admin-password admin123456   # admin123456为新密码</span></span><br><span class="line">INFO[09-28|15:07:07] Connecting to DB                         logger=sqlstore dbtype=sqlite3</span><br><span class="line">INFO[09-28|15:07:07] Starting DB migrations                   logger=migrator</span><br><span class="line"></span><br><span class="line">Admin password changed successfully ✔</span><br></pre></td></tr></table></figure><h3 id="Plugins-插件"><a href="#Plugins-插件" class="headerlink" title="Plugins(插件)"></a>Plugins(插件)</h3><p>安装完Grafana后可以使用立即进行数据可视化，如果这些条件不满足，可以安装Grafana插件。也可以自己构建一个插件，构建插件<a href="https://grafana.com/docs/grafana/latest/developers/plugins/" target="_blank" rel="noopener">https://grafana.com/docs/grafana/latest/developers/plugins/</a><br>Grafana插件分为3种：1.面板  2.数据源   3.应用插件</p><p>插件位置：<a href="https://grafana.com/grafana/plugins" target="_blank" rel="noopener">https://grafana.com/grafana/plugins</a></p><p>插件安装有两种方式：</p><ul><li>使用命令行安装grafana-cli</li><li>下载插件的zip包到指定位置下</li></ul>]]></content>
      
      
      <categories>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 7.0 集成zabbix 5最新版本</title>
      <link href="2020/09/27/Grafana-%E9%9B%86%E6%88%90zabbix-5-0%E6%96%B9%E6%B3%95/"/>
      <url>2020/09/27/Grafana-%E9%9B%86%E6%88%90zabbix-5-0%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p> 使用Grafana展示zabbix监控数据会更加直观明晰，同时方便我们统一管理。很多时候监控源数据过多，这个时候就可以使用grafana统一进行展示。下面就记录下如何集成zabbix。</p><h2 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h2><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h3><p>插件说明</p><p><a href="https://grafana.com/grafana/plugins/alexanderzobnin-zabbix-app" target="_blank" rel="noopener">https://grafana.com/grafana/plugins/alexanderzobnin-zabbix-app</a></p><img src="/img/1601212533565.jpg"><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli plugins install alexanderzobnin-zabbix-app</span></span><br><span class="line">installing alexanderzobnin-zabbix-app @ 4.0.1</span><br><span class="line">from: https://grafana.com/api/plugins/alexanderzobnin-zabbix-app/versions/4.0.1/download</span><br><span class="line">into: /var/lib/grafana/plugins</span><br></pre></td></tr></table></figure><p>文件下载地址：<a href="https://grafana.com/api/plugins/alexanderzobnin-zabbix-app/versions/4.0.1/download" target="_blank" rel="noopener">https://grafana.com/api/plugins/alexanderzobnin-zabbix-app/versions/4.0.1/download</a></p><p>由于下载太慢，我们手动下载zip文件上传到服务器的<code>/var/lib/grafana/plugins</code> 解压即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># unzip alexanderzobnin-zabbix-app-4.0.1.zip </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># ls</span></span><br><span class="line">alexanderzobnin-zabbix-app  alexanderzobnin-zabbix-app-4.0.1.zip  grafana-clock-panel</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># rm -rf alexanderzobnin-zabbix-app-4.0.1.zip   # 删除压缩包</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 8 root root 4096 Sep  2 23:06 alexanderzobnin-zabbix-app</span><br><span class="line">drwxr-xr-x 5 root root 4096 Sep 27 16:13 grafana-clock-panel</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># grafana-cli plugins ls</span></span><br><span class="line">installed plugins:</span><br><span class="line">alexanderzobnin-zabbix-app @ 4.0.1</span><br><span class="line">grafana-clock-panel @ 1.1.1</span><br><span class="line"></span><br><span class="line">Restart grafana after installing plugins . &lt;service grafana-server restart&gt;</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ plugins]<span class="comment"># systemctl  restart grafana-server.service #重启服务</span></span><br></pre></td></tr></table></figure><h3 id="2-配置数据源"><a href="#2-配置数据源" class="headerlink" title="2.配置数据源"></a>2.配置数据源</h3><p>启用插件<br>在plugins设置里可以看到zabbix插件已安装<br><img src="/img/1601213739093.jpg"></p><p>点击进入插件详情-启用插件<br><img src="/img/1601213757376.jpg"></p><p>添加数据源找不到zabbix数据源。解决方法如下：</p><p>编辑grafana配置文件grafana.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># vim /etc/grafana/grafana.ini</span></span><br><span class="line">724 [plugins]</span><br><span class="line">725 ;enable_alpha = <span class="literal">false</span></span><br><span class="line">726 ;app_tls_skip_verify_insecure = <span class="literal">false</span></span><br><span class="line">727 <span class="comment"># Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature.</span></span><br><span class="line">728 ;allow_loading_unsigned_plugins =</span><br><span class="line">729 allow_loading_unsigned_plugins = alexanderzobnin-zabbix-datasource   <span class="comment"># 取消注释，并添加zabbix.允许加载未签名的插件。 这里有点疑惑，就是在plugins下提示签名正常呢，不太清楚为啥。</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl restart grafana-server.service</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>再次添加数据源就出现zabbix了</p><img src="/img/1601215182209.jpg"><p>选择并设置zabbix数据</p><img src="/img/1601215550972.jpg"><p>点击测试</p><img src="/img/1601215593450.jpg"><p>数据源添加成功<br><img src="/img/1601215667941.jpg"></p><p>导入zabbix默认仪表盘</p><img src="/img/1601215815553.jpg"><h2 id="配置Dashboard"><a href="#配置Dashboard" class="headerlink" title="配置Dashboard"></a>配置Dashboard</h2><p>点击dashboard首页即可看到刚刚导入的模版<br><img src="/img/1601215952676.jpg"></p><p>点击进入即可看到数据监控数据。</p><img src="/img/1601216074864.jpg"><p>添加自定义面板</p><p>点击add panel</p><img src="/img/1601216922175.jpg"><p>添加内存监控数据</p><img src="/img/1601216625923.jpg"><img src="/img/1601216841092.jpg"><p>保存仪表盘可以使用ctrl+s,提示我们更新插件后要丢失，这时候可以另存一个仪表盘</p><img src="/img/1601217064760.jpg"><img src="/img/1601217274736.jpg"><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li>无法添加zabbix数据源问题</li><li>数据查询慢问题，这个和服务器带宽以及grafana访问zabbix api 网络问题</li><li>下载插件太慢，手动下载file包解压安装</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://alexanderzobnin.github.io/grafana-zabbix/configuration/" target="_blank" rel="noopener">https://alexanderzobnin.github.io/grafana-zabbix/configuration/</a></li><li><a href="https://blog.csdn.net/qq_41856663/article/details/108684839" target="_blank" rel="noopener">https://blog.csdn.net/qq_41856663/article/details/108684839</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana 7.0 安装文档记录</title>
      <link href="2020/09/27/Grafana-7-0-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3%E8%AE%B0%E5%BD%95/"/>
      <url>2020/09/27/Grafana-7-0-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="grafana介绍"><a href="#grafana介绍" class="headerlink" title="grafana介绍"></a>grafana介绍</h2><p>Grafana是一个通用的可视化工具并且开源跨平台，可以通过将采集的数据查询后作数据可视化展示。grafana使用go开发也是目前最流行的架构和监控分析的数据可视化工具，并且支持非常多的数据源。<br>它目前已经更新到第7版本了。</p><p>参考grafana官网文档：<a href="https://grafana.com/docs/" target="_blank" rel="noopener">https://grafana.com/docs/</a><br>预览grafana： <a href="https://play.grafana.org/" target="_blank" rel="noopener">https://play.grafana.org/</a><br>github： <a href="https://github.com/grafana/grafana" target="_blank" rel="noopener">https://github.com/grafana/grafana</a></p><p><strong>特点</strong></p><ul><li>开源版/企业版</li><li>动态仪表盘</li><li>多数据源</li><li>警告通知</li><li>注释</li><li>过滤器</li><li>多插件</li><li>可视化</li></ul><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>下载网站：<a href="https://grafana.com/grafana/download" target="_blank" rel="noopener">https://grafana.com/grafana/download</a></p><p><strong>Ubuntu and Debian</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y adduser libfontconfig1</span><br><span class="line">wget https://dl.grafana.com/oss/release/grafana_7.2.0_amd64.deb</span><br><span class="line">sudo dpkg -i grafana_7.2.0_amd64.deb</span><br></pre></td></tr></table></figure><p><strong>Centos/RHEL/Red Hat</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-7.2.0-1.x86_64.rpm</span><br><span class="line">sudo yum install grafana-7.2.0-1.x86_64.rpm</span><br></pre></td></tr></table></figure><p><strong>OpenSUSE and SUSE</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-7.2.0-1.x86_64.rpm</span><br><span class="line">sudo rpm -i --nodeps grafana-7.2.0-1.x86_64.rpm</span><br></pre></td></tr></table></figure><p><strong>源码安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-7.2.0.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf grafana-7.2.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/grafana-server   <span class="comment">#二进制文件位置</span></span><br><span class="line">/etc/grafana/grafana.ini   <span class="comment">#配置文件</span></span><br><span class="line">/var/run/grafana/grafana-server.pid <span class="comment">#默认pid文件</span></span><br><span class="line">/etc/init.d/grafana-server <span class="comment">#启动脚本</span></span><br><span class="line">/etc/sysconfig/grafana-server <span class="comment">#默认环境变量</span></span><br><span class="line">/var/<span class="built_in">log</span>/grafana/grafana.log <span class="comment">#日志文件</span></span><br><span class="line">/var/lib/grafana/grafana.db <span class="comment">#默认指定的sqlite3数据库</span></span><br><span class="line">/var/lib/grafana/plugins <span class="comment">#插件目录</span></span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>以下在centos 7下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl start grafana-server #启动服务</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl status grafana-server</span></span><br><span class="line">● grafana-server.service - Grafana instance</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sun 2020-09-27 15:35:18 CST; 7s ago</span><br><span class="line">     Docs: http://docs.grafana.org</span><br><span class="line"> Main PID: 19491 (grafana-server)</span><br><span class="line">   CGroup: /system.slice/grafana-server.service</span><br><span class="line">           └─19491 /usr/sbin/grafana-server --config=/etc/grafana/grafana.ini --pidfile=/var/run/grafana/grafana-server.pid --packaging=rpm cfg:default.paths.logs...</span><br><span class="line"></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Executing migration"</span> logger=migrator id=<span class="string">"add uniqu...h_token"</span></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Executing migration"</span> logger=migrator id=<span class="string">"add uniqu...h_token"</span></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Executing migration"</span> logger=migrator id=<span class="string">"create ca...a table"</span></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Executing migration"</span> logger=migrator id=<span class="string">"add uniqu...che_key"</span></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Created default admin"</span> logger=sqlstore user=admin</span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Starting plugin search"</span> logger=plugins</span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"Registering plugin"</span> logger=plugins name=<span class="string">"Direct Input"</span></span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"External plugins directory created"</span> logger=plugins.../plugins</span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ systemd[1]: Started Grafana instance.</span><br><span class="line">Sep 27 15:35:18 iZ2zecgq3cou36re3sxh4bZ grafana-server[19491]: t=2020-09-27T15:35:18+0800 lvl=info msg=<span class="string">"HTTP Server Listen"</span> logger=http.server address=[::... socket=</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl enable grafana-server  # 开机启动</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service.</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>默认启动端口3000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># netstat -nlpt | grep grafana</span></span><br><span class="line">tcp6       0      0 :::3000                 :::*                    LISTEN      19491/grafana-serve </span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>访问<code>http://ip:3000</code>端口，输入默认用户密码<code>admin/admin</code></p><img src="/img/1601193121740.jpg"><p>第一次登陆后需要修改密码<br><img src="/img/1601193157252.jpg"></p><p>登录成功</p><img src="/img/1601193371531.jpg"><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>插件安装工具 grafana-cli </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli plugins</span></span><br><span class="line">NAME:</span><br><span class="line">   Grafana CLI plugins - Manage plugins <span class="keyword">for</span> grafana</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   Grafana CLI plugins <span class="built_in">command</span> [<span class="built_in">command</span> options] [arguments...]</span><br><span class="line"></span><br><span class="line">COMMANDS:</span><br><span class="line">   install                  install &lt;plugin id&gt; &lt;plugin version (optional)&gt; <span class="comment"># 安装插件</span></span><br><span class="line">   list-remote              list remote available plugins <span class="comment">#列出插件</span></span><br><span class="line">   list-versions            list-versions &lt;plugin id&gt; <span class="comment"># 列出插件版本</span></span><br><span class="line">   update, upgrade          update &lt;plugin id&gt; <span class="comment">#更新插件</span></span><br><span class="line">   update-all, upgrade-all  update all your installed plugins <span class="comment"># 更新所有已安装的插件</span></span><br><span class="line">   ls                       list all installed plugins <span class="comment"># 列出已安装的插件</span></span><br><span class="line">   uninstall, remove        uninstall &lt;plugin id&gt; <span class="comment">#卸载插件</span></span><br><span class="line">   <span class="built_in">help</span>, h                  Shows a list of commands or <span class="built_in">help</span> <span class="keyword">for</span> one <span class="built_in">command</span> <span class="comment">#帮助信息</span></span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --<span class="built_in">help</span>, -h     show <span class="built_in">help</span> (default: <span class="literal">false</span>)</span><br><span class="line">   --version, -v  <span class="built_in">print</span> the version (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>列出可用插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli plugins list-remote</span></span><br><span class="line">id: abhisant-druid-datasource version: 0.0.5</span><br><span class="line">id: aceiot-svg-panel version: 0.0.8</span><br><span class="line">id: agenty-flowcharting-panel version: 0.9.0</span><br><span class="line">id: aidanmountford-html-panel version: 0.0.1</span><br><span class="line">id: akumuli-datasource version: 1.3.11</span><br><span class="line">id: alexanderzobnin-zabbix-app version: 4.0.1</span><br><span class="line">id: alexandra-trackmap-panel version: 1.2.5</span><br><span class="line">id: andig-darksky-datasource version: 1.0.1</span><br><span class="line">id: aquaqanalytics-kdbadaptor-datasource version: 1.0.1</span><br><span class="line">id: ayoungprogrammer-finance-datasource version: 1.0.0</span><br><span class="line">id: belugacdn-app version: 1.2.0</span><br><span class="line">id: bessler-pictureit-panel version: 1.0.0</span><br><span class="line">id: blackmirror1-singlestat-math-panel version: 1.1.7</span><br><span class="line">id: blackmirror1-statusbygroup-panel version: 1.1.1</span><br></pre></td></tr></table></figure><p>查看插件</p><p>在configuration-&gt;plugins</p><img src="/img/1601193724397.jpg"><p>更多插件安装<br><a href="https://grafana.com/grafana/plugins?utm_source=grafana_plugin_list" target="_blank" rel="noopener">https://grafana.com/grafana/plugins?utm_source=grafana_plugin_list</a></p><p>安装插件<br><img src="/img/1601193688432.jpg"></p><p>选择一个插件,点击install，可以在预览里看到插件的效果<br><img src="/img/1601194460181.jpg"></p><p>安装方式<br><img src="/img/1601194729085.jpg"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli plugins install grafana-clock-panel</span></span><br><span class="line">installing grafana-clock-panel @ 1.1.1</span><br><span class="line">from: https://grafana.com/api/plugins/grafana-clock-panel/versions/1.1.1/download</span><br><span class="line">into: /var/lib/grafana/plugins</span><br><span class="line"></span><br><span class="line">✔ Installed grafana-clock-panel successfully </span><br><span class="line"></span><br><span class="line">Restart grafana after installing plugins . &lt;service grafana-server restart&gt;</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>重启后查看安装的插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># service grafana-server restart</span></span><br><span class="line">Restarting grafana-server (via systemctl):                 [  OK  ]</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># grafana-cli plugins ls</span></span><br><span class="line">installed plugins:</span><br><span class="line">grafana-clock-panel @ 1.1.1</span><br><span class="line"></span><br><span class="line">Restart grafana after installing plugins . &lt;service grafana-server restart&gt;</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># ll /var/lib/grafana/plugins/ #查看插件安装目录</span></span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 5 root root 4096 Sep 27 16:13 grafana-clock-panel</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><img src="/img/1601194972424.jpg"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://grafana.com/get" target="_blank" rel="noopener">https://grafana.com/get</a></li><li><a href="https://grafana.com/docs/grafana/latest/" target="_blank" rel="noopener">https://grafana.com/docs/grafana/latest/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Grafana </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 5.0 自动发现和自动注册</title>
      <link href="2020/09/26/zabbix-%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0/"/>
      <url>2020/09/26/zabbix-%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="自动发现"><a href="#自动发现" class="headerlink" title="自动发现"></a>自动发现</h2><p>zabbix监控系统提供了有效且灵活的自动发现功能,该功能在大规模部署监控时非常有用。主要由server端发起发现进程，定时扫描。主要有以下优点:</p><ul><li>加快Zabbix部署</li><li>简化管理</li><li>在快速变化的环境中使用Zabbix，无需过多管理</li></ul><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><p>自动发现基于以下信息</p><ul><li>可用的外部服务（FTP、SSH、WEB、POP3、IMAP、TCP 等）</li><li>来自 Zabbix 客户端的信息（仅支持未加密模式）</li><li>来自 SNMP 客户端的信息</li></ul><p><strong>自动发现包含两个阶段 1.发现  2.动作</strong>，也就是说发现过后接下来是干什么</p><h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><ul><li>发送通知</li><li>添加/删除主机</li><li>启用/禁用主机</li><li>将主机添加到组</li><li>从组中删除主机</li><li>将主机链接到模板/从模板取消链接</li><li>执行远程脚本</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>1.当前只有一个server<br><img src="/img/1601175498384.jpg"></p><p>2.创建自动发现规则</p><img src="/img/1601178520143.jpg"><img src="/img/1601181268292.jpg"><p>3.客户端配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=172.19.153.95</span><br><span class="line">StartAgents=3</span><br><span class="line">ServerActive=172.19.153.95</span><br><span class="line">Hostname=web</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><p>4.添加动作<br>关联自动发现规则<br><img src="/img/1601181361657.jpg"></p><p>5.在自动发现中查看是否已发现新的主机<br><img src="/img/1601180787163.jpg"></p><p>6.开始监控<br><img src="/img/1601181541082.jpg"></p><h2 id="自动注册"><a href="#自动注册" class="headerlink" title="自动注册"></a>自动注册</h2><p>Zabbix Active agent可以实现自动注册，进而服务器对其进行监控。通过这种方式，无需在服务器上进行手动配置便可直接启动对新host的监控。主要由客户端发起，并且需要安装agent服务。<br>在当前我们自己的云应用环境中，我更加倾向于使用自动注册。</p><h3 id="自动重新注册规则"><a href="#自动重新注册规则" class="headerlink" title="自动重新注册规则"></a>自动重新注册规则</h3><ul><li>如果主机元数据信息更改：</li></ul><ul><li>由于HostMetadata已更改并且代理已重新启动</li><li>由于HostMetadataItem返回的值已更改</li></ul><ul><li>用于缺少元数据的手动创建的主机</li><li>如果手动将主机更改为由另一个Zabbix代理监视</li><li>如果同一主机的自动注册来自新的Zabbix代理</li></ul><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>1.当前只有一个server<br><img src="/img/1601175498384.jpg"><br>2.配置客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=47.93.184.140</span><br><span class="line">StartAgents=3</span><br><span class="line">ServerActive=47.93.184.140</span><br><span class="line">Hostname=webserver-01</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><p>3.配置规则<br>动作-左上角选择类型（autoregistration actions）<br><img src="/img/1601175880627.jpg"></p><p>创建动作（可以选择主机名，主机源数据，agent数据等）</p><p>主机名包含<code>webserver</code><br><img src="/img/1601175941018.jpg"></p><p>选择操作选项卡<br>关联以下操作<br><img src="/img/1601176104621.jpg"></p><p>解释</p><ul><li>发送消息给administrators组</li><li>添加主机</li><li>关联到linux servers组</li><li>关联zabbix agent模版</li></ul><p>以上如果匹配成功，即按上面流程完成自动注册操作</p><p>创建完成后确保状态为<code>已启用</code><br><img src="/img/1601176137428.jpg"></p><p>等待1-2分钟检查，查看已经添加成功<br><img src="/img/1601176269130.jpg"></p><p>检查是否自动注册通知，我们使用的微信报警，参考前面文章<br><a href="http://roddypy.com/2020/09/23/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E5%BE%AE%E4%BF%A1/" target="_blank" rel="noopener">http://roddypy.com/2020/09/23/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E5%BE%AE%E4%BF%A1/</a></p><img src="/img/WechatIMG72.jpeg"><p>需要在报警媒介关联自动注册通知</p><img src="/img/1601176495624.jpg"><h2 id="两者对比"><a href="#两者对比" class="headerlink" title="两者对比"></a>两者对比</h2><ul><li>自动发现和自动注册都可以添加主机、监控主机</li><li>自动发现规则较多</li><li>自动注册，注册方式少，需要安装agent由客户端主动上报数据，前提是需要能连通服务器</li><li>自动发现由于规则多，网段大的情况下会导致压力大，时间消耗多。</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.zabbix.com/documentation/current/manual/discovery/auto_registration" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manual/discovery/auto_registration</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 主动模式和被动模式</title>
      <link href="2020/09/23/zabbix-%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F/"/>
      <url>2020/09/23/zabbix-%E4%B8%BB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>zabbix监控有两种数据获取模式，一种是主动模式，另一种为被动模式。这种模式的对象都是对于agent而言的，默认情况下zabbix使用的是被动模式。对于小规模业务监控下，使用被动模式具有模版多、灵活配置等优点。如果监控的服务器过多就会导致server端压力，这时候有两种办法，一种增加zabbix proxy（分摊server的压力） ，另一种就可以采用主动模式监控。并且需要手动修改监控的模版为主动模式。</p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>两者区别在于连接方向问题</p><p>被动模式：agent启动10050端口进行监听，等待server端向agent轮询请求获取监控项的监控数据，由agent返回。<br>主动模式：由agent请求server获取主动的监控项列表，主动将监控项内需要检测的数据通过10050提交给server/proxy的10051端口。</p><p>参考图：<br><img src="/img/1601103020689.jpg"></p><h2 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h2><p>被动模式的优点就是配置简单，安装后即可使用，因此也成为zabbix的默认工作模式，但是被动模式的 最大问题就是会加大zabbix server的工作量，在数百甚至数干台服务器的环境下会导致zabbix server需要轮训向每个zabbix agent发送数据采集指令，如果zabbix server负载很高还会导致不能及时获取到最新数据，但由于无需其他复杂配置，被设置为了默认的工作方式。</p><p>被动模式agent上会看到有由server端来的很多连接及端口打开状态，如果压力大的话监控项过多确实抗不住。</p><img src="/img/1601105713946.jpg"><h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><p>主动模式是由zabbix agent主动向zabbix server的10051端口发起tcp连接请求,因此主动模式下必须 在zabbix agent配置文件中指定zabbix server的IP或者主机名(必须可以被解析为IP地址),在连接到 zabbix server之前zabbix agent是不知道自己要采集那些数据以及间隔多久采集一次数据的，然后在连接到zabbix server以后获取到自己的监控项和数据采集间隔周期时间，然后再根据监控项采集数据并返 回给zabbix server,在主动模式下不再需要zabbix serve向zabbix agent发起连接请求，因此主动模式 在一定程度上可减轻zabbix server打开的本地随机端口和进程数,在-定程度就减轻看 zabbix server 的压力。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=47.93.184.140</span><br><span class="line">StartAgents=3                <span class="comment"># 如果为0被动模式将被禁用</span></span><br><span class="line">ServerActive=47.93.184.140   <span class="comment"># 主动模式serverip</span></span><br><span class="line">Hostname=webserver.roddypy.com</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><p>连接模版为active模式<br><img src="/img/1601106883148.jpg"></p><p>查看agent连接,可以看到连接数减少了，并且通过连接10051端口</p><img src="/img/1601107160560.jpg"><p>查看监控</p><p>主动模式监控正常</p><img src="/img/1601107319046.jpg"><p>查看绘图</p><img src="/img/1601107243756.jpg"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.zabbix.com/zabbix-agent-active-vs-passive/9207/" target="_blank" rel="noopener">https://blog.zabbix.com/zabbix-agent-active-vs-passive/9207/</a></li><li><a href="https://blog.csdn.net/qq_43753220/article/details/104747307" target="_blank" rel="noopener">https://blog.csdn.net/qq_43753220/article/details/104747307</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 监控报警(微信)</title>
      <link href="2020/09/23/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E5%BE%AE%E4%BF%A1/"/>
      <url>2020/09/23/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E5%BE%AE%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="微信报警"><a href="#微信报警" class="headerlink" title="微信报警"></a>微信报警</h2><p>微信报警我们要借助企业微信来实现，以前有个迪三方平台“方糖”也可以实现消息发送，有兴趣后面可以学习研究下。</p><p>注册地址:<a href="https://work.weixin.qq.com" target="_blank" rel="noopener">https://work.weixin.qq.com</a></p><h2 id="创建企业微信"><a href="#创建企业微信" class="headerlink" title="创建企业微信"></a>创建企业微信</h2><p>1.注册一个企业微信，填写相关信息<br><img src="/img/1600827986179.jpg"><br>2.下载企业微信或者直接进入后台<br><img src="/img/1600828055536.jpg"><br>3.进入管理后台<br><img src="/img/1600828078522.jpg"><br>4.在通讯录中创建一个部门<br><img src="/img/1600828177906.jpg"><br>5.可以手动添加一个成员<br><img src="/img/1600828280510.jpg"><br>也可以分享二维码给其他用户，让其加入进来<br><img src="/img/1600828399179.jpg"><br>6.在应用管理中-创建应用<br><img src="/img/1600828588503.jpg"><br>可见范围可以选择人也可以选择部门，最好是选择部门<br><img src="/img/1600831393505.jpg"><br>7.记录下Agentid和secret,以及企业号<br><img src="/img/1600828629239.jpg"><br>查看企业号<br><img src="/img/1600829144011.jpg"></p><h2 id="报警脚本"><a href="#报警脚本" class="headerlink" title="报警脚本"></a>报警脚本</h2><p>python 报警脚本样例</p><p>头部需要声明python 否则zabbix执行时无法识别</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python2.7</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2017/4/23 11:13</span></span><br><span class="line"><span class="comment"># @Author  : roddy</span></span><br><span class="line"><span class="comment"># @Email   : xblinux05@gmail.com</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChatAlert</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,user,subject,content)</span>:</span></span><br><span class="line">        self.user=user</span><br><span class="line">        self.subject = subject</span><br><span class="line">        self.content = content</span><br><span class="line">        self.agent_id = <span class="string">"1000002"</span>  <span class="comment">#agentid</span></span><br><span class="line">        self.corpid = <span class="string">"xxxxx"</span>   <span class="comment"># 企业号</span></span><br><span class="line">        self.secret = <span class="string">"zN6xTHu-xxxxxxxxx"</span> <span class="comment">#密钥</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">(self)</span>:</span></span><br><span class="line">        token_url = <span class="string">'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#123;corpid&#125;&amp;corpsecret=&#123;secret&#125;'</span>.format(</span><br><span class="line">            corpid=self.corpid,secret=self.secret)</span><br><span class="line"></span><br><span class="line">        token_data = requests.get(token_url).json()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            token = token_data[<span class="string">"access_token"</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">"token 获取失败"</span>)</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send</span><span class="params">(self)</span>:</span></span><br><span class="line">        send_url = <span class="string">'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#123;0&#125;'</span>.format(self.get_token())</span><br><span class="line">        send_values = &#123;</span><br><span class="line">            <span class="string">"touser"</span>: <span class="string">"LuoDi"</span>, <span class="comment"># 企业号中的用户帐号</span></span><br><span class="line">            <span class="string">"msgtype"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"toparty"</span>: <span class="number">1</span>,     <span class="comment"># 部门id,鼠标移动到部门上可查看，群发使用</span></span><br><span class="line">            <span class="string">"agentid"</span>: self.agent_id,</span><br><span class="line">            <span class="string">"text"</span>: &#123;</span><br><span class="line">                <span class="string">"content"</span>: self.subject + <span class="string">"\n"</span> + self.content</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"safe"</span>: <span class="string">"0"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> int(sys.version_info[<span class="number">0</span>]) == <span class="number">3</span>:</span><br><span class="line">            r = requests.post(send_url, data=json.dumps(send_values,ensure_ascii=<span class="literal">False</span>).encode(<span class="string">"utf-8"</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = requests.post(send_url, data=json.dumps(send_values, ensure_ascii=<span class="literal">False</span>))</span><br><span class="line">        <span class="keyword">return</span> r.content</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    wechat = WeChatAlert(str(sys.argv[<span class="number">1</span>]),str(sys.argv[<span class="number">2</span>]),str(sys.argv[<span class="number">3</span>]))</span><br><span class="line">    print(wechat.send())</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(july_3.5) luodi@roddydeMacBook-Pro:~/PycharmProjects/huobipool$ python wechatMessage.py  <span class="string">""</span> <span class="string">"测试主题"</span> <span class="string">"报警了"</span></span><br><span class="line">b<span class="string">'&#123;"errcode":0,"errmsg":"ok","invaliduser":""&#125;'</span></span><br><span class="line">(july_3.5) luodi@roddydeMacBook-Pro:~/PycharmProjects/huobipool$</span><br></pre></td></tr></table></figure><p>检查用户是否收到消息</p><img src="/img/WechatIMG71.jpeg"><h2 id="配置zabbix"><a href="#配置zabbix" class="headerlink" title="配置zabbix"></a>配置zabbix</h2><p>安装环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment"># yum install python-pip  #安装python-pip</span></span><br><span class="line"></span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment"># pip install requests  #安装requests</span></span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment"># python</span></span><br><span class="line">Python 2.7.5 (default, Apr  2 2020, 13:16:51) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import requests</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>我们使用yum安装的zabbix，默认脚本路径可以在zabbix_server.conf中查看”AlertScriptsPath”.可以自定义路径</p><p>上传脚本文件到该目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># cd /usr/lib/zabbix/alertscripts/</span></span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment"># ls</span></span><br><span class="line">wechatMessage.py</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>再次测试</p><p><strong>(务必要在真实服务器上测试)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment"># python wechatMessage.py "" "jj" "22"</span></span><br><span class="line">&#123;<span class="string">"errcode"</span>:0,<span class="string">"errmsg"</span>:<span class="string">"ok"</span>,<span class="string">"invaliduser"</span>:<span class="string">""</span>&#125;</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ alertscripts]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>添加报警媒介</p><p>注意脚本名为alertscripts中的文件名</p><img src="/img/1600833807493.jpg"><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p>选择模版</p><img src="/img/1600837343436.jpg"><p>添加用户，并且选择报警媒介为wechat 收件人填写应用ID,我是直接在admin用户上添加的多报警方式。</p><img src="/img/1600836264272.jpg"><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>down掉一个服务或者主机来查看，或者自定义报警测试。</p><p>报警<br><img src="/img/WechatIMG124.jpeg"></p><p>恢复<br><img src="/img/WechatIMG123.jpeg"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li>脚本一定要放到服务器上测试</li><li>添加收件人应为应用id</li><li>选择部门id群发消息</li><li>建议部门中设定报警级别，不同报警级别给不同的部门</li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 监控报警(邮件)</title>
      <link href="2020/09/22/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E9%82%AE%E4%BB%B6/"/>
      <url>2020/09/22/zabbix-%E7%9B%91%E6%8E%A7%E6%8A%A5%E8%AD%A6-%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="邮件报警"><a href="#邮件报警" class="headerlink" title="邮件报警"></a>邮件报警</h2><p>邮件报警对于运维来说还是比较实用的，免费且方便配置，只是如果报警邮件过多可能会导致报警信息遗漏。这点需要运维知悉！</p><p>1.登录qq邮箱-账户-获取独立密码</p><img src="/img/1600758765796.jpg"><p>2.添加报警媒介 QQemail</p><img src="/img/1600759822428.jpg"><p>3.设置用户报警媒介并且指定消息接收人</p><img src="/img/1600758960610.jpg"><p>4.启用trigger actions<br><img src="/img/1600758995623.jpg"></p><p>新版本把actions的分类移动到了上面进行选择</p><img src="/img/1600761785640.jpg"><h2 id="测试报警结果"><a href="#测试报警结果" class="headerlink" title="测试报警结果"></a>测试报警结果</h2><p>手动测试我们的报警规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 601 -vv</span></span><br><span class="line">zabbix_sender [23894]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000029"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000029"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 603 -vv</span></span><br><span class="line">zabbix_sender [23899]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000078"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000078"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 604 -vv</span></span><br><span class="line">zabbix_sender [23901]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000087"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000087"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>仪表盘已经提示出问题</p><img src="/img/1600759212718.jpg"><p>打开邮箱确认下报警信息</p><img src="/img/1600760029926.jpg"><p>发现邮件为啥是html的文本格式呢，貌似我们在报警媒介那个地方选择过。现在调整成html看看。</p><img src="/img/1600760134231.jpg"><p>修改后的结果</p><img src="/img/1600760238959.jpg"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Problem started at 15:36:56 on 2020.09.22</span><br><span class="line">Problem name: UsersCount</span><br><span class="line">Host: webserver.roddypy.com</span><br><span class="line">Severity: Average</span><br><span class="line">Operational data: 608 个</span><br><span class="line">Original problem ID: 74</span><br></pre></td></tr></table></figure><h2 id="修改报警模版"><a href="#修改报警模版" class="headerlink" title="修改报警模版"></a>修改报警模版</h2><p>默认模版为以上英文信息，同时主题和内容我们详细信息不多。我们是否可以设置一个新的模版呢，答案可以。</p><p>在报警媒介-模版中可以设置-记着点<code>更新</code><br><img src="/img/1600760523771.jpg"></p><p>注意：如果以下信息作为模版请选择Message format为 ”文本”，如果以html格式请选择html模版</p><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><p>报警通知模版</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">主题：</span></span><br><span class="line"><span class="xml">Problem: </span><span class="template-variable">&#123;EVENT.NAME&#125;</span><span class="xml">故障</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">,服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml">发生: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml">故障!</span></span><br><span class="line"><span class="xml">内容：</span></span><br><span class="line"></span><br><span class="line"><span class="xml">告警主机:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span></span><br><span class="line"><span class="xml">告警时间:</span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span></span><br><span class="line"><span class="xml">告警等级:</span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span></span><br><span class="line"><span class="xml">告警信息: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span></span><br><span class="line"><span class="xml">告警项目:</span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span></span><br><span class="line"><span class="xml">问题详情:</span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span></span><br><span class="line"><span class="xml">当前状态:</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span></span><br><span class="line"><span class="xml">事件ID:</span><span class="template-variable">&#123;EVENT.ID&#125;</span></span><br></pre></td></tr></table></figure><p>报警恢复模版</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">主题：</span></span><br><span class="line"><span class="xml">恢复</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">, 服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml">: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml">已恢复!</span></span><br><span class="line"><span class="xml">内容：</span></span><br><span class="line"><span class="xml">告警主机:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>故障问题已恢复<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="xml">告警时间:</span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span></span><br><span class="line"><span class="xml">告警等级:</span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span></span><br><span class="line"><span class="xml">告警信息: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span></span><br><span class="line"><span class="xml">告警项目:</span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span></span><br><span class="line"><span class="xml">问题详情:</span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span></span><br><span class="line"><span class="xml">当前状态:</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span></span><br><span class="line"><span class="xml">事件ID:</span><span class="template-variable">&#123;EVENT.ID&#125;</span></span><br></pre></td></tr></table></figure><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p>报警通知模版</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">主题：</span></span><br><span class="line"><span class="xml">Problem: </span><span class="template-variable">&#123;EVENT.NAME&#125;</span><span class="xml">故障</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">,服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml">发生: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml">故障!</span></span><br><span class="line"><span class="xml">内容：</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警主机:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警时间:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警等级:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警信息: <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警项目:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>问题详情:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>当前状态:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>事件ID:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;EVENT.ID&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>报警恢复模版</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">主题：</span></span><br><span class="line"><span class="xml">恢复</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">, 服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml">: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml">已恢复!</span></span><br><span class="line"></span><br><span class="line"><span class="xml">内容：</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>故障问题已恢复<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警主机:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警时间:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警等级:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警信息:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>告警项目:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>问题详情:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>当前状态:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>事件ID:<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><span class="template-variable">&#123;EVENT.ID&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>结果：<br><img src="/img/1600761265204.jpg"></p><h2 id="故障日志排查"><a href="#故障日志排查" class="headerlink" title="故障日志排查"></a>故障日志排查</h2><p>如果配置了报警仪表盘有提示，但是没有收到报警，这个时候就要去查看zabbix_server.log日志</p><p>最开始我就是配置端口错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># tailf /var/log/zabbix/zabbix_server.log</span></span><br><span class="line"> 28695:20200922:135040.315 housekeeper [deleted 0 hist/trends, 0 items/triggers, 0 events, 0 problems, 0 sessions, 0 alarms, 0 audit, 0 records <span class="keyword">in</span> 0.002269 sec, idle <span class="keyword">for</span> 1 hour(s)]</span><br><span class="line"> 28695:20200922:145040.534 executing housekeeper</span><br><span class="line"> 28695:20200922:145040.537 housekeeper [deleted 0 hist/trends, 0 items/triggers, 0 events, 0 problems, 0 sessions, 0 alarms, 0 audit, 0 records <span class="keyword">in</span> 0.002225 sec, idle <span class="keyword">for</span> 1 hour(s)]</span><br><span class="line"> 28719:20200922:151620.874 watchdog: 1 recipient(s) found <span class="keyword">for</span> database down messages</span><br><span class="line"> 28722:20200922:151922.945 failed to send email: Couldn<span class="string">'t connect to server: Failed connect to mail.qq.com:25; Operation now in progress</span></span><br><span class="line"><span class="string"> 28720:20200922:152007.968 failed to send email: Couldn'</span>t connect to server: Failed connect to mail.qq.com:25; Operation now <span class="keyword">in</span> progress</span><br><span class="line"> 28721:20200922:152052.989 failed to send email: Couldn<span class="string">'t connect to server: Failed connect to mail.qq.com:25; Operation now in progress</span></span><br><span class="line"><span class="string">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]#</span></span><br></pre></td></tr></table></figure><p>以上方式由平台提供的email配置，还有一种方法是通过py脚本来发邮件，两种方式都可以。哪个方便用哪个即可，目前邮件报警还是业内比较常用的报警方式之一</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.cnblogs.com/itzhao/p/11298301.html" target="_blank" rel="noopener">https://www.cnblogs.com/itzhao/p/11298301.html</a></li><li><a href="https://www.zabbix.com/documentation/current/manual/config/notifications/media/email" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manual/config/notifications/media/email</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 触发器和报警媒介</title>
      <link href="2020/09/22/zabbix-%E8%A7%A6%E5%8F%91%E5%99%A8%E5%92%8C%E6%8A%A5%E8%AD%A6%E5%AA%92%E4%BB%8B/"/>
      <url>2020/09/22/zabbix-%E8%A7%A6%E5%8F%91%E5%99%A8%E5%92%8C%E6%8A%A5%E8%AD%A6%E5%AA%92%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><p>所谓触发器就是根据监控项指标的返回值来判断属于什么状态。触发器用于给监控项定义具体的阈值，每一个触发器管理一个监控项，但是可以为一个监控项目定义多个触发器。定义的条件不同，就可以实现不同级别的报警。比如cpu使用率 达到40% 什么状态，70%是什么状态 90%又是什么状态。触发器由表达式构成，定义监控项的采集数据的一个阈值，根据触发器表达式的判断决定触发器状态。</p><p>设置触发器，可以关联模版，也可以单独对一个主机定义触发器</p><h3 id="触发器状态"><a href="#触发器状态" class="headerlink" title="触发器状态"></a>触发器状态</h3><ul><li>未分类 (Not classified)</li><li>信息(Infomation)</li><li>警告(Warning)</li><li>一般严重(Average)</li><li>严重(High)</li><li>灾难(Disaster)</li></ul><h3 id="表达式常见用法"><a href="#表达式常见用法" class="headerlink" title="表达式常见用法"></a>表达式常见用法</h3><p>官网参考：<a href="https://www.zabbix.com/documentation/current/manual/config/triggers/expression" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manual/config/triggers/expression</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;www.roddypy.com:system.cpu.load[all,avg1].last()&#125;&gt;5</span><br><span class="line"></span><br><span class="line">表示：获取到roddypy.com服务器负载system.cpu.load[all,avg1] 最新数据，如果大于5就表示有问题</span><br></pre></td></tr></table></figure><p>判断语法</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">last</span><span class="params">( )</span></span>  获取到的最新信息(数值) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">max</span><span class="params">( )</span></span>   在一定周期内,收集到的最大值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">min</span><span class="params">( )</span></span>   在一定周期内,收集到的最小值</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">diff</span><span class="params">()</span></span>   在一定时间内,判断收集到的信息是否不同</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">change</span><span class="params">()</span></span>  在一定时间内,判断收集到的信息是否不同</span><br><span class="line"><span class="function"><span class="title">avg</span><span class="params">()</span></span>   取一段时间的平均值</span><br></pre></td></tr></table></figure><img src="/img/1600756889235.jpg"><p>创建触发器样例</p><p>如果UsersCount最后3次获取的数据都&gt;600进行触发<br><img src="/img/1600757144366.jpg"></p><h2 id="报警媒介"><a href="#报警媒介" class="headerlink" title="报警媒介"></a>报警媒介</h2><p>报警媒介就是触发报警后需要将信息通过短信、邮箱、微信、或者第三方应用告知管理员，这个时候短信这种方式就是报警媒介。监控系统最主要的功能就是两个：1.数据采集做监控 2.通过设定的规则进行报警通知</p><p>zabbix 5.0默认支持以下报警媒介</p><img src="/img/1600756055991.jpg"><p>对于国内运维常用的报警媒介主要有以下几种</p><ul><li><strong><em>SMS 短信报警</em></strong> 需要短信付费</li><li><strong><em>Email 邮件报警</em></strong></li><li><strong><em>wechat 微信报警</em></strong></li><li><strong><em>telegram 电报</em></strong>  等等</li><li>集成第三方平台</li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix sender和get使用方法</title>
      <link href="2020/09/22/zabbix-sender%E5%92%8Cget%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>2020/09/22/zabbix-sender%E5%92%8Cget%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="zabbix-sender"><a href="#zabbix-sender" class="headerlink" title="zabbix_sender"></a>zabbix_sender</h2><p>zabbix_sender 是用于将监视数据发送到Zabbix服务器或代理的命令行实用程序。也就是说可以在客户端主动上报数据给zabbix服务器，前提需要配置具体的监控项（items)。</p><p>zabbix_sender安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># yum install zabbix-sender -y</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * centos-sclo-rh: mirrors.huaweicloud.com</span><br><span class="line"> * centos-sclo-sclo: mirrors.bfsu.edu.cn</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package zabbix-sender.x86_64 0:5.0.3-1.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line"> Package                                    Arch                                Version                                    Repository                           Size</span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> zabbix-sender                              x86_64                              5.0.3-1.el7                                zabbix                              348 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 348 k</span><br><span class="line">Installed size: 1.5 M</span><br><span class="line">Downloading packages:</span><br><span class="line">zabbix-sender-5.0.3-1.el7.x86_64.rpm                                                                                                          | 348 kB  00:00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : zabbix-sender-5.0.3-1.el7.x86_64                                                                                                                  1/1 </span><br><span class="line">  Verifying  : zabbix-sender-5.0.3-1.el7.x86_64                                                                                                                  1/1 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  zabbix-sender.x86_64 0:5.0.3-1.el7                                                                                                                                 </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Example(s):</span><br><span class="line">  zabbix_sender -z 127.0.0.1 -s <span class="string">"Linux DB3"</span> -k db.connections -o 43</span><br><span class="line"></span><br><span class="line">  zabbix_sender -z 127.0.0.1 -s <span class="string">"Linux DB3"</span> -k db.connections -o 43 \</span><br><span class="line">    --tls-connect cert --tls-ca-file /home/zabbix/zabbix_ca_file \</span><br><span class="line">    --tls-server-cert-issuer \</span><br><span class="line">    <span class="string">"CN=Signing CA,OU=IT operations,O=Example Corp,DC=example,DC=com"</span> \</span><br><span class="line">    --tls-server-cert-subject \</span><br><span class="line">    <span class="string">"CN=Zabbix proxy,OU=IT operations,O=Example Corp,DC=example,DC=com"</span> \</span><br><span class="line">    --tls-cert-file /home/zabbix/zabbix_agentd.crt \</span><br><span class="line">    --tls-key-file /home/zabbix/zabbix_agentd.key</span><br><span class="line"></span><br><span class="line">  zabbix_sender -z 127.0.0.1 -s <span class="string">"Linux DB3"</span> -k db.connections -o 43 \</span><br><span class="line">    --tls-connect psk --tls-psk-identity <span class="string">"PSK ID Zabbix agentd"</span> \</span><br><span class="line">    --tls-psk-file /home/zabbix/zabbix_agentd.psk</span><br></pre></td></tr></table></figure><p>常见参数说明，具体参考文档:<a href="https://www.zabbix.com/documentation/current/manpages/zabbix_sender?s[]=sender" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manpages/zabbix_sender?s[]=sender</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-z 指定zabbix server ip</span><br><span class="line">-s 指定zabbix 客户端配置文件中的hostname </span><br><span class="line">-k 指监控项对应的key值 </span><br><span class="line">-o 则表示要主动推送的数据</span><br><span class="line">-r 将数据实时提交给服务器</span><br><span class="line">-v 详细模式, -vv 更详细</span><br><span class="line">-p zabbix server端口,默认10051</span><br><span class="line">-i 从输入文件读取数据</span><br></pre></td></tr></table></figure><h3 id="参考实例"><a href="#参考实例" class="headerlink" title="参考实例"></a>参考实例</h3><p>上报游戏客户端连接数量给zabbix服务端</p><p>1.创建一个模版</p><img src="/img/1600743588653.jpg"><p>2.创建监控项<br><img src="/img/1600745217765.jpg"></p><p>3.关联模版<br><img src="/img/1600743766570.jpg"></p><p>4.发送测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 1 -vv</span></span><br><span class="line">zabbix_sender [21938]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 0; failed: 1; total: 1; seconds spent: 0.000071"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 0; failed: 1; total: 1; seconds spent: 0.000071"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 1 -vv          </span></span><br><span class="line">zabbix_sender [21940]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000087"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000087"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 500 -vv</span></span><br><span class="line">zabbix_sender [21946]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000092"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000092"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 501 -vv </span></span><br><span class="line">zabbix_sender [21951]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000029"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000029"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line"></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># zabbix_sender -s "webserver.roddypy.com" -z 47.93.184.140 -p 10051 -k "UsersCount" -o 505 -vv</span></span><br><span class="line">zabbix_sender [21953]: DEBUG: answer [&#123;<span class="string">"response"</span>:<span class="string">"success"</span>,<span class="string">"info"</span>:<span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000091"</span>&#125;]</span><br><span class="line">Response from <span class="string">"47.93.184.140:10051"</span>: <span class="string">"processed: 1; failed: 0; total: 1; seconds spent: 0.000091"</span></span><br><span class="line">sent: 1; skipped: 0; total: 1</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>4.通过最新数据获取结果</p><img src="/img/1600745357605.jpg"><img src="/img/1600745375841.jpg"><p><strong>说明</strong>：</p><ul><li>此时可以把命令写成脚本文件定时执行</li><li>可以添加一个触发器进行报警</li></ul><h2 id="zabbix-get"><a href="#zabbix-get" class="headerlink" title="zabbix_get"></a>zabbix_get</h2><p>zabbix_get 是用于从Zabbix代理获取数据的命令行实用程序。 就是从服务端获取客户端的数据，主要用于测试两边连通行和监控项是否正确。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># yum install zabbix-get -y</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * centos-sclo-rh: mirror.bit.edu.cn</span><br><span class="line"> * centos-sclo-sclo: mirror.bit.edu.cn</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package zabbix-get.x86_64 0:5.0.3-1.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line"> Package                                  Arch                                 Version                                    Repository                            Size</span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> zabbix-get                               x86_64                               5.0.3-1.el7                                zabbix                               315 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 315 k</span><br><span class="line">Installed size: 1.3 M</span><br><span class="line">Downloading packages:</span><br><span class="line">zabbix-get-5.0.3-1.el7.x86_64.rpm                                                                                                             | 315 kB  00:00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : zabbix-get-5.0.3-1.el7.x86_64                                                                                                                     1/1 </span><br><span class="line">  Verifying  : zabbix-get-5.0.3-1.el7.x86_64                                                                                                                     1/1 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  zabbix-get.x86_64 0:5.0.3-1.el7                                                                                                                                    </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Example(s):</span><br><span class="line">  zabbix_get -s 127.0.0.1 -p 10050 -k <span class="string">"system.cpu.load[all,avg1]"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">General options:</span><br><span class="line">  -s --host host-name-or-IP  指定客户端主机名或者IP</span><br><span class="line">  -p --port port-number      客户端端口，默认10050</span><br><span class="line">  -I --<span class="built_in">source</span>-address IP-address   指定源IP，写上zabbix server的ip地址即可，一般留空</span><br><span class="line">  -k --key item-key          你想获取的key</span><br><span class="line">  -h --<span class="built_in">help</span>                  打印帮助信息</span><br><span class="line">  -V --version               显示版本</span><br></pre></td></tr></table></figure><p>官方文档:<a href="https://www.zabbix.com/documentation/current/manpages/zabbix_get" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manpages/zabbix_get</a></p><h3 id="参考实例-1"><a href="#参考实例-1" class="headerlink" title="参考实例"></a>参考实例</h3><p>1.获取客户端CPU负载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># zabbix_get -s 59.110.115.72 -p 10050 -k "system.cpu.load[all,avg5]"</span></span><br><span class="line">0.020000</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>2.创建一个自定义监控，并通过zabbix_get获取数据</p><p>在客户端的zabbix_agentd.conf中增加自定义监控项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Option: UserParameter</span></span><br><span class="line"><span class="comment">#       User-defined parameter to monitor. There can be several user-defined parameters.</span></span><br><span class="line"><span class="comment">#       Format: UserParameter=&lt;key&gt;,&lt;shell command&gt;</span></span><br><span class="line"><span class="comment">#       See 'zabbix_agentd' directory for examples.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Mandatory: no</span></span><br><span class="line"><span class="comment"># Default:</span></span><br><span class="line">UserParameter=Echo[*],<span class="built_in">echo</span> <span class="variable">$1</span></span><br></pre></td></tr></table></figure><p>重启客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl  restart zabbix-agent </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>在服务端测试，输入什么参数就会回显什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># zabbix_get -s 59.110.115.72 -p 10050 -k "Echo[c]"                  </span></span><br><span class="line">c</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment"># zabbix_get -s 59.110.115.72 -p 10050 -k "Echo[ewewe]"</span></span><br><span class="line">ewewe</span><br><span class="line">[root@iZ2ze7k1pc9lk7pay5rcawZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 5.0 Agent安装 for Centos</title>
      <link href="2020/09/21/zabbix-5-0-Agent%E5%AE%89%E8%A3%85-for-Centos/"/>
      <url>2020/09/21/zabbix-5-0-Agent%E5%AE%89%E8%A3%85-for-Centos/</url>
      
        <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>CentOS Linux release 7.8.2003 (Core)</p><h2 id="安装agent"><a href="#安装agent" class="headerlink" title="安装agent"></a>安装agent</h2><p>采用rpm包安装方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class="line">Retrieving https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line">warning: /var/tmp/rpm-tmp.GUTI2l: Header V4 RSA/SHA512 Signature, key ID a14fe591: NOKEY</span><br><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   1:zabbix-release-5.0-1.el7         <span class="comment">################################# [100%]</span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: base epel extras updates zabbix zabbix-non-supported</span><br><span class="line">Cleaning up list of fastest mirrors</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># yum install zabbix-agent -y</span></span><br></pre></td></tr></table></figure><p>安装完成查看下软件包生成的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># rpm -ql zabbix-agent</span></span><br><span class="line">/etc/logrotate.d/zabbix-agent</span><br><span class="line">/etc/zabbix/zabbix_agentd.conf</span><br><span class="line">/etc/zabbix/zabbix_agentd.d</span><br><span class="line">/usr/lib/systemd/system/zabbix-agent.service</span><br><span class="line">/usr/lib/tmpfiles.d/zabbix-agent.conf</span><br><span class="line">/usr/sbin/zabbix_agentd</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/AUTHORS</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/COPYING</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/ChangeLog</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/NEWS</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/README</span><br><span class="line">/usr/share/doc/zabbix-agent-5.0.3/userparameter_mysql.conf</span><br><span class="line">/usr/share/man/man8/zabbix_agentd.8.gz</span><br><span class="line">/var/<span class="built_in">log</span>/zabbix</span><br><span class="line">/var/run/zabbix</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>/etc/zabbix/zabbix_agentd.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid   <span class="comment">#pid文件</span></span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log。 <span class="comment">#log文件</span></span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=x.x.x.x                        <span class="comment">#zabbix server ip 地址</span></span><br><span class="line">ServerActive=x.x.x.x                  <span class="comment">#主动监控 server ip 地址</span></span><br><span class="line">Hostname=webserver.roddypy.com        <span class="comment">#自己能被server端识别的地址</span></span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf  <span class="comment"># 扩展配置文件</span></span><br></pre></td></tr></table></figure><h2 id="启动agentd"><a href="#启动agentd" class="headerlink" title="启动agentd"></a>启动agentd</h2><p>启动agent并开启自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl  start zabbix-agent             </span></span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment"># systemctl  enable zabbix-agent </span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/zabbix-agent.service to /usr/lib/systemd/system/zabbix-agent.service.</span><br><span class="line">[root@iZ2zecgq3cou36re3sxh4bZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="添加主机并关联模版"><a href="#添加主机并关联模版" class="headerlink" title="添加主机并关联模版"></a>添加主机并关联模版</h2><img src="/img/1600669628015.jpg"><img src="/img/1600669637643.jpg"><p>等待1-5分钟即可正常监控</p><img src="/img/1600669685470.jpg"><p>如果出现如下状态需要检查配置或者防火墙，确认是否是ip地址填写错误还是防火墙没有允许10050端口</p><img src="/img/1600669970480.jpg"><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ul><li>客户端允许服务器来访问10050端口</li><li>ip切记不要填写错误</li><li>需要选择关联组及监控模版，模版里有默认的监控指标及报警规则，这个可以自己修改。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 5.0 Agent安装 for Ubuntu</title>
      <link href="2020/09/18/zabbix-5-0-Agent%E5%AE%89%E8%A3%85-for-Ubuntu/"/>
      <url>2020/09/18/zabbix-5-0-Agent%E5%AE%89%E8%A3%85-for-Ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>系统环境是Ubuntu 16.4，采用apt源的安装方式。安装时软件版本最好和Server的版本相匹配，同时如果是大批量的安装的话建议采用saltstack 或者批量脚本安装并设置自动发现。</p><p>需要开放10050 和10051端口访问，在客户端上需要允许服务器访问 10050</p><h2 id="安装Agent"><a href="#安装Agent" class="headerlink" title="安装Agent"></a>安装Agent</h2><p>添加agent源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># wget https://repo.zabbix.com/zabbix/5.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.0-1+xenial_all.deb</span></span><br><span class="line">[root@localhost ~]<span class="comment"># dpkg -i zabbix-release_5.0-1+xenial_all.deb</span></span><br><span class="line">[root@localhost ~]<span class="comment"># apt update</span></span><br></pre></td></tr></table></figure><p>安装agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># apt install zabbix-agent -y</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=47.93.184.xx。      <span class="comment">#监控机地址</span></span><br><span class="line">ServerActive=47.93.184.xx   <span class="comment"># 填监控机地址  主动模式</span></span><br><span class="line">Hostname=47.105.47.xx    <span class="comment"># 被监控端hostname</span></span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  systemctl restart zabbix-agent</span></span><br><span class="line">[root@localhost ~]<span class="comment">#  systemctl enable zabbix-agent</span></span><br></pre></td></tr></table></figure><h2 id="手动添加被监控机"><a href="#手动添加被监控机" class="headerlink" title="手动添加被监控机"></a>手动添加被监控机</h2><p>1.在配置-主机添加一台被监控机</p><img src="/img/1600437080974.jpg"><p>2.添加时指定群组，并且设置一个监控模版<code>Template OS Linux by Zabbix agent</code></p><img src="/img/1600435660638.jpg"><p>3.添加后等几分钟查看状态<br><img src="/img/1600437415983.jpg"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.zabbix.com/cn/download?zabbix=5.0&amp;os_distribution=ubuntu&amp;os_version=16.04_xenial&amp;db=&amp;ws=" target="_blank" rel="noopener">https://www.zabbix.com/cn/download?zabbix=5.0&amp;os_distribution=ubuntu&amp;os_version=16.04_xenial&amp;db=&amp;ws=</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 关闭文章评论方法</title>
      <link href="2020/09/18/Hexo-%E5%85%B3%E9%97%AD%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E6%96%B9%E6%B3%95/"/>
      <url>2020/09/18/Hexo-%E5%85%B3%E9%97%AD%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo关闭文章评论"><a href="#Hexo关闭文章评论" class="headerlink" title="Hexo关闭文章评论"></a>Hexo关闭文章评论</h2><p>这里不单单可以对某篇文章关闭，也可以关闭某个页面。比如分类、标签、关于等。升级next主题后，我加了valine评论系统，默认情况下所有页面都可以评论，但是有些页面不想开评论咋办呢。</p><p>经我亲测以下方法可行，目前我的环境是hexo+next+valine评论插件</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以分类页面为例source/categories/index.md</p><p>添加：comments: false</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-04</span><span class="number">-22</span> <span class="number">15</span><span class="string">:40:45</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/front-matter</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix 5.0 详细安装步骤</title>
      <link href="2020/09/18/zabbix-5-0-%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/>
      <url>2020/09/18/zabbix-5-0-%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="zabbix"><a href="#zabbix" class="headerlink" title="zabbix"></a>zabbix</h2><p>老牌监控系统，自我运维生涯开始用过nagios、icinga、cacti(仙人掌)、zabbix。唯有zabbix在中小规模监控环境中值得推荐，无论是安装，配置，还是报警、绘图。结合第三方报警也好，适配性都特别好。<br>目前还可以集合grafana作图形可视化，中小型企业运维监控软件首选zabbix。如果有能力二次开发或者有兴趣也可以研究下小米开源的open-falcon、滴滴改进的Nightingale、Talkingdata开源的OWL等</p><p>5.0版本貌似最近才更新没多久，我们部署起来看看有啥变化没，话说回来。从2.0到3.0确实好看了不少，今天看看5.0长啥样，话不多说，开干！</p><p>5.0新功能参考 <code>https://www.zabbix.com/cn/whats_new_5_0</code></p><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>准备环境</p><ul><li>Centos 7.8</li><li>PHP 7.2 +</li><li>Apache 1.3.12 +</li><li>Mysql or MariaDB 5.7+</li></ul><p>具体要求参考一下链接 <a href="https://www.zabbix.com/documentation/current/manual/installation/requirements" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manual/installation/requirements</a></p><p>硬件条件参考下表<br><img src="/img/1600416626703.jpg"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable --now firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -L -n</span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="安装zabbix源"><a href="#安装zabbix源" class="headerlink" title="安装zabbix源"></a>安装zabbix源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class="line">Retrieving https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line">warning: /var/tmp/rpm-tmp.vw5pXe: Header V4 RSA/SHA512 Signature, key ID a14fe591: NOKEY</span><br><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   1:zabbix-release-5.0-1.el7         <span class="comment">################################# [100%]</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: base epel extras updates zabbix zabbix-non-supported</span><br><span class="line">Cleaning up list of fastest mirrors</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="安装server和agnet"><a href="#安装server和agnet" class="headerlink" title="安装server和agnet"></a>安装server和agnet</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install zabbix-server-mysql zabbix-agent</span></span><br></pre></td></tr></table></figure><p>因某些不能说的原因安装可能会出现如下情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-server-mysql-5.0.3-1.el7.x86_64.rpm: [Errno 14] curl<span class="comment">#18 - "transfer closed with 1461988 bytes remaining to read"</span></span><br><span class="line">Trying other mirror.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Error downloading packages:</span><br><span class="line">  zabbix-server-mysql-5.0.3-1.el7.x86_64: [Errno 256] No more mirrors to try.</span><br></pre></td></tr></table></figure><p>换成阿里源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -i 's#http://repo.zabbix.com#https://mirrors.aliyun.com/zabbix#' /etc/yum.repos.d/zabbix.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: base epel extras updates zabbix zabbix-non-supported</span><br><span class="line">Cleaning up list of fastest mirrors</span><br></pre></td></tr></table></figure><p><strong>再次执行安装</strong></p><h3 id="安装前端组建"><a href="#安装前端组建" class="headerlink" title="安装前端组建"></a>安装前端组建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install centos-release-scl -y</span></span><br></pre></td></tr></table></figure><p>启用zabbix前端源,编辑配置文件 /etc/yum.repos.d/zabbix.repo 修改enabled为1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[zabbix-frontend]</span><br><span class="line">name=Zabbix Official Repository frontend - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/<span class="variable">$basearch</span>/frontend</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591</span><br></pre></td></tr></table></figure><p>软件包安装，包括httpd  php web组件等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y </span></span><br><span class="line">...</span><br><span class="line">Installing:</span><br><span class="line"> zabbix-apache-conf-scl                        noarch                       5.0.3-1.el7                                  zabbix-frontend                        13 k</span><br><span class="line"> zabbix-web-mysql-scl                          noarch                       5.0.3-1.el7                                  zabbix-frontend                        12 k</span><br><span class="line">Installing <span class="keyword">for</span> dependencies:</span><br><span class="line"> apr                                           x86_64                       1.4.8-5.el7                                  base                                  103 k</span><br><span class="line"> apr-util                                      x86_64                       1.5.2-6.el7                                  base                                   92 k</span><br><span class="line"> audit-libs-python                             x86_64                       2.8.5-4.el7                                  base                                   76 k</span><br><span class="line"> checkpolicy                                   x86_64                       2.5-8.el7                                    base                                  295 k</span><br><span class="line"> dejavu-fonts-common                           noarch                       2.33-6.el7                                   base                                   64 k</span><br><span class="line"> dejavu-sans-fonts                             noarch                       2.33-6.el7                                   base                                  1.4 M</span><br><span class="line"> fontpackages-filesystem                       noarch                       1.44-8.el7                                   base                                  9.9 k</span><br><span class="line"> httpd                                         x86_64                       2.4.6-93.el7.centos                          base                                  2.7 M</span><br><span class="line"> httpd-tools                                   x86_64                       2.4.6-93.el7.centos                          base                                   92 k</span><br><span class="line"> libX11                                        x86_64                       1.6.7-2.el7                                  base                                  607 k</span><br><span class="line"> libX11-common                                 noarch                       1.6.7-2.el7                                  base                                  164 k</span><br><span class="line"> libXau                                        x86_64                       1.0.8-2.1.el7                                base                                   29 k</span><br><span class="line"> libXpm                                        x86_64                       3.5.12-1.el7                                 base                                   55 k</span><br><span class="line"> libcgroup                                     x86_64                       0.41-21.el7                                  base                                   66 k</span><br><span class="line"> libjpeg-turbo                                 x86_64                       1.2.90-8.el7                                 base                                  135 k</span><br><span class="line"> libsemanage-python                            x86_64                       2.5-14.el7                                   base                                  113 k</span><br><span class="line"> libwebp                                       x86_64                       0.3.0-7.el7                                  base                                  170 k</span><br><span class="line"> libxcb                                        x86_64                       1.13-1.el7                                   base                                  214 k</span><br><span class="line"> libxslt                                       x86_64                       1.1.28-5.el7                                 base                                  242 k</span><br><span class="line"> mailcap                                       noarch                       2.1.41-2.el7                                 base                                   31 k</span><br><span class="line"> policycoreutils-python                        x86_64                       2.5-34.el7                                   base                                  457 k</span><br><span class="line"> python-IPy                                    noarch                       0.75-6.el7                                   base                                   32 k</span><br><span class="line"> rh-php72                                      x86_64                       1-2.el7                                      centos-sclo-rh                        4.3 k</span><br><span class="line"> rh-php72-php-bcmath                           x86_64                       7.2.24-1.el7                                 centos-sclo-rh                         60 k</span><br><span class="line"> rh-php72-php-cli                              x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        2.9 M</span><br><span class="line"> rh-php72-php-common                           x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        680 k</span><br><span class="line"> rh-php72-php-fpm                              x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        1.5 M</span><br><span class="line"> rh-php72-php-gd                               x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        151 k</span><br><span class="line"> rh-php72-php-json                             x86_64                       7.2.24-1.el7                                 centos-sclo-rh                         54 k</span><br><span class="line"> rh-php72-php-ldap                             x86_64                       7.2.24-1.el7                                 centos-sclo-rh                         59 k</span><br><span class="line"> rh-php72-php-mbstring                         x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        553 k</span><br><span class="line"> rh-php72-php-mysqlnd                          x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        166 k</span><br><span class="line"> rh-php72-php-pdo                              x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        101 k</span><br><span class="line"> rh-php72-php-pear                             noarch                       1:1.10.5-1.el7                               centos-sclo-rh                        357 k</span><br><span class="line"> rh-php72-php-process                          x86_64                       7.2.24-1.el7                                 centos-sclo-rh                         62 k</span><br><span class="line"> rh-php72-php-xml                              x86_64                       7.2.24-1.el7                                 centos-sclo-rh                        160 k</span><br><span class="line"> rh-php72-php-zip                              x86_64                       7.2.24-1.el7                                 centos-sclo-rh                         90 k</span><br><span class="line"> rh-php72-runtime                              x86_64                       1-2.el7                                      centos-sclo-rh                        1.1 M</span><br><span class="line"> scl-utils                                     x86_64                       20130529-19.el7                              base                                   24 k</span><br><span class="line"> setools-libs                                  x86_64                       3.3.8-4.el7                                  base                                  620 k</span><br><span class="line"> zabbix-web                                    noarch                       5.0.3-1.el7                                  zabbix-frontend                       3.1 M</span><br><span class="line"> zabbix-web-deps-scl                           noarch                       5.0.3-1.el7                                  zabbix-frontend                        13 k</span><br></pre></td></tr></table></figure><h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>安装并设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install mariadb-server -y</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable --now mariadb</span></span><br></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysql_secure_installation</span></span><br><span class="line"></span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to <span class="built_in">log</span> into MariaDB to secure it, we<span class="string">'ll need the current</span></span><br><span class="line"><span class="string">password for the root user.  If you'</span>ve just installed MariaDB, and</span><br><span class="line">you haven<span class="string">'t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="string">so you should just press enter here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter current password for root (enter for none):   #回车，默认没有密码</span></span><br><span class="line"><span class="string">OK, successfully used password, moving on...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Setting the root password ensures that nobody can log into the MariaDB</span></span><br><span class="line"><span class="string">root user without the proper authorisation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Set root password? [Y/n] y。#是否设置密码</span></span><br><span class="line"><span class="string">New password:               #新密码</span></span><br><span class="line"><span class="string">Re-enter new password:      #新密码确认</span></span><br><span class="line"><span class="string">Password updated successfully!</span></span><br><span class="line"><span class="string">Reloading privilege tables..</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, a MariaDB installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="string">to log into MariaDB without having to have a user account created for</span></span><br><span class="line"><span class="string">them.  This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="string">go a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="string">production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove anonymous users? [Y/n]   #移除匿名用户</span></span><br><span class="line"><span class="string"> ... skipping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Normally, root should only be allowed to connect from '</span>localhost<span class="string">'.  This</span></span><br><span class="line"><span class="string">ensures that someone cannot guess at the root password from the network.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disallow root login remotely? [Y/n] n    #使用禁用root远程连接</span></span><br><span class="line"><span class="string"> ... skipping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, MariaDB comes with a database named '</span><span class="built_in">test</span><span class="string">' that anyone can</span></span><br><span class="line"><span class="string">access.  This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="string">before moving into a production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove test database and access to it? [Y/n] y #删除测试数据库</span></span><br><span class="line"><span class="string"> - Dropping test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"> - Removing privileges on test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reloading the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="string">will take effect immediately.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reload privilege tables now? [Y/n] y  #刷新权限</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Cleaning up...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">All done!  If you'</span>ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> using MariaDB!</span><br></pre></td></tr></table></figure><p>创建zabbix所需要的数据库及用户并设置密码 zabbix123</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 9</span><br><span class="line">Server version: 5.5.65-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create user zabbix@localhost identified by <span class="string">'zabbix123'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; quit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><p>导入初始数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span></span><br><span class="line">Enter password: </span><br><span class="line">[root@localhost ~]<span class="comment"># mysql -u root -p  #检查是否导入成功</span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 12</span><br><span class="line">Server version: 5.5.65-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use zabbix</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [zabbix]&gt; show tables;</span><br><span class="line">+----------------------------+</span><br><span class="line">| Tables_in_zabbix           |</span><br><span class="line">+----------------------------+</span><br><span class="line">| acknowledges               |</span><br><span class="line">| actions                    |</span><br><span class="line">| alerts                     |</span><br><span class="line">| application_discovery      |</span><br><span class="line">| application_prototype      |</span><br><span class="line">| application_template       |</span><br><span class="line">| applications               |</span><br><span class="line">| auditlog                   |</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>配置数据库密码 /etc/zabbix/zabbix_server.conf </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBPassword=zabbix123</span><br></pre></td></tr></table></figure><p>修改php时区  /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf,修改成Asia/Shanghai 并且去掉前面的注释</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">php_value[date.timezone]</span> = Asia/Shanghai</span><br></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span></span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>登录系统<a href="http://x.x.x.x/zabbix" target="_blank" rel="noopener">http://x.x.x.x/zabbix</a></p><p>开始初始化<br><img src="/img/1600419038695.jpg"><br>检查环境<br><img src="/img/1600419068929.jpg"><br>配置数据库<br><img src="/img/1600419133833.jpg"><br>确认server详情<br><img src="/img/1600419153092.jpg"><br>安装确认<br><img src="/img/1600419182133.jpg"><br>安装完成<br><img src="/img/1600419201537.jpg"><br>登录系统账户密码 Admin ,默认密码zabbix<br><img src="/img/1600419231022.jpg"></p><p>系统页面，默认是英文，可以在个人中心切换语言<br><img src="/img/1600419266571.jpg"></p><img src="/img/1600419566546.jpg"><img src="/img/1600419641529.jpg"><h2 id="zabbix-乱码问题"><a href="#zabbix-乱码问题" class="headerlink" title="zabbix 乱码问题"></a>zabbix 乱码问题</h2><p>将Win10操作系统C:\Windows\Fonts目录下的任意字体 上传字体文件到fonts目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost fonts]<span class="comment"># pwd</span></span><br><span class="line">/usr/share/zabbix/assets/fonts</span><br><span class="line">[root@localhost fonts]<span class="comment"># ll</span></span><br><span class="line">total 11512</span><br><span class="line">lrwxrwxrwx 1 root root       33 Sep 18 16:34 graphfont.ttf -&gt; /etc/alternatives/zabbix-web-font</span><br><span class="line">-r-xr-xr-x 1 root root 11787328 Sep 18 17:05 simkai.ttf</span><br><span class="line">[root@localhost fonts]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>编辑配置文件 /usr/share/zabbix/include/defines.inc.php </p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">81</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">'ZBX_GRAPH_FONT_NAME'</span>,           <span class="string">'simkai'</span>); <span class="comment">// font file name</span></span><br><span class="line"> <span class="number">122</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">'ZBX_FONT_NAME'</span>, <span class="string">'simkai'</span>);</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">重启</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>bash</span><br><span class="line"><span class="meta">[</span>root@localhost fonts<span class="meta">]</span># systemctl restart zabbix-server</span><br></pre></td></tr></table></figure><img src="/img/1600420851802.jpg"><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.zabbix.com/cn/download?zabbix=5.0&amp;os_distribution=centos&amp;os_version=7&amp;db=mysql&amp;ws=apache" target="_blank" rel="noopener">https://www.zabbix.com/cn/download?zabbix=5.0&amp;os_distribution=centos&amp;os_version=7&amp;db=mysql&amp;ws=apache</a></li><li><a href="https://www.zabbix.com/documentation/current/manual/quickstart/login" target="_blank" rel="noopener">https://www.zabbix.com/documentation/current/manual/quickstart/login</a></li><li><a href="https://www.cnblogs.com/wei-lu/p/10220025.html" target="_blank" rel="noopener">https://www.cnblogs.com/wei-lu/p/10220025.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim编辑器:wq和:x区别</title>
      <link href="2020/09/14/vim%E7%BC%96%E8%BE%91%E5%99%A8-wq%E5%92%8C-x%E5%8C%BA%E5%88%AB/"/>
      <url>2020/09/14/vim%E7%BC%96%E8%BE%91%E5%99%A8-wq%E5%92%8C-x%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h2><p><code>&quot;:x&quot;</code> 和 <code>&quot;:wq&quot;</code> 的区别如下：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>) :wq 强制性写入文件并退出（存盘并退出 write <span class="keyword">and</span> quite）。即使文件没有被修改也强制写入，并更新文件的修改时间。</span><br><span class="line">(<span class="number">2</span>) :x 写入文件并退出。仅当文件被修改时才写入，并更新文件修改时间；否则不会更新文件修改时间。</span><br></pre></td></tr></table></figure><p>尽量习惯性用<code>:x</code> 避免在没有修改时也更新文件</p><p>参考：</p><ul><li><a href="https://www.cnblogs.com/andreking/p/5793782.html" target="_blank" rel="noopener">https://www.cnblogs.com/andreking/p/5793782.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭SELINUX</title>
      <link href="2020/09/10/%E5%85%B3%E9%97%ADSELINUX/"/>
      <url>2020/09/10/%E5%85%B3%E9%97%ADSELINUX/</url>
      
        <content type="html"><![CDATA[<h2 id="查看Selinux状态"><a href="#查看Selinux状态" class="headerlink" title="查看Selinux状态"></a>查看Selinux状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# getenforce</span><br><span class="line">Enforcing        //enforceing代表开启，</span><br><span class="line">Permissive      // permissive代表警告</span><br><span class="line">Disabled        //disabled代表关闭</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h2 id="关闭selinux-临时关闭重启失效"><a href="#关闭selinux-临时关闭重启失效" class="headerlink" title="关闭selinux(临时关闭重启失效)"></a>关闭selinux(临时关闭重启失效)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# setenforce 0   //开始 设置数字1</span><br></pre></td></tr></table></figure><h2 id="关闭selinux-永久"><a href="#关闭selinux-永久" class="headerlink" title="关闭selinux(永久)"></a>关闭selinux(永久)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> selinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 常用命令集</title>
      <link href="2020/08/28/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86/"/>
      <url>2020/08/28/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="容器管理"><a href="#容器管理" class="headerlink" title="容器管理"></a>容器管理</h2><p><strong>列出容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  ps</span><br></pre></td></tr></table></figure><p>-a  all  所有容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  ps  -a</span><br></pre></td></tr></table></figure><p><strong>列出最近一次启动的容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  ps -l</span><br></pre></td></tr></table></figure><p><strong>检索容器</strong></p><p>兼容name 为test的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a --filter name=<span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><strong>停止容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  stop  runginx</span><br></pre></td></tr></table></figure><p><strong>启动容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  start runginx</span><br></pre></td></tr></table></figure><p><strong>重启容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  restart runginx</span><br></pre></td></tr></table></figure><p><strong>进入容器</strong><br>通常用于在运行的容器中执行命令，也可以开启交互式终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  <span class="built_in">exec</span> -it runginx /bin/bash</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  <span class="built_in">exec</span> -it runginx /bin/sh /tmp/run.sh</span><br></pre></td></tr></table></figure><p><strong>获取容器日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  logs runginx</span><br></pre></td></tr></table></figure><p>实时日志输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  logs -f runginx</span><br></pre></td></tr></table></figure><p><strong>查看容器详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  inspect &lt;id or name&gt;</span><br></pre></td></tr></table></figure><p><strong>查看容器进程信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  top &lt;id or name&gt;</span><br></pre></td></tr></table></figure><p><strong>列出容器端口映射</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker port &lt;id or name&gt;</span><br><span class="line">5000/tcp -&gt; 0.0.0.0:32768</span><br></pre></td></tr></table></figure><h2 id="镜像相关"><a href="#镜像相关" class="headerlink" title="镜像相关"></a>镜像相关</h2><p><strong>列出镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images)</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-trunc        Don<span class="string">'t truncate output</span></span><br><span class="line"><span class="string">  -q, --quiet           Only show numeric IDs</span></span><br></pre></td></tr></table></figure><p><strong>删除镜像</strong></p><p>-f 强制删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi nginx:latest</span><br></pre></td></tr></table></figure><p><strong>构建镜像</strong></p><p>需要编写Dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t nginx:v2 .</span><br></pre></td></tr></table></figure><p><strong>导出镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker  save -o nginx.tar nginx:latest</span><br></pre></td></tr></table></figure><p><strong>导入镜像</strong></p><p>–input,-i 指定导入文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker load -i nginx.tar</span><br></pre></td></tr></table></figure><p><strong>修改镜像tag</strong></p><p>将<code>nginx:v1</code>修改成<code>roddy/nginx:v1</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag  nginx:v1 roddy/nginx:v1</span><br></pre></td></tr></table></figure><p><strong>查看镜像详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect &lt;image&gt;</span><br></pre></td></tr></table></figure><h2 id="仓库相关"><a href="#仓库相关" class="headerlink" title="仓库相关"></a>仓库相关</h2><p><strong>登录registry</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker login x.x.x.x</span><br></pre></td></tr></table></figure><p><strong>退出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">logout</span></span><br></pre></td></tr></table></figure><p><strong>下载(pull)/拉取镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull  nginx:latest</span><br></pre></td></tr></table></figure><p><strong>上传(push)/推送镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker push  roddyhub.com/roddy/nginx:latest</span><br></pre></td></tr></table></figure><p><strong>搜索(search)镜像</strong></p><p>默认从dockerhub检索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker serach  nginx</span><br></pre></td></tr></table></figure><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><p><strong>查看网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker network  ls</span><br></pre></td></tr></table></figure><p><strong>创建自定义网络</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker network create &lt;net_name&gt;</span><br></pre></td></tr></table></figure><p><strong>查看容器的IP地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect -f <span class="string">'&#123;&#123; .NetworkSettings.IPAddress &#125;&#125; &lt;id or name&gt;</span></span><br></pre></td></tr></table></figure><p><strong>查看宿主机网卡信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ip a show docker0</span><br></pre></td></tr></table></figure><h2 id="docker相关"><a href="#docker相关" class="headerlink" title="docker相关"></a>docker相关</h2><p><strong>查看docker系统信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker info</span><br></pre></td></tr></table></figure><p><strong>查看docker版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 容器间互联</title>
      <link href="2020/08/25/docker-%E5%AE%B9%E5%99%A8%E9%97%B4%E4%BA%92%E8%81%94/"/>
      <url>2020/08/25/docker-%E5%AE%B9%E5%99%A8%E9%97%B4%E4%BA%92%E8%81%94/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker容器互联"><a href="#Docker容器互联" class="headerlink" title="Docker容器互联"></a>Docker容器互联</h2><p>常见使用方式为。–link参数 （后面会被废弃）<br>参考出处：- <a href="https://docs.docker.com/network/links/" target="_blank" rel="noopener">https://docs.docker.com/network/links/</a></p><p>Warning: The –link flag is a legacy feature of Docker. It may eventually be removed. Unless you absolutely need to continue using it, we recommend that you use user-defined networks to facilitate communication between two containers instead of using –link. One feature that user-defined networks do not support that you can do with –link is sharing environment variables between containers. However, you can use other mechanisms such as volumes to share environment variables between containers in a more controlled way.</p><h2 id="样例："><a href="#样例：" class="headerlink" title="样例："></a>样例：</h2><p><strong>启动容器1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># docker run -dit -p 80:80 --name selfnginx nginx</span></span><br><span class="line">Unable to find image <span class="string">'nginx:latest'</span> locally</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">bf5952930446: Pull complete </span><br><span class="line">cb9a6de05e5a: Pull complete </span><br><span class="line">9513ea0afb93: Pull complete </span><br><span class="line">b49ea07d2e93: Pull complete </span><br><span class="line">a5e4a503d449: Pull complete </span><br><span class="line">Digest: sha256:b0ad43f7ee5edbc0effbc14645ae7055e21bc1973aee5150745632a24a752661</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> nginx:latest</span><br><span class="line">2cfcbd9bb76cfe8445c74e8d9cd8ae39f1fab1850242978cb059b15b527beb98</span><br></pre></td></tr></table></figure><p><strong>启动容器2</strong></p><p><em>–link 目标容器:映射的别名</em></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker run -dit --link selfnginx:web  alpine</span><br><span class="line">Unable to find image <span class="string">'alpine:latest'</span> locally</span><br><span class="line">latest: Pulling <span class="keyword">from</span> library/alpine</span><br><span class="line">df20fa9351a1: Pull complete </span><br><span class="line">Digest: sha256:<span class="number">185518070891758909</span>c9f839cf4ca393ee977ac378609f700f60a771a2dfe321</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> alpine:latest</span><br><span class="line">f6f87a55368d38781f6d10ef27bd31acf7b05b62c38b283f55a1e7723489d4bf</span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# </span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# </span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker ps  <span class="comment">//检查启动的容器</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">f6f87a55368d        alpine              <span class="string">"/bin/sh"</span>                <span class="number">7</span> seconds ago       Up <span class="number">6</span> seconds                             elastic_yalow</span><br><span class="line"><span class="number">2</span>cfcbd9bb76c        nginx               <span class="string">"/docker-entrypoint.…"</span>   <span class="number">2</span> minutes ago       Up <span class="number">2</span> minutes        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span>-&gt;<span class="number">80</span>/tcp   selfnginx</span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]#</span><br></pre></td></tr></table></figure><p><strong>测试</strong></p><p>安装curl</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker exec -it f6f  sh    <span class="comment">//进入容器</span></span><br><span class="line">/ # </span><br><span class="line">/ # </span><br><span class="line">/ # apk add curl    <span class="comment">// 安装curl工具</span></span><br><span class="line">fetch http:<span class="comment">//dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz</span></span><br><span class="line">fetch http:<span class="comment">//dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz</span></span><br><span class="line">(<span class="number">1</span>/<span class="number">4</span>) Installing ca-certificates (<span class="number">20191127</span>-r4)</span><br><span class="line">(<span class="number">2</span>/<span class="number">4</span>) Installing nghttp2-libs (<span class="number">1.41</span><span class="number">.0</span>-r0)</span><br><span class="line">(<span class="number">3</span>/<span class="number">4</span>) Installing libcurl (<span class="number">7.69</span><span class="number">.1</span>-r0)</span><br><span class="line">(<span class="number">4</span>/<span class="number">4</span>) Installing curl (<span class="number">7.69</span><span class="number">.1</span>-r0)</span><br><span class="line">Executing busybox<span class="number">-1.31</span><span class="number">.1</span>-r16.trigger</span><br><span class="line">Executing ca-certificates<span class="number">-20191127</span>-r4.trigger</span><br><span class="line">OK: <span class="number">7</span> MiB <span class="keyword">in</span> <span class="number">18</span> packages</span><br></pre></td></tr></table></figure><p>ping 测试。ping web // web表示–link 容器使用的别名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/ #<span class="built_in"> ping </span>web</span><br><span class="line">PING web (172.17.0.2): 56 data bytes</span><br><span class="line">64 bytes <span class="keyword">from</span> 172.17.0.2: <span class="attribute">seq</span>=0 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.067 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 172.17.0.2: <span class="attribute">seq</span>=1 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.066 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 172.17.0.2: <span class="attribute">seq</span>=2 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.064 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 172.17.0.2: <span class="attribute">seq</span>=3 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.066 ms</span><br><span class="line">^C</span><br><span class="line">--- web<span class="built_in"> ping </span>statistics ---</span><br><span class="line">4 packets transmitted, 4 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 0.064/0.065/0.067 ms</span><br></pre></td></tr></table></figure><p>curl 测试</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/ # curl web</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to nginx!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome to nginx!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>For online documentation and support please refer to</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://nginx.org/"</span>&gt;</span>nginx.org<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">Commercial support is available at</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://nginx.com/"</span>&gt;</span>nginx.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Thank you for using nginx.<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">/ #</span><br></pre></td></tr></table></figure><p>–link 连接会在/etc/hosts文件中添加关系映射</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/ # cat /etc/hosts </span><br><span class="line"><span class="number">127.0.0.1</span>       localhost</span><br><span class="line">::<span class="number">1</span>     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::<span class="number">0</span> ip6-localnet</span><br><span class="line">ff00::<span class="number">0</span> ip6-mcastprefix</span><br><span class="line">ff02::<span class="number">1</span> ip6-allnodes</span><br><span class="line">ff02::<span class="number">2</span> ip6-allrouters</span><br><span class="line"><span class="number">172.17.0.2</span>      web 2cfcbd9bb76c selfnginx</span><br><span class="line"><span class="number">172.17.0.3</span>      f6f87a55368d</span><br></pre></td></tr></table></figure><h2 id="容器互联-自定义网络）"><a href="#容器互联-自定义网络）" class="headerlink" title="容器互联 (自定义网络）"></a>容器互联 (自定义网络）</h2><ul><li>用户定义的网桥可在容器之间提供自动DNS解析。<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">缺省桥接网络上的容器只能通过<span class="built_in">IP</span>地址相互访问，除非您使用被认为是传统的--link选项。在用户定义的网桥网络上，容器可以通过名称或别名相互解析。</span><br><span class="line"></span><br><span class="line">想象一个具有Web前端和数据库后端的应用程序。如果调用容器web和<span class="built_in">db</span>，则<span class="built_in">db</span>无论应用程序堆栈在哪个Docker主机上运行，Web容器都可以通过连接到<span class="built_in">db</span>容器。</span><br><span class="line"></span><br><span class="line">如果在默认网桥网络上运行相同的应用程序堆栈，则需要在容器之间手动创建链接（使用旧式--link 标志）。这些链接需要双向创建，因此您可以看到，要进行通信的容器超过两个，这将变得很复杂。或者，您可以操作/etc/hosts容器中的文件，但这会产生难以调试的问题。</span><br></pre></td></tr></table></figure></li><li>用户定义的桥可提供更好的隔离。<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">所有未<span class="comment">--network指定的容器都将连接到默认网桥网络。这可能是一种风险，因为不相关的堆栈/服务/容器随后能够进行通信。</span></span><br><span class="line"></span><br><span class="line">使用用户定义的网络可提供作用域网络，其中只有连接到该网络的容器才能通信。</span><br></pre></td></tr></table></figure></li><li>容器可以随时随地从用户定义的网络连接和分离。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在容器的生存期内，您可以即时将其与用户定义的网络连接或断开连接。要从默认桥接网络中删除容器，您需要停止容器并使用其他网络选项重新创建它。</span><br><span class="line"></span><br><span class="line">每个用户定义的网络都会创建一个可配置的网桥。</span><br><span class="line"></span><br><span class="line">如果您的容器使用默认的桥接网络，则可以对其进行配置，但是所有容器都使用相同的设置，例如MTU和iptables规则。另外，配置默认桥接网络发生在Docker本身之外，并且需要重新启动Docker。</span><br><span class="line"></span><br><span class="line">用户定义的桥接网络是使用创建和配置的 docker<span class="built_in"> network </span>create。如果不同的应用程序组具有不同的网络要求，则可以在创建时分别配置每个用户定义的网桥。</span><br></pre></td></tr></table></figure></li><li>默认网桥网络上的链接容器共享环境变量。<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">最初，在两个容器之间共享环境变量的唯一方法是使用<span class="comment">--linkflag链接它们。用户定义的网络无法进行这种类型的变量共享。但是，存在共享环境变量的高级方法。一些想法：</span></span><br><span class="line"></span><br><span class="line">多个容器可以使用Docker卷挂载包含共享信息的文件或目录。</span><br><span class="line"></span><br><span class="line">可以使用一起启动多个容器docker-compose，并且compose文件可以定义共享变量。</span><br><span class="line"></span><br><span class="line">您可以使用群体服务来代替独立容器，并利用共享机密和 配置。</span><br></pre></td></tr></table></figure></li></ul><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>创建自定义网络</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> ~]<span class="meta"># docker network create my-net</span></span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> ~]<span class="meta"># docker network ls    //列出当前所有网络</span></span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">cd68d9fe5349        bridge              bridge              <span class="keyword">local</span></span><br><span class="line"><span class="number">995338</span>bf73a4        harbor_harbor       bridge              <span class="keyword">local</span></span><br><span class="line"><span class="number">683</span>eaf141ac7        host                host                <span class="keyword">local</span></span><br><span class="line"><span class="number">244</span>fc6228c1a        my-net              bridge              <span class="keyword">local</span></span><br><span class="line">c5dd972001d9        none                <span class="literal">null</span>                <span class="keyword">local</span></span><br></pre></td></tr></table></figure><p>创建容器并连接到自定义网络中</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker run -dit -p <span class="number">8000</span>:<span class="number">80</span> --name netnginx  --network my-net nginx</span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker run -dit --name testping --network my-net alpine</span><br></pre></td></tr></table></figure><p>检查启动容器</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES</span><br><span class="line">f146229807ba        alpine              <span class="string">"/bin/sh"</span>                <span class="number">4</span> minutes ago       Up <span class="number">4</span> minutes                               testping</span><br><span class="line"><span class="number">6f</span>0dd91d3f40        nginx               <span class="string">"/docker-entrypoint.…"</span>   <span class="number">6</span> minutes ago       Up <span class="number">6</span> minutes        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span>-&gt;<span class="number">80</span>/tcp   netnginx</span><br><span class="line">f6f87a55368d        alpine              <span class="string">"/bin/sh"</span>                <span class="number">32</span> minutes ago      Up <span class="number">32</span> minutes                              elastic_yalow</span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]#</span><br></pre></td></tr></table></figure><p>容器只要连接到同一个网络中，那会自动</p><h3 id="其他用法"><a href="#其他用法" class="headerlink" title="其他用法"></a>其他用法</h3><p>将已经运行的容器连接到自定义网络</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker<span class="built_in"> network </span>connect my-net elastic_yalow</span><br></pre></td></tr></table></figure><p>参看容器详情发现会有两个网络</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">"Networks": &#123;</span><br><span class="line">    "bridge": &#123;</span><br><span class="line">        "IPAMConfig": null,</span><br><span class="line">        "Links": null,</span><br><span class="line">        "Aliases": null,</span><br><span class="line">        "NetworkID": "cd68d9fe5349d9962d48e78d1f8d2e2c4e36a7a038104bd2fa9bca7ea1526c66",</span><br><span class="line">        "EndpointID": "865d76e5ea4a11abe73110c6d6c22f65f014c36c4bdd2a478b8ae422464fc912",</span><br><span class="line">        "Gateway": "172.17.0.1",</span><br><span class="line">        "IPAddress": "172.17.0.3",</span><br><span class="line">        "IPPrefixLen": 16,</span><br><span class="line">        "IPv6Gateway": "",</span><br><span class="line">        "GlobalIPv6Address": "",</span><br><span class="line">        "GlobalIPv6PrefixLen": 0,</span><br><span class="line">        "MacAddress": "02:42:ac:11:00:03",</span><br><span class="line">        "DriverOpts": null</span><br><span class="line">    &#125;,</span><br><span class="line">    "my-net": &#123;</span><br><span class="line">        "IPAMConfig": &#123;&#125;,</span><br><span class="line">        "Links": null,</span><br><span class="line">        "Aliases": [</span><br><span class="line">            <span class="string">"f6f87a55368d"</span></span><br><span class="line">        ],</span><br><span class="line">        "NetworkID": "244fc6228c1adddd45eecac66c7e0652171ddf293750c03ea3ff53946098da4a",</span><br><span class="line">        "EndpointID": "6ebff1aa65af5ed4b0172164b4dd101934e6d73cc6381886f23f88ed0d453377",</span><br><span class="line">        "Gateway": "172.20.0.1",</span><br><span class="line">        "IPAddress": "172.20.0.4",</span><br><span class="line">        "IPPrefixLen": 16,</span><br><span class="line">        "IPv6Gateway": "",</span><br><span class="line">        "GlobalIPv6Address": "",</span><br><span class="line">        "GlobalIPv6PrefixLen": 0,</span><br><span class="line">        "MacAddress": "02:42:ac:14:00:04",</span><br><span class="line">        "DriverOpts": &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>断开容器网络</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker<span class="built_in"> network </span>disconnect my-net elastic_yalow</span><br></pre></td></tr></table></figure><p><strong><em>如果断开只有一个网络的容器会发生什么？</em></strong></p><p>创建netnginx指定了使用自定义网络，如果断开他唯一的网络后，那该容器会是一个没有网卡状态。同时容器暴露的端口将会被取消，直到重新加入网络后恢复。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker<span class="built_in"> network </span>disconnect my-net netnginx</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">f146229807ba        alpine              <span class="string">"/bin/sh"</span>                17 minutes ago      Up 17 minutes                           testping</span><br><span class="line">6f0dd91d3f40        nginx               <span class="string">"/docker-entrypoint.…"</span>   18 minutes ago      Up 18 minutes                           netnginx</span><br><span class="line">f6f87a55368d        alpine              <span class="string">"/bin/sh"</span>                44 minutes ago      Up 44 minutes                           elastic_yalow</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker<span class="built_in"> network </span>connect my-net netnginx</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES</span><br><span class="line">f146229807ba        alpine              <span class="string">"/bin/sh"</span>                17 minutes ago      Up 17 minutes                              testping</span><br><span class="line">6f0dd91d3f40        nginx               <span class="string">"/docker-entrypoint.…"</span>   18 minutes ago      Up 18 minutes       0.0.0.0:8000-&gt;80/tcp   netnginx</span><br><span class="line">f6f87a55368d        alpine              <span class="string">"/bin/sh"</span>                45 minutes ago      Up 45 minutes                              elastic_yalow</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]#</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://docs.docker.com/network/bridge/#differences-between-user-defined-bridges-and-the-default-bridge" target="_blank" rel="noopener">https://docs.docker.com/network/bridge/#differences-between-user-defined-bridges-and-the-default-bridge</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Harbor私有仓库部署</title>
      <link href="2020/08/20/Harbor%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2/"/>
      <url>2020/08/20/Harbor%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h2><p>Harbor(港口)是一个开放源代码注册中心，Harbor是CNCF项目，VMware公司开源。用于构建企业级私有docker镜像的仓库的开源解决方案，它是Docker Registry的更高级封装，它除了提供友好的Web UI界面。</p><h2 id="安装Harbor"><a href="#安装Harbor" class="headerlink" title="安装Harbor"></a>安装Harbor</h2><h3 id="安装条件"><a href="#安装条件" class="headerlink" title="安装条件"></a>安装条件</h3><ul><li><a href="https://goharbor.io/docs/2.0.0/install-config/installation-prereqs/" target="_blank" rel="noopener">https://goharbor.io/docs/2.0.0/install-config/installation-prereqs/</a></li></ul><p><strong>Resource    Minimum    Recommended</strong><br>CPU        2 CPU    4 CPU<br>Mem        4 GB    8 GB<br>Disk    40 GB    160 GB</p><p><strong>Software    Version    Description</strong><br>Docker engine    Version 17.06.0-ce+ or higher    For installation instructions, see Docker Engine documentation<br>Docker Compose    Version 1.18.0 or higher    For installation instructions, see Docker Compose documentation<br>Openssl    Latest is preferred    Used to generate certificate and keys for Harbor</p><h3 id="1-配置环境"><a href="#1-配置环境" class="headerlink" title="1.配置环境"></a>1.配置环境</h3><p>安装docker-ce</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># yum update</span></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># yum -y install wget curl yum-utils </span></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #添加阿里源</span></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># yum update docker-ce docker-compose</span></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># systemctl enable docker</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>检查docker版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.12</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.13.10</span><br><span class="line"> Git commit:        48a66213fe</span><br><span class="line"> Built:             Mon Jun 22 15:46:54 2020</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.12</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.13.10</span><br><span class="line">  Git commit:       48a66213fe</span><br><span class="line">  Built:            Mon Jun 22 15:45:28 2020</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.2.13</span><br><span class="line">  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc10</span><br><span class="line">  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure><p>检查docker-compose版本</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]# docker-compose version</span><br><span class="line">docker-compose version <span class="number">1.18</span><span class="number">.0</span>, build <span class="number">8</span>dd22a9</span><br><span class="line">docker-py version: <span class="number">2.6</span><span class="number">.1</span></span><br><span class="line">CPython version: <span class="number">3.6</span><span class="number">.8</span></span><br><span class="line">OpenSSL version: OpenSSL <span class="number">1.0</span><span class="number">.2</span>k-fips  <span class="number">26</span> Jan <span class="number">2017</span></span><br><span class="line">[<span class="symbol">root@</span>iZ2zedqqdtca3xspuss20zZ ~]#</span><br></pre></td></tr></table></figure><h3 id="2-下载Harbor"><a href="#2-下载Harbor" class="headerlink" title="2.下载Harbor"></a>2.下载Harbor</h3><p>两种安装方式</p><ul><li>在线</li><li>离线安装包</li></ul><p><strong>下载离线包（需要加速，或者可续上网。我是下载后上传到服务器）</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> ~]<span class="meta"># wget https://github.com/goharbor/harbor/releases/download/v2.0.2/harbor-offline-installer-v2.0.2.tgz</span></span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> ~]<span class="meta"># tar xf harbor-offline-installer-latest.tgz </span></span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> ~]<span class="meta"># cd harbor</span></span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> harbor]<span class="meta"># ls</span></span><br><span class="line">common.sh  harbor.v2<span class="number">.0</span><span class="number">.2</span>.tar.gz  harbor.yml.tmpl  install.sh  LICENSE  prepare</span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> harbor]<span class="meta"># </span></span><br><span class="line"><span class="meta"># 复制模版文件</span></span><br><span class="line">[root<span class="symbol">@iZ2zedqqdtca3xspuss20zZ</span> harbor]<span class="meta"># cp harbor.yml.tmpl  harbor.yml</span></span><br></pre></td></tr></table></figure><p>目录结构</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="selector-tag">common</span><span class="selector-class">.sh</span></span><br><span class="line">├── <span class="selector-tag">harbor</span><span class="selector-class">.v2</span><span class="selector-class">.0</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">├── <span class="selector-tag">harbor</span><span class="selector-class">.yml</span></span><br><span class="line">├── <span class="selector-tag">harbor</span><span class="selector-class">.yml</span><span class="selector-class">.tmpl</span></span><br><span class="line">├── <span class="selector-tag">install</span><span class="selector-class">.sh</span></span><br><span class="line">├── <span class="selector-tag">LICENSE</span></span><br><span class="line">└── <span class="selector-tag">prepare</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">hostname: <span class="number">101.200</span><span class="number">.233</span><span class="number">.146</span>   <span class="comment"># 修改hostname为客户的可以访问的ip或者域名</span></span><br><span class="line">http:</span><br><span class="line">  port: <span class="number">80</span>                  <span class="comment"># 默认端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https related config      # 没有证书可以屏蔽掉</span></span><br><span class="line"><span class="comment">#https:</span></span><br><span class="line"><span class="comment">#  # https port for harbor, default is 443</span></span><br><span class="line"><span class="comment">#  port: 443</span></span><br><span class="line"><span class="comment">#  # The path of cert and key files for nginx</span></span><br><span class="line"><span class="comment">#  certificate: /your/certificate/path</span></span><br><span class="line"><span class="comment">#  private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line">harbor_admin_password: Harbor12345</span><br><span class="line">database:                            <span class="comment"># 数据库密码</span></span><br><span class="line">  password: root123</span><br><span class="line">  max_idle_conns: <span class="number">50</span></span><br><span class="line">  max_open_conns: <span class="number">1000</span></span><br><span class="line">data_volume: /data</span><br><span class="line">clair:</span><br><span class="line">  updaters_interval: <span class="number">12</span></span><br><span class="line">trivy:</span><br><span class="line">  ignore_unfixed: false</span><br><span class="line">  skip_update: false</span><br><span class="line">  insecure: false</span><br><span class="line">jobservice:</span><br><span class="line">  max_job_workers: <span class="number">10</span></span><br><span class="line">notification:</span><br><span class="line">  webhook_job_max_retry: <span class="number">10</span></span><br><span class="line">chart:</span><br><span class="line">  absolute_url: disabled</span><br><span class="line">log:</span><br><span class="line">  level: info</span><br><span class="line">  local:</span><br><span class="line">    rotate_count: <span class="number">50</span></span><br><span class="line">    rotate_size: <span class="number">200</span>M</span><br><span class="line">    location: /var/log/harbor</span><br><span class="line">_version: <span class="number">2.0</span><span class="number">.0</span></span><br><span class="line">proxy:</span><br><span class="line">  http_proxy:</span><br><span class="line">  https_proxy:</span><br><span class="line">  no_proxy:</span><br><span class="line">  components:</span><br><span class="line">    - core</span><br><span class="line">    - jobservice</span><br><span class="line">    - clair</span><br><span class="line">    - trivy</span><br></pre></td></tr></table></figure><h3 id="3-执行安装"><a href="#3-执行安装" class="headerlink" title="3.执行安装"></a>3.执行安装</h3><p>准备安装包，然后安装</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ harbor]# ./prepare </span><br><span class="line">[root@iZ2zedqqdtca3xspuss20zZ harbor]# ./install.sh</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Creating harbor-log <span class="built_in">..</span>. done</span><br><span class="line">Generated configuration file: /compose_location/docker-compose.yml</span><br><span class="line">Clean up the input dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Creating registry <span class="built_in">..</span>. done</span><br><span class="line">Creating harbor-core <span class="built_in">..</span>. done</span><br><span class="line">Creating<span class="built_in"> network </span><span class="string">"harbor_harbor"</span> with the<span class="built_in"> default </span>driver</span><br><span class="line">Creating nginx <span class="built_in">..</span>. done</span><br><span class="line">Creating harbor-db <span class="built_in">..</span>. </span><br><span class="line">Creating registry <span class="built_in">..</span>. </span><br><span class="line">Creating harbor-portal <span class="built_in">..</span>. </span><br><span class="line">Creating redis <span class="built_in">..</span>. </span><br><span class="line">Creating registryctl <span class="built_in">..</span>. </span><br><span class="line">Creating harbor-core <span class="built_in">..</span>. </span><br><span class="line">Creating harbor-jobservice <span class="built_in">..</span>. </span><br><span class="line">Creating nginx <span class="built_in">..</span>. </span><br><span class="line">✔ ----Harbor has been installed <span class="keyword">and</span> started successfully.----</span><br></pre></td></tr></table></figure><h2 id="配置Harbor"><a href="#配置Harbor" class="headerlink" title="配置Harbor"></a>配置Harbor</h2><p>1.访问Harbor</p><p><a href="http://x.x.x.x" target="_blank" rel="noopener">http://x.x.x.x</a> 默认账户是admin  密码 Harbor12345</p><img src="/img/1597915746822.jpg"><p>2.登录系统。默认支持6种语言<br><img src="/img/1597915928435.jpg"></p><p>3.支持2种主题,在左下角切换<br><img src="/img/1597916065835.jpg"></p><p>4.创建项目(不等于仓库)</p><img src="/img/1597916196096.jpg"><p>-1 表示不设置容量限制，同时在右上角能看到当前系统所占用的容量仪表</p><p>公开 表示任何人可以访问</p><p>5.推送镜像<br><img src="/img/1597916379157.jpg"></p><p>6.创建用户<br><img src="/img/1597916479211.jpg"></p><p>7.添加项目人员<br><img src="/img/1597917052999.jpg"><br>4种角色</p><p>8.登录系统后开始推送</p><p>修改客户端docker配置</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@iZm5e7rjmq1tkuwoy8h8vuZ</span><span class="symbol">:~</span><span class="comment"># vim /etc/docker/daemon.json </span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn/"</span>],</span><br><span class="line">     <span class="string">"insecure-registries"</span><span class="symbol">:</span>[<span class="string">"101.200.233.146"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">重启</span><br><span class="line">root<span class="variable">@iZm5e7rjmq1tkuwoy8h8vuZ</span><span class="symbol">:~</span><span class="comment"># systemctl  restart docker</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>iZm5e7rjmq1tkuwoy8h8vuZ:~# docker login <span class="number">101.200</span><span class="number">.233</span><span class="number">.146</span></span><br><span class="line">Username: roddy</span><br><span class="line">Password: </span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove <span class="keyword">this</span> warning. See</span><br><span class="line">https:<span class="comment">//docs.docker.com/engine/reference/commandline/login/#credentials-store</span></span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">root@</span>iZm5e7rjmq1tkuwoy8h8vuZ:~# docker tag busybox <span class="number">101.200</span><span class="number">.233</span><span class="number">.146</span>/yunwei/busybox</span><br><span class="line"><span class="symbol">root@</span>iZm5e7rjmq1tkuwoy8h8vuZ:~# docker push <span class="number">101.200</span><span class="number">.233</span><span class="number">.146</span>/yunwei/busybox</span><br><span class="line">The push <span class="built_in">ref</span>ers to repository [<span class="number">101.200</span><span class="number">.233</span><span class="number">.146</span>/yunwei/busybox]</span><br><span class="line"><span class="number">514</span>c3a3e64d4: Pushed </span><br><span class="line">latest: digest: sha256:<span class="number">400</span>ee2ed939df769d4681023810d2e4fb9479b8401d97003c710d0e20f7c49c6 size: <span class="number">527</span></span><br></pre></td></tr></table></figure><p>9.推送完成检查</p><img src="/img/1597917486336.jpg"><p>10.关闭harbor</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zedqqdtca3xspuss20zZ harbor]# docker-compose stop</span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> harbor-jobservice ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> nginx             ... done</span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> harbor-core       ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> registryctl       ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> registry          ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> redis             ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> harbor-portal     ... done</span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> harbor-db         ... </span><br><span class="line"><span class="function"><span class="title">Stopping</span></span> harbor-<span class="built-in">log</span>        ...</span><br></pre></td></tr></table></figure><h2 id="Harbor权限"><a href="#Harbor权限" class="headerlink" title="Harbor权限"></a>Harbor权限</h2><p>官方网站对权限有解释</p><ul><li><a href="https://goharbor.io/docs/2.0.0/administration/managing-users/user-permissions-by-role/" target="_blank" rel="noopener">https://goharbor.io/docs/2.0.0/administration/managing-users/user-permissions-by-role/</a></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">ActionLimited GuestGuestDeveloperMasterProject Admin</span><br><span class="line">See the project configurations✓✓✓✓✓</span><br><span class="line">Edit the project configurations✓</span><br><span class="line">See a list of project members✓✓✓✓</span><br><span class="line"><span class="keyword">Create</span>/edit/<span class="keyword">delete</span> <span class="keyword">project</span> members✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">project</span> <span class="keyword">logs</span>✓✓✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">project</span> replications✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">project</span> <span class="keyword">replication</span> jobs✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">project</span> labels✓✓</span><br><span class="line"><span class="keyword">Create</span>/edit/<span class="keyword">delete</span> <span class="keyword">project</span> labels✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> repositories✓✓✓✓✓</span><br><span class="line"><span class="keyword">Create</span> repositories✓✓✓</span><br><span class="line">Edit/<span class="keyword">delete</span> repositories✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> images✓✓✓✓✓</span><br><span class="line">Retag image✓✓✓✓</span><br><span class="line">Pull image✓✓✓✓✓</span><br><span class="line">Push image✓✓✓</span><br><span class="line"><span class="keyword">Scan</span>/<span class="keyword">delete</span> image✓✓</span><br><span class="line"><span class="keyword">Add</span> scanners <span class="keyword">to</span> Harbor</span><br><span class="line">Edit scanners <span class="keyword">in</span> projects✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> image vulnerabilities✓✓✓✓✓</span><br><span class="line">See image <span class="keyword">build</span> history✓✓✓✓✓</span><br><span class="line"><span class="keyword">Add</span>/Remove labels <span class="keyword">of</span> image✓✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> helm charts✓✓✓✓✓</span><br><span class="line">Download helm charts✓✓✓✓✓</span><br><span class="line">Upload helm charts✓✓✓</span><br><span class="line"><span class="keyword">Delete</span> helm charts✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> helm chart <span class="keyword">versions</span>✓✓✓✓✓</span><br><span class="line">Download helm chart <span class="keyword">versions</span>✓✓✓✓✓</span><br><span class="line">Upload helm chart <span class="keyword">versions</span>✓✓✓</span><br><span class="line"><span class="keyword">Delete</span> helm chart <span class="keyword">versions</span>✓✓</span><br><span class="line"><span class="keyword">Add</span>/Remove labels <span class="keyword">of</span> helm chart <span class="keyword">version</span>✓✓✓</span><br><span class="line">See a <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">project</span> robots✓✓</span><br><span class="line"><span class="keyword">Create</span>/edit/<span class="keyword">delete</span> <span class="keyword">project</span> robots✓</span><br><span class="line">See configured CVE whitelist✓✓✓✓✓</span><br><span class="line"><span class="keyword">Create</span>/edit/remove CVE whitelist✓</span><br><span class="line"><span class="keyword">Enable</span>/<span class="keyword">disable</span> webhooks✓✓✓</span><br><span class="line"><span class="keyword">Create</span>/<span class="keyword">delete</span> tag <span class="keyword">retention</span> <span class="keyword">rules</span>✓✓✓</span><br><span class="line"><span class="keyword">Enable</span>/<span class="keyword">disable</span> tag <span class="keyword">retention</span> <span class="keyword">rules</span>✓✓✓</span><br><span class="line"><span class="keyword">Create</span>/<span class="keyword">delete</span> tag immutability <span class="keyword">rules</span>✓</span><br><span class="line"><span class="keyword">Enable</span>/<span class="keyword">disable</span> tag immutability <span class="keyword">rules</span>✓</span><br><span class="line">See <span class="keyword">project</span> quotas✓✓✓✓✓</span><br><span class="line">Edit <span class="keyword">project</span> quotas *</span><br></pre></td></tr></table></figure><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><ul><li><a href="https://goharbor.io/docs/2.0.0/install-config/" target="_blank" rel="noopener">https://goharbor.io/docs/2.0.0/install-config/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> harbor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建docker私有Registry</title>
      <link href="2020/08/19/%E6%9E%84%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/"/>
      <url>2020/08/19/%E6%9E%84%E5%BB%BAdocker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="Registry分类"><a href="#Registry分类" class="headerlink" title="Registry分类"></a>Registry分类</h2><ul><li>Sponsor Registry: 第三方registry,供客户和社区使用</li><li>Mirror Registry: 第三方registry,只让用户使用</li><li>Vendor Registry: 由发布镜像的供应商提供的registry</li><li>Private Registry: 通过设有防火期和额外安全层（ssl）的私有registry</li></ul><h2 id="为什么需要私有Registry"><a href="#为什么需要私有Registry" class="headerlink" title="为什么需要私有Registry"></a>为什么需要私有Registry</h2><p>一般部署在本地自建（使用内网），如果使用阿里云直接使用阿里的registry就可以。</p><ul><li>托管镜像</li><li>占用带宽低</li><li>下载速度快</li><li>快速部署</li></ul><h2 id="安装docker-registry"><a href="#安装docker-registry" class="headerlink" title="安装docker-registry"></a>安装docker-registry</h2><p>ubuntu 16.04 安装registry 使用apt-get install docker-registry即可.安装完镜像存储目录为。<strong>/var/lib/docker-registry</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># apt-get install docker-registry</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following packages were automatically installed and are no longer required:</span><br><span class="line">  libopts25 python-meld3 python-pkg-resources</span><br><span class="line">Use <span class="string">'apt autoremove'</span> to remove them.</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  docker-registry</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 205 not upgraded.</span><br><span class="line">Need to get 2,694 kB of archives.</span><br><span class="line">After this operation, 12.6 MB of additional disk space will be used.</span><br><span class="line">Get:1 http://mirrors.cloud.aliyuncs.com/ubuntu xenial/universe amd64 docker-registry amd64 2.3.0~ds1-1 [2,694 kB]</span><br><span class="line">Fetched 2,694 kB <span class="keyword">in</span> 0s (8,438 kB/s)       </span><br><span class="line">Selecting previously unselected package docker-registry.</span><br><span class="line">(Reading database ... 103689 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../docker-registry_2.3.0~ds1-1_amd64.deb ...</span><br><span class="line">Unpacking docker-registry (2.3.0~ds1-1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> systemd (229-4ubuntu21.16) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> ureadahead (0.100.0-19) ...</span><br><span class="line">Setting up docker-registry (2.3.0~ds1-1) ...</span><br><span class="line">Adding system user `docker-registry<span class="string">' (UID 113) ...</span></span><br><span class="line"><span class="string">Adding new group `docker-registry'</span> (GID 122) ...</span><br><span class="line">Adding new user `docker-registry<span class="string">' (UID 113) with group `docker-registry'</span> ...</span><br><span class="line">Not creating home directory `/var/lib/docker-registry<span class="string">'.</span></span><br><span class="line"><span class="string">Processing triggers for systemd (229-4ubuntu21.16) ...</span></span><br><span class="line"><span class="string">Processing triggers for ureadahead (0.100.0-19) ...</span></span><br></pre></td></tr></table></figure><p>检查启动端口 5000</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># netstat -nlpt</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      27873/nginx -g daem</span><br><span class="line">tcp        0      0 127.0.0.1:8222          0.0.0.0:*               LISTEN      8466/python3    </span><br><span class="line">tcp6       0      0 :::5000                 :::*                    LISTEN      32026/docker-regist</span><br><span class="line">tcp6       0      0 :::8335                 :::*                    LISTEN      17406/docker-proxy</span><br><span class="line">tcp6       0      0 :::8336                 :::*                    LISTEN      17989/docker-proxy</span><br></pre></td></tr></table></figure><p>修改客户端镜像tag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker tag nginxtest 120.27.0.222:5000/nginxtest:1.0.0</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker images</span><br><span class="line">REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">&lt;none&gt;                        &lt;none&gt;              5b5cf5c2be8f        23 hours ago        249MB</span><br><span class="line">120.27.0.222:5000/nginxtest   1.0.0               1c26cc9ad467        24 hours ago        249MB</span><br><span class="line">nginxtest                     latest              1c26cc9ad467        24 hours ago        249MB</span><br></pre></td></tr></table></figure><p>推送镜像</p><p>无法推送到私有registry，提示我们需要https，不过可以修改docker 配置文件加上insecure-registries</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker push 120.27.0.222:5000/nginxtest:1.0.0</span><br><span class="line">The push refers to repository [120.27.0.222:5000/nginxtest]</span><br><span class="line">Get https://120.27.0.222:5000/v2/: http: server gave HTTP response to HTTPS client</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><p>配置参考:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"experimental"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"http://hub-mirror.c.163.com"</span>,</span><br><span class="line">    <span class="string">"https://docker.mirrors.ustc.edu.cn"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"insecure-registries"</span>:[<span class="string">"120.27.0.222:5000"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后重启客户端docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~/dockerfile_build/httpd$ docker push 120.27.0.222:5000/nginxtest:1.0.0</span><br><span class="line">The push refers to repository [120.27.0.222:5000/nginxtest]</span><br><span class="line">291f6e44771a: Pushed </span><br><span class="line">1.0.0: digest: sha256:fc4a234b91cc4b542bac8a6ad23b2ddcee60ae68fc4dbd4a52efb5f1b0baad71 size: 529</span><br></pre></td></tr></table></figure><p>上传成功后看目录结构，会存放到v2目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/docker-registry/</span><br><span class="line">└── docker</span><br><span class="line">    └── registry</span><br><span class="line">        └── v2</span><br><span class="line">            ├── blobs</span><br><span class="line">            │   └── sha256</span><br><span class="line">            │       ├── 0d</span><br><span class="line">            │       │   └── 0d120b6ccaa8c5e149176798b3501d4dd1885f961922497cd0abef155c869566</span><br><span class="line">            │       │       └── data</span><br><span class="line">            │       ├── 3c</span><br><span class="line">            │       │   └── 3c72a8ed68140139e483fe7368ae4d9651422749e91483557cbd5ecf99a96110</span><br><span class="line">            │       │       └── data</span><br><span class="line">            │       └── <span class="built_in">fc</span></span><br><span class="line">            │           └── fc4a234b91cc4b542bac8a6ad23b2ddcee60ae68fc4dbd4a52efb5f1b0baad71</span><br><span class="line">            │               └── data</span><br><span class="line">            └── repositories</span><br><span class="line">                └── nginxtest</span><br><span class="line">                    ├── _layers</span><br><span class="line">                    │   └── sha256</span><br><span class="line">                    │       ├── 0d120b6ccaa8c5e149176798b3501d4dd1885f961922497cd0abef155c869566</span><br><span class="line">                    │       │   └── link</span><br><span class="line">                    │       └── 3c72a8ed68140139e483fe7368ae4d9651422749e91483557cbd5ecf99a96110</span><br><span class="line">                    │           └── link</span><br><span class="line">                    ├── _manifests</span><br><span class="line">                    │   ├── revisions</span><br><span class="line">                    │   │   └── sha256</span><br><span class="line">                    │   │       └── fc4a234b91cc4b542bac8a6ad23b2ddcee60ae68fc4dbd4a52efb5f1b0baad71</span><br><span class="line">                    │   │           └── link</span><br><span class="line">                    │   └── tags</span><br><span class="line">                    │       └── 1.0.0</span><br><span class="line">                    │           ├── current</span><br><span class="line">                    │           │   └── link</span><br><span class="line">                    │           └── index</span><br><span class="line">                    │               └── sha256</span><br><span class="line">                    │                   └── fc4a234b91cc4b542bac8a6ad23b2ddcee60ae68fc4dbd4a52efb5f1b0baad71</span><br><span class="line">                    │                       └── link</span><br><span class="line">                    └── _uploads</span><br></pre></td></tr></table></figure><h2 id="使用容器安装"><a href="#使用容器安装" class="headerlink" title="使用容器安装"></a>使用容器安装</h2><p>因registry本身就是一个容器，默认情况下，会将私有仓库存放于容器内的/var/lib/registry目录下，这样如果容器被删除，则存放于容器中的镜像也会丢失。</p><p>下载registry镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker pull registry       </span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/registry</span><br><span class="line">cbdbe7a5bc2a: Pull complete </span><br><span class="line">47112e65547d: Pull complete </span><br><span class="line">46bcb632e506: Pull complete </span><br><span class="line">c1cc712bcecd: Pull complete </span><br><span class="line">3db6272dcbfa: Pull complete </span><br><span class="line">Digest: sha256:8be26f81ffea54106bae012c6f349df70f4d5e7e2ec01b143c46e2c03b9e551d</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> registry:latest</span><br><span class="line">docker.io/library/registry:latest</span><br></pre></td></tr></table></figure><p>启动registry容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker run -dit -p 5000:5000 --restart=always --name Myregistry -v /root/registry:/var/lib/registry registry </span></span><br><span class="line">d65c75db0954348d5d06a896c04c5e935606e023a1a260b62959600e0165d146</span><br><span class="line">droot@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">d65c75db0954        registry            <span class="string">"/entrypoint.sh /etc…"</span>   3 seconds ago       Up 2 seconds        0.0.0.0:5000-&gt;5000/tcp    Myregistry</span><br></pre></td></tr></table></figure><p>推送镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~/dockerfile_build/httpd$ docker push 120.27.0.222:5000/nginxtest:1.0.0</span><br><span class="line">The push refers to repository [120.27.0.222:5000/nginxtest]</span><br><span class="line">291f6e44771a: Pushed </span><br><span class="line">1.0.0: digest: sha256:fc4a234b91cc4b542bac8a6ad23b2ddcee60ae68fc4dbd4a52efb5f1b0baad71 size: 529</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DockerFile 构建镜像(一)</title>
      <link href="2020/08/17/DockerFile-%E4%BD%BF%E7%94%A8/"/>
      <url>2020/08/17/DockerFile-%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>从docker 官方下载的基础镜像有时候无法满足我们自己本身的业务需求，特别是配置文件，环境变量。这个时候通常需要自制我们自己的镜像。</p><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><p>Dokerfile是用来制作docker镜像的一个文本文件，并包含了构建镜像所需要的的指令及其参数。dockerfile 第一个非注释行必须是from,必须指明基础镜像。<br>Dockerfile其内部包含了一条条的指令，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。    </p><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><p>两类：</p><ul><li>指令</li><li>指令参数</li></ul><p>注意点：</p><ul><li>必须要有专用的工作目录</li><li>首字母必须大写</li><li>引用目录必须是在当前工作目录之下</li></ul><p>参考样例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基于centos镜像</span></span><br><span class="line">FROM centos  <span class="comment">#可以跟版本，如果不加默认是latest。FROM centos:latest</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#维护人的信息</span></span><br><span class="line">MAINTAINER The CentOS Project &lt;923401910@qq.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装httpd软件包</span></span><br><span class="line">RUN yum -y update</span><br><span class="line">RUN yum -y install httpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启80端口</span></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制网站首页文件至镜像中web站点下 index.html 必须要在当前目录存在</span></span><br><span class="line">COPY index.html /var/www/html/</span><br><span class="line"></span><br><span class="line">COPY static /var/www/html/static/  <span class="comment"># 一定要以斜线结尾 static不存在将会创建</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#复制该脚本至镜像中，并修改其权限</span></span><br><span class="line">ADD run.sh /run.sh</span><br><span class="line">RUN chmod 775 /run.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#当启动容器时执行的脚本文件</span></span><br><span class="line">CMD [<span class="string">"/run.sh"</span>]</span><br></pre></td></tr></table></figure><h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build  -t smhttpd:1.0.0 . </span><br><span class="line">docker build  -t smhttpd  .    <span class="comment">#默认是latest</span></span><br></pre></td></tr></table></figure><p>制作过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~/dockerfile_build/nginx$ docker build -t smnginx .</span><br><span class="line">Sending build context to Docker daemon   7.68kB</span><br><span class="line">Step 1/10 : FROM centos</span><br><span class="line"> ---&gt; 0d120b6ccaa8</span><br><span class="line">Step 2/10 : MAINTAINER The CentOS Project &lt;923401910@qq.com&gt;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 73711e378096</span><br><span class="line">Step 3/10 : RUN yum -y update</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 17e83a7625bc</span><br><span class="line">Step 4/10 : RUN yum -y install </span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; d65bbe61e58a</span><br><span class="line">Step 5/10 : EXPOSE 80</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 013883f8a333</span><br><span class="line">Step 6/10 : COPY index.html /var/www/html/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 98a2d57e8bf1</span><br><span class="line">Step 7/10 : COPY static /var/www/html/static/</span><br><span class="line"> ---&gt; 6156265c2a76</span><br><span class="line">Step 8/10 : ADD run.sh /run.sh</span><br><span class="line"> ---&gt; 4832b8d59439</span><br><span class="line">Step 9/10 : RUN chmod 775 /run.sh</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> a60d60aa3e19</span><br><span class="line">Removing intermediate container a60d60aa3e19</span><br><span class="line"> ---&gt; a95e79794432</span><br><span class="line">Step 10/10 : CMD [<span class="string">"/run.sh"</span>]</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> 5f71bc6a29b1</span><br><span class="line">Removing intermediate container 5f71bc6a29b1</span><br><span class="line"> ---&gt; 97a35e3ef1b7</span><br><span class="line">Successfully built 97a35e3ef1b7</span><br><span class="line">Successfully tagged smnginx:latest</span><br></pre></td></tr></table></figure><p>检查文件是否存在（不运行容器）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~/dockerfile_build/nginx$ docker images</span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">smnginx              latest              <span class="number">97</span>a35e3ef1b7        <span class="number">2</span> minutes ago       <span class="number">278</span>MB</span><br></pre></td></tr></table></figure><p><strong>rm选项运行后会自动删除容器，后面可以指定自定义命令，一般用于测试</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">luodi<span class="meta">@roddydeMacBook</span>-<span class="string">Pro:</span><span class="regexp">~/dockerfile_build/</span>nginx$ docker run --name smweb1 --rm smnginx ls -a <span class="regexp">/var/</span>www<span class="regexp">/html/</span></span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">index.html</span><br><span class="line"><span class="keyword">static</span></span><br><span class="line">luodi<span class="meta">@roddydeMacBook</span>-<span class="string">Pro:</span><span class="regexp">~/dockerfile_build/</span>nginx$ docker run --name smweb1 --rm smnginx ls -a <span class="regexp">/var/</span>www<span class="regexp">/html/</span><span class="keyword">static</span></span><br><span class="line">.</span><br><span class="line">..</span><br><span class="line">css</span><br><span class="line">img</span><br><span class="line">luodi<span class="meta">@roddydeMacBook</span>-<span class="string">Pro:</span><span class="regexp">~/dockerfile_build/</span>nginx$</span><br></pre></td></tr></table></figure><h2 id="指令介绍"><a href="#指令介绍" class="headerlink" title="指令介绍"></a>指令介绍</h2><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h3><p>FROM是最重要的一个且必须是DockerFile文件中的第一个非注释行，用于指定基准镜像。</p><p>语法:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM   <span class="params">&lt;repository&gt;</span>[:<span class="params">&lt;tag&gt;</span>] </span><br><span class="line">FROM   <span class="params">&lt;repository&gt;</span>@<span class="params">&lt;digest&gt;</span>   <span class="meta">#hash码</span></span><br></pre></td></tr></table></figure><h3 id="MAINTAINER-废弃"><a href="#MAINTAINER-废弃" class="headerlink" title="MAINTAINER(废弃)"></a>MAINTAINER(废弃)</h3><p>指定镜像的制作者，一般是名称加联系方式。不过目前已经被LABLE替代</p><h3 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h3><p>LABEL 指令会添加元数据到镜像。LABEL是以键值对形式出现的。MAINTAINER可以是一个KEY,同时还可以指定多个元数据信息。</p><p>语法：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=<span class="string">"luodi &lt;923401910@qq.com&gt;"</span></span></span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> version=<span class="string">"1.0"</span></span></span><br></pre></td></tr></table></figure><p>但是并不建议这样写，最好就写成一行，如太长需要换行的话则使用\符号</p><p>如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LABEL multi.<span class="attribute">label1</span>=<span class="string">"value1"</span> \</span><br><span class="line">multi.<span class="attribute">label2</span>=<span class="string">"value2"</span> \</span><br><span class="line"><span class="attribute">other</span>=<span class="string">"value3"</span></span><br></pre></td></tr></table></figure><p>说明：LABEL会继承基础镜像种的LABEL，如遇到key相同，则值覆盖</p><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h3><p>用于从Docker主机复制文件到创建的镜像文件中</p><p>语法:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="bash">  &lt;src&gt; &lt;dest&gt;</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash">  [<span class="string">"&lt;src&gt;"</span>,<span class="string">"dest"</span>]</span></span><br></pre></td></tr></table></figure><p>注意:</p><ul><li>src 必须是build上下文件中的路径，不能是父目录中的文件</li><li>如果src是目录，其内部文件或子目录会被递归复制，但src本身不会</li><li>如果dest事先不存在，它将会被自动创建，这包括其父目录路径</li><li>如果指定了多个src，或者在src使用通配符，dest必须是个目录，且必须是/结尾</li></ul><h3 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h3><p>功能和copy相似，但是ADD支持URL路径和TAR文件。如果是一个本地tar.gz包，会被执行tar -x命令被自动展开。但是URL上的tar包不会</p><p>语法:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ADD</span><span class="bash">  &lt;src&gt; &lt;dest&gt;</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash">  [<span class="string">"&lt;src&gt;"</span>,<span class="string">"dest"</span>]</span></span><br></pre></td></tr></table></figure><p>下载并解压文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADD http:<span class="regexp">//</span>nginx.org<span class="regexp">/download/</span>nginx-<span class="number">1.19</span>.<span class="number">2</span>.tar.gz  <span class="regexp">/usr/</span>local<span class="regexp">/src/</span>   <span class="comment">#下载到src但是并不会解压</span></span><br><span class="line">ADD nginx-<span class="number">1.19</span>.<span class="number">2</span>.tar.gz  <span class="regexp">/usr/</span>local<span class="regexp">/src/</span>      <span class="comment">#解压本地文件到/usr/local/src/下</span></span><br></pre></td></tr></table></figure><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h3><p>设置工作目录，对RUN,CMD,ENTRYPOINT,COPY,ADD生效。如果不存在则会创建，也可以设置多次。</p><p>语法：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /path/to/workdir</span></span><br></pre></td></tr></table></figure><h3 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h3><p>设置启动容器的用户，可以是用户名或UID，所以，只有下面的两种写法是正确的</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USER daemo</span><br><span class="line">USER UID</span><br></pre></td></tr></table></figure><p>注意：如果设置了容器以daemon用户去运行，那么RUN, CMD 和 ENTRYPOINT 都会以这个用户去运行</p><h3 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h3><p>可实现挂载功能，用于在镜像中创建一个挂载点目录，以挂载Docker Host上的卷和其他容器上的卷到容器中</p><p>语法为：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/data"</span>]</span></span><br></pre></td></tr></table></figure><p>说明：</p><p>[“/data”]可以是一个JsonArray ，也可以是多个值。所以如下几种写法都是正确的</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/var/log/"</span>]</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> /var/<span class="built_in">log</span></span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> /var/<span class="built_in">log</span> /var/db</span></span><br></pre></td></tr></table></figure><p>一般的使用场景为需要持久化存储数据时</p><p>容器使用的是AUFS，这种文件系统不能持久化数据，当容器关闭后，所有的更改都会丢失。</p><p>所以当数据需要持久化时用这个命令。</p><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h3><p>用于为容器打开要监听的端口以实现外部通信，相当于暴露端口，会添加一条NAT规则。</p><p>只是声明可以暴露的端口，但是不会真正暴露。如果要暴露端口需要启动容器时加上<strong>-P</strong>选项,会随机做端口映射，可以使用-p 指定映射关系</p><p>语法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE <span class="tag">&lt;<span class="name">port</span>&gt;</span></span><br><span class="line">EXPOSE <span class="tag">&lt;<span class="name">port</span>&gt;</span>[/protocol] <span class="tag">&lt;<span class="name">port</span>&gt;</span></span><br></pre></td></tr></table></figure><p>-P</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~/dockerfile_build/nginx$ docker run -dit  -P --rm --name webhttpd smhttpd</span><br><span class="line"><span class="number">1</span>d12e3386299        smhttpd             <span class="string">"/run.sh"</span>                <span class="number">2</span> minutes ago       Up <span class="number">2</span> minutes        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">32771</span>-&gt;<span class="number">80</span>/tcp               webhttpd</span><br></pre></td></tr></table></figure><p>指定端口</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~/dockerfile_build/nginx$ docker run -dit -p <span class="number">8044</span>:<span class="number">80</span> --name webhttp2 smhttpd</span><br><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~/dockerfile_build/nginx$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line"><span class="number">62f</span>afeb4aaa4        smhttpd             <span class="string">"/run.sh"</span>                <span class="number">3</span> seconds ago       Up <span class="number">2</span> seconds        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8044</span>-&gt;<span class="number">80</span>/tcp                webhttp2</span><br><span class="line"><span class="number">1</span>d12e3386299        smhttpd             <span class="string">"/run.sh"</span>                <span class="number">2</span> minutes ago       Up <span class="number">2</span> minutes        <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">32771</span>-&gt;<span class="number">80</span>/tcp               webhttpd</span><br></pre></td></tr></table></figure><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h3><p>功能为设置环境变量,可被Dockerfile文件中位于其后的其他指令调用</p><p>语法有两种</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENV <span class="tag">&lt;<span class="name">key</span>&gt;</span> <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">ENV <span class="tag">&lt;<span class="name">key</span>&gt;</span>=<span class="tag">&lt;<span class="name">value</span>&gt;</span> ...</span><br></pre></td></tr></table></figure><p>两者的区别就是第一种是一次设置一个，第二种是一次设置多个</p><p>样例：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENV</span> DOC_ROOT /var/www/html/</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制网站首页文件至镜像中web站点下 index.html 必须要在当前目录存在</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> index.html <span class="variable">$DOC_ROOT</span>  <span class="comment"># $&#123;DOC_ROOT:-/var/www/html/&#125;  如果没有值，赋默认值</span></span></span><br></pre></td></tr></table></figure><p>可以在docker run 的时候设定变量值</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="builtin-name">run</span> --name testweb -e <span class="attribute">WEB_HOST</span>=<span class="string">"172.103.2.2"</span></span><br></pre></td></tr></table></figure><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h3><p>构建镜像时运行指定的命令,可以运行多次，如果有关联关系建议使用&amp;&amp;关联</p><p>语法:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> &lt;cmd&gt;</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> [<span class="string">"cmd"</span>,<span class="string">"参数1"</span>,<span class="string">"参数2"</span>]</span></span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install httpd</span></span><br></pre></td></tr></table></figure><p>注意：多行命令不要写多个RUN，原因是Dockerfile中每一个指令都会建立一层.</p><p>多少个RUN就构建了多少层镜像，会造成镜像的臃肿、多层，不仅仅增加了构件部署的时间，还容易出错。</p><p>RUN书写时的换行符是\</p><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h3><p>容器启动时要运行的命令</p><p>语法：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"executable"</span>,<span class="string">"param1"</span>,<span class="string">"param2"</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"param1"</span>,<span class="string">"param2"</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">command</span> param1 param2</span></span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#当启动容器时执行的脚本文件</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/run.sh"</span>]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django dbshell CommandError  You appear not to have the &#39;mysql&#39; program installed or on your path.</title>
      <link href="2020/08/13/django-dbshell-CommandError/"/>
      <url>2020/08/13/django-dbshell-CommandError/</url>
      
        <content type="html"><![CDATA[<h2 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h2><p>Ubuntu 16.04</p><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>“CommandError: You appear not to have the ‘mysql’ program installed or on your path.”</p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>安装mysql-client</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mysql-client</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e6fdj7fol5q85vjyw6Z:/data/webserver<span class="comment"># python manage.py dbshell</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 4886593</span><br><span class="line">Server version: 5.7.26-log Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 镜像发布到docker hub</title>
      <link href="2020/08/12/docker-%E9%95%9C%E5%83%8F%E5%8F%91%E5%B8%83%E5%88%B0docker-hub/"/>
      <url>2020/08/12/docker-%E9%95%9C%E5%83%8F%E5%8F%91%E5%B8%83%E5%88%B0docker-hub/</url>
      
        <content type="html"><![CDATA[<h2 id="注册账户"><a href="#注册账户" class="headerlink" title="注册账户"></a>注册账户</h2><p>首先你得准备一个hub 的帐号, 去 <a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a> 注册</p><h2 id="登录账户并创建仓库"><a href="#登录账户并创建仓库" class="headerlink" title="登录账户并创建仓库"></a>登录账户并创建仓库</h2><p>创建仓库</p><img src="img/1597219076033.jpg"><img src="img/1597219113123.jpg"><h2 id="登录到docker-hub"><a href="#登录到docker-hub" class="headerlink" title="登录到docker hub"></a>登录到docker hub</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don<span class="string">'t have a Docker ID, head over to https://hub.docker.com to create one.</span></span><br><span class="line"><span class="string">Username: roddy1219</span></span><br><span class="line"><span class="string">Password:</span></span><br><span class="line"><span class="string">Login Succeeded</span></span><br><span class="line"><span class="string">luodi@roddydeMacBook-Pro:~$</span></span><br></pre></td></tr></table></figure><h2 id="修改本地镜像tag"><a href="#修改本地镜像tag" class="headerlink" title="修改本地镜像tag"></a>修改本地镜像tag</h2><p>打一个tag 名称必须是账户名/仓库:tag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker tag  busybox:latest roddy1219/busybox:latest</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker images</span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx                latest              08393e824c32        7 days ago          132MB</span><br><span class="line">busybox              latest              018c9d7b792b        2 weeks ago         1.22MB</span><br><span class="line">roddy1219/busybox    latest              018c9d7b792b        2 weeks ago         1.22MB</span><br></pre></td></tr></table></figure><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker push roddy1219/busybox:latest</span><br><span class="line">The push refers to repository [docker.io/roddy1219/busybox]</span><br><span class="line">514c3a3e64d4: Pushed</span><br></pre></td></tr></table></figure><h2 id="退出docker-hub"><a href="#退出docker-hub" class="headerlink" title="退出docker hub"></a>退出docker hub</h2><p>使用docker logout</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker <span class="built_in">logout</span></span><br><span class="line">Removing login credentials <span class="keyword">for</span> https://index.docker.io/v1/</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><p>注:建议使用阿里云的容器仓库，docker hub太慢</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 镜像导入导出</title>
      <link href="2020/08/12/docker-%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>2020/08/12/docker-%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="导出本地镜像"><a href="#导出本地镜像" class="headerlink" title="导出本地镜像"></a>导出本地镜像</h2><p>导出busybox镜像,也可以导出多个image到一个压缩文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker images</span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx                latest              08393e824c32        7 days ago          132MB</span><br><span class="line">busybox              latest              018c9d7b792b        2 weeks ago         1.22MB</span><br><span class="line">cfcontorl            1.0.0               1a1b058798ce        4 weeks ago         97.6MB</span><br><span class="line">&lt;none&gt;               &lt;none&gt;              252cf95e99e7        4 weeks ago         97.6MB</span><br><span class="line">ubuntu               latest              adafef2e596e        5 weeks ago         73.9MB</span><br><span class="line">zookeeper            latest              6982b35ff928        6 weeks ago         252MB</span><br><span class="line">mysql                5.7.30              9cfcce23593a        2 months ago        448MB</span><br><span class="line">mysql                latest              be0dbf01a0f3        2 months ago        541MB</span><br><span class="line">wurstmeister/kafka   latest              f1905dce9659        3 months ago        431MB</span><br><span class="line">mysql                8.0.19              0c27e8e5fcfa        3 months ago        546MB</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><p>使用docker save -o 导出镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker save -o  ./busybox_image.gz  busybox:latest</span><br></pre></td></tr></table></figure><h2 id="导出多个image"><a href="#导出多个image" class="headerlink" title="导出多个image"></a>导出多个image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker save -o  ./all_image.gz  busybox:latest  nginx:latest</span><br></pre></td></tr></table></figure><h2 id="导入镜像到其他宿主机"><a href="#导入镜像到其他宿主机" class="headerlink" title="导入镜像到其他宿主机"></a>导入镜像到其他宿主机</h2><p>上传busybox_imge.gz到其他宿主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx               latest              08393e824c32        7 days ago          132MB</span><br><span class="line">mysql               5.7                 8679ced16d20        2 weeks ago         448MB</span><br><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># ls busybox_image.gz </span></span><br><span class="line">busybox_image.gz</span><br><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>使用docker load命令导入镜像压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker load &lt; busybox_image.gz </span></span><br><span class="line">514c3a3e64d4: Loading layer [==================================================&gt;]  1.442MB/1.442MB</span><br><span class="line">Loaded image: busybox:latest</span><br><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx               latest              08393e824c32        7 days ago          132MB</span><br><span class="line">busybox             latest              018c9d7b792b        2 weeks ago         1.22MB</span><br><span class="line">mysql               5.7                 8679ced16d20        2 weeks ago         448MB</span><br></pre></td></tr></table></figure><p>或者使用以下命令</p><p>docker load -i busybox_image.gz<br>docker load –input busybox_image.gz </p><h2 id="使用镜像启动容器"><a href="#使用镜像启动容器" class="headerlink" title="使用镜像启动容器"></a>使用镜像启动容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker run --name=test4 -itd busybox  </span></span><br><span class="line">b66d72fd79dc0940dc2c259bd38bcb5447bfd099405dea692a39ff6b9f6ce0ad</span><br><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">b66d72fd79dc        busybox             <span class="string">"sh"</span>                4 seconds ago       Up 2 seconds                            test4</span><br><span class="line">root@iZm5e7rjmq1tkuwoy8h8vuZ:~<span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 基础命令使用</title>
      <link href="2020/08/11/docker-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/"/>
      <url>2020/08/11/docker-%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h2><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><p>用于搜索docker registory中镜像信息</p><p>其中第一个（没有前缀的称为顶级/顶层仓库）,一般是docker官方的仓库。后面xxxx/nginx表示用户仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker search nginx</span><br><span class="line">NAME                               DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">nginx                              Official build of Nginx.                        13590               [OK]</span><br><span class="line">jwilder/nginx-proxy                Automated Nginx reverse proxy <span class="keyword">for</span> docker con…   1857                                    [OK]</span><br><span class="line">richarvey/nginx-php-fpm            Container running Nginx + PHP-FPM capable of…   782                                     [OK]</span><br><span class="line">linuxserver/nginx                  An Nginx container, brought to you by LinuxS…   126</span><br><span class="line">bitnami/nginx                      Bitnami nginx Docker Image                      88                                      [OK]</span><br><span class="line">tiangolo/nginx-rtmp                Docker image with Nginx using the nginx-rtmp…   87                                      [OK]</span><br><span class="line">jc21/nginx-proxy-manager           Docker container <span class="keyword">for</span> managing Nginx proxy ho…   77</span><br><span class="line">alfg/nginx-rtmp                    NGINX, nginx-rtmp-module and FFmpeg from sou…   72                                      [OK]</span><br><span class="line">nginxdemos/hello                   NGINX webserver that serves a simple page co…   59                                      [OK]</span><br><span class="line">jlesage/nginx-proxy-manager        Docker container <span class="keyword">for</span> Nginx Proxy Manager        53                                      [OK]</span><br><span class="line">nginx/nginx-ingress                NGINX Ingress Controller <span class="keyword">for</span> Kubernetes         37</span><br><span class="line">privatebin/nginx-fpm-alpine        PrivateBin running on an Nginx, php-fpm &amp; Al…   31                                      [OK]</span><br><span class="line">schmunk42/nginx-redirect           A very simple container to redirect HTTP tra…   19                                      [OK]</span><br><span class="line">nginxinc/nginx-unprivileged        Unprivileged NGINX Dockerfiles                  17</span><br><span class="line">nginx/nginx-prometheus-exporter    NGINX Prometheus Exporter                       14</span><br><span class="line">centos/nginx-112-centos7           Platform <span class="keyword">for</span> running nginx 1.12 or building …   13</span><br><span class="line">centos/nginx-18-centos7            Platform <span class="keyword">for</span> running nginx 1.8 or building n…   13</span><br><span class="line">raulr/nginx-wordpress              Nginx front-end <span class="keyword">for</span> the official wordpress:f…   13                                      [OK]</span><br><span class="line">blacklabelops/nginx                Dockerized Nginx Reverse Proxy Server.          13                                      [OK]</span><br><span class="line">mailu/nginx                        Mailu nginx frontend                            7                                       [OK]</span><br><span class="line">bitwarden/nginx                    The Bitwarden nginx web server acting as a r…   7</span><br><span class="line">sophos/nginx-vts-exporter          Simple server that scrapes Nginx vts stats a…   7                                       [OK]</span><br><span class="line">bitnami/nginx-ingress-controller   Bitnami Docker Image <span class="keyword">for</span> NGINX Ingress Contr…   6                                       [OK]</span><br><span class="line">wodby/nginx                        Generic nginx                                   1                                       [OK]</span><br><span class="line">ansibleplaybookbundle/nginx-apb    An APB to deploy NGINX                          1                                       [OK]</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><p>默认安装的镜像大部分用的centos/ubuntu，如果需要自定义，大部分都是自己制作镜像。</p><p>alpine版本：专门用于制作的小镜像<br>stable版本: 稳定版本镜像<br>latest:   最新版本镜像</p><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><p>pull 用于下载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker pull nginx</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">bf5952930446: Pull complete</span><br><span class="line">ba755a256dfe: Downloading [===============================================&gt;   ]  24.88MB/26.34MB</span><br><span class="line">c57dd87d0b93: Download complete</span><br><span class="line">d7fbf29df889: Download complete</span><br><span class="line">1f1070938ccd: Download complete</span><br></pre></td></tr></table></figure><h3 id="images"><a href="#images" class="headerlink" title="images"></a>images</h3><p>列出本地下载的镜像，该命令和<code>docker image ls</code> 效果一致。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker images</span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx                latest              08393e824c32        6 days ago          132MB</span><br><span class="line">cfcontorl            1.0.0               1a1b058798ce        4 weeks ago         97.6MB</span><br><span class="line">&lt;none&gt;               &lt;none&gt;              252cf95e99e7        4 weeks ago         97.6MB</span><br><span class="line">ubuntu               latest              adafef2e596e        5 weeks ago         73.9MB</span><br><span class="line">zookeeper            latest              6982b35ff928        6 weeks ago         252MB</span><br><span class="line">mysql                5.7.30              9cfcce23593a        2 months ago        448MB</span><br><span class="line">mysql                latest              be0dbf01a0f3        2 months ago        541MB</span><br><span class="line">wurstmeister/kafka   latest              f1905dce9659        3 months ago        431MB</span><br><span class="line">mysql                8.0.19              0c27e8e5fcfa        3 months ago        546MB</span><br></pre></td></tr></table></figure><p>“<none><none> “ 这种镜像在Docker官方文档中被称作dangling images，指的是没有标签并且没有被容器使用的镜像。</p><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p>删除一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                     PORTS                                                   NAMES</span><br><span class="line">5abc6ea0c7f8        wurstmeister/kafka   <span class="string">"start-kafka.sh"</span>         4 weeks ago         Exited (255) 3 weeks ago   0.0.0.0:9092-&gt;9092/tcp                                  kafka</span><br><span class="line">a728e2d2d00e        zookeeper            <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Exited (255) 3 weeks ago   2888/tcp, 3888/tcp, 8080/tcp, 0.0.0.0:32768-&gt;2181/tcp   zookeeper</span><br><span class="line">32dead838953        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           jolly_ellis</span><br><span class="line">186f3d1a87c2        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           objective_mendeleev</span><br><span class="line">81a7d83a1333        cfcontorl:1.0.0      <span class="string">"/opt/Cfcontorl"</span>         4 weeks ago         Exited (1) 4 weeks ago                                                             cfcontorl</span><br><span class="line">392dce6fffe1        mysql:5.7.30         <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks                 33060/tcp, 0.0.0.0:3307-&gt;3306/tcp                       mysql5</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker rm cfcontorl</span><br><span class="line">cfcontorl</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                     PORTS                                                   NAMES</span><br><span class="line">5abc6ea0c7f8        wurstmeister/kafka   <span class="string">"start-kafka.sh"</span>         4 weeks ago         Exited (255) 3 weeks ago   0.0.0.0:9092-&gt;9092/tcp                                  kafka</span><br><span class="line">a728e2d2d00e        zookeeper            <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Exited (255) 3 weeks ago   2888/tcp, 3888/tcp, 8080/tcp, 0.0.0.0:32768-&gt;2181/tcp   zookeeper</span><br><span class="line">32dead838953        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           jolly_ellis</span><br><span class="line">186f3d1a87c2        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           objective_mendeleev</span><br><span class="line">392dce6fffe1        mysql:5.7.30         <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks                 33060/tcp, 0.0.0.0:3307-&gt;3306/tcp                       mysql5</span><br></pre></td></tr></table></figure><h3 id="rmi"><a href="#rmi" class="headerlink" title="rmi"></a>rmi</h3><p>删除一个镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker rmi --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Usage:docker rmi [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line"></span><br><span class="line">Remove one or more images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --force      Force removal of the image   //强制删除一个镜像</span><br><span class="line">      --no-prune   Do not delete untagged parents</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker rmi busybox</span><br><span class="line">Untagged: busybox:latest</span><br><span class="line">Untagged: busybox@sha256:4f47c01fa91355af2865ac10fef5bf6ec9c7f42ad2321377c21e844427972977</span><br><span class="line">Deleted: sha256:018c9d7b792b4be80095d957533667279843acf9a46c973067c8d1dff31ea8b4</span><br><span class="line">Deleted: sha256:514c3a3e64d4ebf15f482c9e8909d130bcd53bcc452f0225b0a04744de7b8c43</span><br></pre></td></tr></table></figure><h3 id="ps-container-ls"><a href="#ps-container-ls" class="headerlink" title="ps (container ls)"></a>ps (container ls)</h3><p>列出容器</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -<span class="keyword">a</span>  <span class="comment"> //all 列出所有容器</span></span><br><span class="line">ps     <span class="comment"> // 列出正在运行的容器</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                     PORTS                                                   NAMES</span><br><span class="line">5abc6ea0c7f8        wurstmeister/kafka   <span class="string">"start-kafka.sh"</span>         4 weeks ago         Exited (255) 3 weeks ago   0.0.0.0:9092-&gt;9092/tcp                                  kafka</span><br><span class="line">a728e2d2d00e        zookeeper            <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Exited (255) 3 weeks ago   2888/tcp, 3888/tcp, 8080/tcp, 0.0.0.0:32768-&gt;2181/tcp   zookeeper</span><br><span class="line">32dead838953        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           jolly_ellis</span><br><span class="line">186f3d1a87c2        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                                           objective_mendeleev</span><br><span class="line">81a7d83a1333        cfcontorl:1.0.0      <span class="string">"/opt/Cfcontorl"</span>         4 weeks ago         Exited (1) 4 weeks ago                                                             cfcontorl</span><br><span class="line">392dce6fffe1        mysql:5.7.30         <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks                 33060/tcp, 0.0.0.0:3307-&gt;3306/tcp                       mysql5</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">392dce6fffe1        mysql:5.7.30        <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks          33060/tcp, 0.0.0.0:3307-&gt;3306/tcp   mysql5</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><p>启动一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker start zookeeper</span><br><span class="line">zookeeper</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                   NAMES</span><br><span class="line">a728e2d2d00e        zookeeper           <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Up 2 seconds        2888/tcp, 3888/tcp, 8080/tcp, 0.0.0.0:32768-&gt;2181/tcp   zookeeper</span><br><span class="line">392dce6fffe1        mysql:5.7.30        <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks          33060/tcp, 0.0.0.0:3307-&gt;3306/tcp                       mysql5</span><br></pre></td></tr></table></figure><h3 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h3><p>重启一个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker restart zookeeper</span><br><span class="line">zookeeper</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><h3 id="stop（-15）-kill（-9）"><a href="#stop（-15）-kill（-9）" class="headerlink" title="stop（-15）/kill（-9）"></a>stop（-15）/kill（-9）</h3><p>stop 停止一个或者多个容器<br>kill 强制停止一个或多个容器(不建议生产使用)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker stop zookeeper</span><br><span class="line">zookeeper</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">392dce6fffe1        mysql:5.7.30        <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks          33060/tcp, 0.0.0.0:3307-&gt;3306/tcp   mysql5</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker <span class="built_in">kill</span> zookeeper</span><br><span class="line">zookeeper</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                          PORTS                               NAMES</span><br><span class="line">efafc195cc87        nginx:latest         <span class="string">"/docker-entrypoint.…"</span>   11 minutes ago      Exited (0) About a minute ago                                       ngx1</span><br><span class="line">5abc6ea0c7f8        wurstmeister/kafka   <span class="string">"start-kafka.sh"</span>         4 weeks ago         Exited (255) 3 weeks ago        0.0.0.0:9092-&gt;9092/tcp              kafka</span><br><span class="line">a728e2d2d00e        zookeeper            <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Exited (137) 4 seconds ago                                          zookeeper</span><br><span class="line">32dead838953        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                            jolly_ellis</span><br><span class="line">186f3d1a87c2        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                            objective_mendeleev</span><br><span class="line">392dce6fffe1        mysql:5.7.30         <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks                      33060/tcp, 0.0.0.0:3307-&gt;3306/tcp   mysql5</span><br></pre></td></tr></table></figure><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><p>创建并启动一个容器run = create+start</p><p>-d: daemon   用于支撑容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker run --name ngx1 -d  nginx:latest</span><br><span class="line">efafc195cc875d0b6895b47f2b6a1215073fae043bc754bb03839865fd530fac</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                   NAMES</span><br><span class="line">efafc195cc87        nginx:latest        <span class="string">"/docker-entrypoint.…"</span>   2 seconds ago       Up 1 second         80/tcp                                                  ngx1</span><br><span class="line">a728e2d2d00e        zookeeper           <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Up About a minute   2888/tcp, 3888/tcp, 8080/tcp, 0.0.0.0:32769-&gt;2181/tcp   zookeeper</span><br><span class="line">392dce6fffe1        mysql:5.7.30        <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks          33060/tcp, 0.0.0.0:3307-&gt;3306/tcp                       mysql5</span><br><span class="line">luodi@roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><h3 id="create"><a href="#create" class="headerlink" title="create"></a>create</h3><p>创建一个容器但是不启动它</p><p>创建一个ngx2的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker create --name ngx2  nginx:latest</span><br><span class="line">81bcf8637b40f7764fd9f2701ab2f6cb97cee5e08cd29fa096d62207dd456bfe</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">392dce6fffe1        mysql:5.7.30        <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks          33060/tcp, 0.0.0.0:3307-&gt;3306/tcp   mysql5</span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                       PORTS                               NAMES</span><br><span class="line">81bcf8637b40        nginx:latest         <span class="string">"/docker-entrypoint.…"</span>   4 seconds ago       Created                                                          ngx2</span><br><span class="line">efafc195cc87        nginx:latest         <span class="string">"/docker-entrypoint.…"</span>   19 minutes ago      Exited (0) 10 minutes ago                                        ngx1</span><br><span class="line">5abc6ea0c7f8        wurstmeister/kafka   <span class="string">"start-kafka.sh"</span>         4 weeks ago         Exited (255) 3 weeks ago     0.0.0.0:9092-&gt;9092/tcp              kafka</span><br><span class="line">a728e2d2d00e        zookeeper            <span class="string">"/docker-entrypoint.…"</span>   4 weeks ago         Exited (143) 7 minutes ago                                       zookeeper</span><br><span class="line">32dead838953        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                         jolly_ellis</span><br><span class="line">186f3d1a87c2        adafef2e596e         <span class="string">"/bin/sh -c 'apt-get…"</span>   4 weeks ago         Exited (100) 4 weeks ago                                         objective_mendeleev</span><br><span class="line">392dce6fffe1        mysql:5.7.30         <span class="string">"docker-entrypoint.s…"</span>   5 weeks ago         Up 3 weeks                   33060/tcp, 0.0.0.0:3307-&gt;3306/tcp   mysql5</span><br></pre></td></tr></table></figure><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><p>查看docker版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">luodi@roddydeMacBook-Pro:~$ docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.8</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.17</span><br><span class="line"> Git commit:        afacb8b</span><br><span class="line"> Built:             Wed Mar 11 01:21:11 2020</span><br><span class="line"> OS/Arch:           darwin/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.8</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.17</span><br><span class="line">  Git commit:       afacb8b</span><br><span class="line">  Built:            Wed Mar 11 01:29:16 2020</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          v1.2.13</span><br><span class="line">  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc10</span><br><span class="line">  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>drf 框架自定义分页代码</title>
      <link href="2020/07/23/drf-%E6%A1%86%E6%9E%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E4%BB%A3%E7%A0%81/"/>
      <url>2020/07/23/drf-%E6%A1%86%E6%9E%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E9%A1%B5%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>1.重写分页 utils/Page文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination,LimitOffsetPagination</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StandardResultsSetPagination</span><span class="params">(PageNumberPagination)</span>:</span></span><br><span class="line">    page_size = <span class="number">20</span></span><br><span class="line">    page_size_query_param = <span class="string">'pageSize'</span></span><br><span class="line">    max_page_size = <span class="number">2000</span></span><br><span class="line">    page_query_param = <span class="string">"pageNo"</span>  <span class="comment"># 定制请求参数为pageNo</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_paginated_response</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Response(OrderedDict([</span><br><span class="line">            (<span class="string">'totalCount'</span>, self.page.paginator.count),</span><br><span class="line">            (<span class="string">'pageNo'</span>, self.page.number),</span><br><span class="line">            (<span class="string">'pageSize'</span>, self.get_page_size(self.request)),</span><br><span class="line">            (<span class="string">'totalPage'</span>, self.page.paginator.num_pages),</span><br><span class="line">            (<span class="string">'next'</span>, self.get_next_link()),</span><br><span class="line">            (<span class="string">'previous'</span>, self.get_previous_link()),</span><br><span class="line">            (<span class="string">'code'</span>, <span class="number">0</span>),</span><br><span class="line">            (<span class="string">'message'</span>, <span class="string">'Ok'</span>),</span><br><span class="line">            (<span class="string">'data'</span>, data), <span class="comment"># 返回的data标示</span></span><br><span class="line">        ]))</span><br></pre></td></tr></table></figure><p>2.配置settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_CACHE_RESPONSE_TIMEOUT'</span>: <span class="number">60</span> * <span class="number">60</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'DEFAULT_PAGINATION_CLASS'</span>: <span class="string">'utils.Page.StandardResultsSetPagination'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'DEFAULT_FILTER_BACKENDS'</span>: (<span class="string">'django_filters.rest_framework.DjangoFilterBackend'</span>,),</span><br><span class="line"></span><br><span class="line">    <span class="string">'DEFAULT_AUTHENTICATION_CLASSES'</span>: (</span><br><span class="line">        <span class="string">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span>,</span><br><span class="line">        <span class="comment"># 'rest_framework.authentication.SessionAuthentication',</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="string">'DEFAULT_PERMISSION_CLASSES'</span>: (</span><br><span class="line">        <span class="string">'rest_framework.permissions.AllowAny'</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">'DEFAULT_PARSER_CLASSES'</span>: (</span><br><span class="line">        <span class="string">'rest_framework.parsers.JSONParser'</span>,</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.访问结果 </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"totalCount"</span>: <span class="number">1151</span>,           <span class="comment">//总数据条数</span></span><br><span class="line">    <span class="attr">"pageNo"</span>: <span class="number">2</span>,                  <span class="comment">//当前分页</span></span><br><span class="line">    <span class="attr">"pageSize"</span>: <span class="number">3</span>,               <span class="comment">//分页大小</span></span><br><span class="line">    <span class="attr">"totalPage"</span>: <span class="number">384</span>,            <span class="comment">//分页数</span></span><br><span class="line">    <span class="attr">"next"</span>: <span class="string">"http://127.0.0.1:8001/api/users/?pageNo=3&amp;pageSize=3"</span>,</span><br><span class="line">    <span class="attr">"previous"</span>: <span class="string">"http://127.0.0.1:8001/api/users/?pageSize=3"</span>,</span><br><span class="line">    <span class="attr">"code"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"message"</span>: <span class="string">"Ok"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"username"</span>: <span class="string">"xxxx"</span>,</span><br><span class="line">            <span class="attr">"mobile"</span>: <span class="string">"xxxxxx"</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"xxxx@qq.com"</span>,</span><br><span class="line">            <span class="attr">"date_joined"</span>: <span class="string">"2019-04-25 13:44:47"</span>,</span><br><span class="line">            <span class="attr">"last_login"</span>: <span class="string">"2019-04-27 10:00:44"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"username"</span>: <span class="string">"roddytest"</span>,</span><br><span class="line">            <span class="attr">"mobile"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"xxxx@qq.com"</span>,</span><br><span class="line">            <span class="attr">"date_joined"</span>: <span class="string">"2019-04-26 15:50:27"</span>,</span><br><span class="line">            <span class="attr">"last_login"</span>: <span class="string">"2019-07-06 19:33:54"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"username"</span>: <span class="string">"xxxx"</span>,</span><br><span class="line">            <span class="attr">"mobile"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="attr">"email"</span>: <span class="string">"xx@qq.com"</span>,</span><br><span class="line">            <span class="attr">"date_joined"</span>: <span class="string">"2019-04-29 11:30:22"</span>,</span><br><span class="line">            <span class="attr">"last_login"</span>: <span class="string">"2020-01-12 06:17:14"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> drf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 创建数据库并制定utf-8编码</title>
      <link href="2020/07/23/mysql-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E5%88%B6%E5%AE%9Autf-8%E7%BC%96%E7%A0%81/"/>
      <url>2020/07/23/mysql-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E5%88%B6%E5%AE%9Autf-8%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>创建数据时指定编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS dbname  DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka 创建&amp;消费topic</title>
      <link href="2020/07/08/kafka-%E5%88%9B%E5%BB%BA-%E6%B6%88%E8%B4%B9topic/"/>
      <url>2020/07/08/kafka-%E5%88%9B%E5%BB%BA-%E6%B6%88%E8%B4%B9topic/</url>
      
        <content type="html"><![CDATA[<h2 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash-4.4# ./bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic  topicname</span><br></pre></td></tr></table></figure><p>2181是zookeeper端口</p><p>创建成功提示,kafka建议不要使用.或者_作topic名，但是不影响使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Created topic monitor_ping_topic</span><br></pre></td></tr></table></figure><h2 id="查看topic"><a href="#查看topic" class="headerlink" title="查看topic"></a>查看topic</h2><p>查看topic使用–list 即可列出有哪些topic</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bash<span class="number">-4.4</span># ./bin/kafka-topics.sh --list --zookeeper zookeeper:<span class="number">2181</span></span><br><span class="line">__consumer_offsets</span><br><span class="line">monitor_ping_topic</span><br><span class="line">monitor_solve_topic</span><br><span class="line">monitor_times_topic</span><br><span class="line">bash<span class="number">-4.4</span>#</span><br></pre></td></tr></table></figure><h2 id="生产消息"><a href="#生产消息" class="headerlink" title="生产消息"></a>生产消息</h2><p>回车输入消息内容</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bash-4.4# </span>./<span class="keyword">bin/kafka-console-producer.sh </span>--<span class="keyword">broker-list </span>localhost:<span class="number">9092</span> --topic monitor_ping_topic</span><br><span class="line">&gt;&#123;<span class="string">"Host"</span>:<span class="string">"192.168.1.1"</span>,<span class="string">"Type"</span>:<span class="number">1</span>,<span class="string">"Status"</span>:<span class="string">"success"</span>,<span class="string">"PingCount"</span>:<span class="number">3</span>,<span class="string">"AvgRtt"</span>:<span class="number">10756000</span>,<span class="string">"PacketLoss"</span>:<span class="number">0</span>,<span class="string">"CreateTime"</span>:<span class="string">"2020/07/08 13:58:16"</span>&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h2 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h2><p>from-beginning 表示从头开始消费消息</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">bash-4.4# </span>./<span class="keyword">bin/kafka-console-consumer.sh </span>--<span class="keyword">bootstrap-server </span>localhost:<span class="number">9092</span> --topic monitor_ping_topic --from-<span class="keyword">beginning</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">&#123;"Host":"192.168.1.1","Type":1,"Status":"success","PingCount":3,"AvgRtt":119031000,"PacketLoss":0,"CreateTime":"2020/07/08 </span><span class="number">13</span>:<span class="number">53</span>:<span class="number">41</span><span class="string">"&#125;</span></span><br><span class="line"><span class="string">&#123;"</span>Host<span class="string">":"</span><span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">2</span><span class="string">","</span>Type<span class="string">":1,"</span>Status<span class="string">":"</span>failed<span class="string">","</span>PingCount<span class="string">":3,"</span>AvgRtt<span class="string">":0,"</span>PacketLoss<span class="string">":100,"</span>CreateTime<span class="string">":"</span><span class="number">2020</span>/<span class="number">07</span>/<span class="number">08</span> <span class="number">13</span>:<span class="number">53</span>:<span class="number">41</span><span class="string">"&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker for Mac安装</title>
      <link href="2020/07/01/docker-for-Mac%E5%AE%89%E8%A3%85/"/>
      <url>2020/07/01/docker-for-Mac%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-下载"><a href="#docker-下载" class="headerlink" title="docker 下载"></a>docker 下载</h2><p>前往Docker官网下载Docker dmg包</p><p>官网：<a href="https://www.docker.com/get-started" target="_blank" rel="noopener">https://www.docker.com/get-started</a>  下载docker desktop</p><img src="/img/1593573916553.jpg"><h2 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h2><p>下载dmg方式会出现如下错误</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mac</span> for docker The operation couldn’t be completed. (Docker.VmnetdError <span class="literal">error</span> <span class="number">1</span>.)</span><br></pre></td></tr></table></figure><img src="/img/1593575071443.jpg"><p>以上方法无法安装，采用阿里的docker可以安装成功。</p><h2 id="安装-阿里docker"><a href="#安装-阿里docker" class="headerlink" title="安装 阿里docker"></a>安装 阿里docker</h2><p>官网 <a href="http://mirrors.aliyun.com/docker-toolbox/mac/docker-for-mac/stable/" target="_blank" rel="noopener">http://mirrors.aliyun.com/docker-toolbox/mac/docker-for-mac/stable/</a></p><img src="/img/1593589136008.jpg"><h2 id="docker-命令"><a href="#docker-命令" class="headerlink" title="docker 命令"></a>docker 命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker ps    //查看运行状态</span><br><span class="line">docker start    //启动一个容器</span><br><span class="line">docker verison  //查看docker版本</span><br><span class="line">docker rm //删除容器</span><br><span class="line">docker rename //重命名一个容器</span><br><span class="line">docker logs //查看容器日志</span><br><span class="line">docker attach //进入容器</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h2 id="修改默认仓库"><a href="#修改默认仓库" class="headerlink" title="修改默认仓库"></a>修改默认仓库</h2><p>点击logo——&gt; preferences——&gt; docker engine  修改成如下配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"experimental"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line"> <span class="attr">"registry-mirrors"</span>:[</span><br><span class="line">      <span class="string">"http://hub-mirror.c.163.com"</span>,</span><br><span class="line">      <span class="string">"https://docker.mirrors.ustc.edu.cn"</span></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="docker-info"><a href="#docker-info" class="headerlink" title="docker info"></a>docker info</h2><p>可以看到mirrors修改成功</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">luodi@roddydeMacBook-Pro:~$ docker info</span><br><span class="line">Client:</span><br><span class="line"> Debug Mode: false</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Containers: 0</span><br><span class="line">  Running: 0</span><br><span class="line">  Paused: 0</span><br><span class="line">  Stopped: 0</span><br><span class="line"> Images: 0</span><br><span class="line"> Server Version: 19.03.8</span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">  Backing Filesystem: &lt;unknown&gt;</span><br><span class="line">  Supports d_type: true</span><br><span class="line">  Native Overlay Diff: true</span><br><span class="line"> Logging Driver: json-file</span><br><span class="line"> Cgroup Driver: cgroupfs</span><br><span class="line"> Plugins:</span><br><span class="line">  Volume: local</span><br><span class="line">  Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog</span><br><span class="line"> Swarm: inactive</span><br><span class="line"> Runtimes: runc</span><br><span class="line"> Default Runtime: runc</span><br><span class="line"> Init Binary: docker-init</span><br><span class="line"> containerd version: 7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br><span class="line"> runc version: dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> init version: fec3683</span><br><span class="line"> Security Options:</span><br><span class="line">  seccomp</span><br><span class="line">   Profile: default</span><br><span class="line"> Kernel Version: 4.19.76-linuxkit</span><br><span class="line"> Operating System: Docker Desktop</span><br><span class="line"> OSType: linux</span><br><span class="line"> Architecture: x86_64</span><br><span class="line"> CPUs: 2</span><br><span class="line"> Total Memory: 1.945GiB</span><br><span class="line"> Name: docker-desktop</span><br><span class="line"> ID: 2W5N:QPGQ:H5KA:GNGN:LWWY:IQFC:BD5N:D3XZ:GNDK:N2IH:J7AI:5JEH</span><br><span class="line"> Docker Root Dir: /var/lib/docker</span><br><span class="line"> Debug Mode: true</span><br><span class="line">  File Descriptors: 51</span><br><span class="line">  Goroutines: 100</span><br><span class="line">  System Time: 2020-07-01T08:46:32.000970455Z</span><br><span class="line">  EventsListeners: 3</span><br><span class="line"> HTTP Proxy: gateway.docker.internal:3128</span><br><span class="line"> HTTPS Proxy: gateway.docker.internal:3129</span><br><span class="line"> Registry: https://index.docker.io/v1/</span><br><span class="line"> Labels:</span><br><span class="line"> Experimental: false</span><br><span class="line"> Insecure Registries:</span><br><span class="line">  127.0.0.0/8</span><br><span class="line"> Registry Mirrors:</span><br><span class="line">  http://hub-mirror.c.163.com/</span><br><span class="line">  https://docker.mirrors.ustc.edu.cn/</span><br><span class="line"> Live Restore Enabled: false</span><br><span class="line"> Product License: Community Engine</span><br></pre></td></tr></table></figure><h2 id="docker-运行mysql"><a href="#docker-运行mysql" class="headerlink" title="docker 运行mysql"></a>docker 运行mysql</h2><p>对外暴露端口3308 密码 root12334</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~$ docker run --name mysqlgo -p <span class="number">3308</span>:<span class="number">3306</span> -e MYSQL_ROOT_PASSWORD=root1234 -d mysql:<span class="number">8.0</span><span class="number">.19</span></span><br></pre></td></tr></table></figure><p>查看运行状态</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line"><span class="number">610</span>d8c36f67c        mysql:<span class="number">8.0</span><span class="number">.19</span>        <span class="string">"docker-entrypoint.s…"</span>   <span class="number">16</span> seconds ago      Up <span class="number">15</span> seconds       <span class="number">33060</span>/tcp, <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">3308</span>-&gt;<span class="number">3306</span>/tcp   mysqlgo</span><br><span class="line"><span class="symbol">luodi@</span>roddydeMacBook-Pro:~$</span><br></pre></td></tr></table></figure><p>启动一个连接客户端</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="builtin-name">run</span> -it --network host --rm mysql mysql -h127.0.0.1 -P3308 <span class="attribute">--default-character-set</span>=utf8mb4 -uroot -p</span><br><span class="line">Unable <span class="keyword">to</span> <span class="builtin-name">find</span> image <span class="string">'mysql:latest'</span> locally</span><br><span class="line">latest: Pulling <span class="keyword">from</span> library/mysql</span><br><span class="line">8559a31e96f4: Pull complete</span><br><span class="line">d51ce1c2e575: Pull complete</span><br><span class="line">c2344adc4858: Pull complete</span><br><span class="line">fcf3ceff18fc: Pull complete</span><br><span class="line">16da0c38dc5b: Pull complete</span><br><span class="line">b905d1797e97: Pull complete</span><br><span class="line">4b50d1c6b05c: Pull complete</span><br><span class="line">c75914a65ca2: Pull complete</span><br><span class="line">1ae8042bdd09: Pull complete</span><br><span class="line">453ac13c00a3: Pull complete</span><br><span class="line">9e680cd72f08: Pull complete</span><br><span class="line">a6b5dc864b6c: Pull complete</span><br><span class="line">Digest: sha256:8b7b328a7ff6de46ef96bcf83af048cb00a1c86282bfca0cb119c84568b4caf6</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> mysql:latest</span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL<span class="built_in"> connection </span>id is 10</span><br><span class="line">Server version: 8.0.19 MySQL<span class="built_in"> Community Server </span>- GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.<span class="built_in"> Type </span><span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="builtin-name">set</span> (0.07 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt; create database gotest;</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h2 id="brew安装参考文档"><a href="#brew安装参考文档" class="headerlink" title="brew安装参考文档"></a>brew安装参考文档</h2><p>如果使用brew安装参考如下</p><ul><li><a href="https://pilsniak.com/how-to-install-docker-on-mac-os-using-brew/" target="_blank" rel="noopener">https://pilsniak.com/how-to-install-docker-on-mac-os-using-brew/</a></li><li><a href="https://github.com/docker/for-mac/issues/3809#issuecomment-557730621" target="_blank" rel="noopener">https://github.com/docker/for-mac/issues/3809#issuecomment-557730621</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node14+ 版本下hexo部署失败报错</title>
      <link href="2020/06/30/node14-%E7%89%88%E6%9C%AC%E4%B8%8Bhexo%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5%E6%8A%A5%E9%94%99/"/>
      <url>2020/06/30/node14-%E7%89%88%E6%9C%AC%E4%B8%8Bhexo%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>因博客迁移换了电脑，升级了node 升级版本为14.4.0。然后hexo部署出现如下错误</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span><br><span class="line">    at copyFile (fs.js:1895:10)</span><br><span class="line">    at tryCatcher (/Users/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/util.js:<span class="number">16</span>:<span class="number">23</span>)</span><br><span class="line">    <span class="keyword">at</span> ret (eval <span class="keyword">at</span> makeNodePromisifiedEval (/usr/<span class="keyword">local</span>/lib/node_modules/hexo-cli/node_modules/bluebird/js/<span class="keyword">release</span>/promisify.js:<span class="number">184</span>:<span class="number">12</span>), &lt;anonymous&gt;:<span class="number">13</span>:<span class="number">39</span>)</span><br><span class="line">    <span class="keyword">at</span> /<span class="keyword">Users</span>/luodi/githubblog/node_modules/hexo-fs/lib/fs.js:<span class="number">144</span>:<span class="number">39</span></span><br><span class="line">    <span class="keyword">at</span> tryCatcher (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/util.js:<span class="number">16</span>:<span class="number">23</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromiseFromHandler (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">547</span>:<span class="number">31</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">604</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise0 (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">649</span>:<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromises (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">729</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._fulfill (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">673</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._resolveCallback (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">466</span>:<span class="number">57</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromiseFromHandler (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">559</span>:<span class="number">17</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">604</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise0 (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">649</span>:<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromises (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">729</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._fulfill (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">673</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._resolveCallback (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">466</span>:<span class="number">57</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromiseFromHandler (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">559</span>:<span class="number">17</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">604</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromise0 (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">649</span>:<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._settlePromises (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">729</span>:<span class="number">18</span>)</span><br><span class="line">    <span class="keyword">at</span> Promise._fulfill (/<span class="keyword">Users</span>/luodi/githubblog/node_modules/bluebird/js/<span class="keyword">release</span>/promise.js:<span class="number">673</span>:<span class="number">18</span>)</span><br></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>下载最新稳定版本12.18.1 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><p>下载安装完成后重新执行部署</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="attr">hexo</span> <span class="string">d</span></span><br></pre></td></tr></table></figure><p>参考文档:</p><ul><li><a href="https://evestorm.github.io/posts/430/" target="_blank" rel="noopener">https://evestorm.github.io/posts/430/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GORM安装使用</title>
      <link href="2020/06/30/GORM%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>2020/06/30/GORM%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h3><ul><li><a href="https://gorm.io/zh_CN/docs" target="_blank" rel="noopener">https://gorm.io/zh_CN/docs</a></li><li><a href="https://github.com/go-gorm/gorm" target="_blank" rel="noopener">https://github.com/go-gorm/gorm</a> </li></ul><h3 id="Gorm安装"><a href="#Gorm安装" class="headerlink" title="Gorm安装"></a>Gorm安装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/jinzhu/gorm</span><br></pre></td></tr></table></figure><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>连接数据库首先要导入驱动。gorm默认包含了如下一些驱动可以使用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="string">"github.com/jinzhu/gorm/dialects/mysql"</span></span><br><span class="line"><span class="comment">// import _ "github.com/jinzhu/gorm/dialects/postgres"</span></span><br><span class="line"><span class="comment">// import _ "github.com/jinzhu/gorm/dialects/sqlite"</span></span><br><span class="line"><span class="comment">// import _ "github.com/jinzhu/gorm/dialects/mssql"</span></span><br></pre></td></tr></table></figure><h3 id="连接实例"><a href="#连接实例" class="headerlink" title="连接实例"></a>连接实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/jinzhu/gorm"</span></span><br><span class="line">_ <span class="string">"github.com/jinzhu/gorm/dialects/mysql"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">db, err := gorm.Open(<span class="string">"mysql"</span>, <span class="string">"user:password@/dbname?charset=utf8&amp;parseTime=True&amp;loc=Local"</span>)</span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"连接失败"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"github.com/jinzhu/gorm"</span></span><br><span class="line">_ <span class="string">"github.com/jinzhu/gorm/dialects/mysql"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建User表struct 默认表名是users</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">ID <span class="keyword">int</span>                    <span class="comment">//如果有ID字段，将自动设置为主键</span></span><br><span class="line">Username <span class="keyword">string</span></span><br><span class="line">Password <span class="keyword">string</span></span><br><span class="line">CreatedAt  *time.Time     <span class="comment">//系统将自动插入当前时间</span></span><br><span class="line">UpdatedAt  *time.Time</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 User 的表名设置为 `monitor_users`</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(User)</span> <span class="title">TableName</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"monitor_users"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">db, err := gorm.Open(<span class="string">"mysql"</span>, <span class="string">"root:root@tcp(127.0.0.1:3307)/monitor?charset=utf8&amp;parseTime=True&amp;loc=Local"</span>)</span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"连接失败"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 应用模型到数据库</span></span><br><span class="line">db.AutoMigrate(&amp;User&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>插入数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.Create(&amp;User&#123;Username: <span class="string">"roddy"</span>,Password: <span class="string">"123456"</span>,&#125;)  <span class="comment">//插入一条数据</span></span><br></pre></td></tr></table></figure><p>插入数据前判断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u := User&#123;Username: <span class="string">"test"</span>,Password: <span class="string">"123456"</span>&#125;</span><br><span class="line">fmt.Println(db.NewRecord(&amp;u))  <span class="comment">//判断主键是否为空，表中是否存在主键冲突，如果以Id为主键改判断可以忽略</span></span><br><span class="line">db.Create(&amp;u)</span><br><span class="line">fmt.Println(db.NewRecord(&amp;u))</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>查询第一条数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> firstValue User</span><br><span class="line">db.First(&amp;firstValue)</span><br><span class="line">fmt.Println(<span class="string">"username:"</span>,firstValue.Username)</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用debug查询执行原始语句</span></span><br><span class="line">db.Debug().First(&amp;User&#123;&#125;)</span><br></pre></td></tr></table></figure><p>查询最后一条数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询最后一条数据</span></span><br><span class="line"><span class="keyword">var</span> lastValue User</span><br><span class="line">db.Last(&amp;lastValue)</span><br><span class="line">fmt.Println(<span class="string">"last username:"</span>,lastValue.Username)</span><br></pre></td></tr></table></figure><p>根据条件筛选</p><p>where 条件筛选</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件筛选</span></span><br><span class="line"><span class="keyword">var</span> users [] User</span><br><span class="line">db.Where(<span class="string">"username = ?"</span>, <span class="string">"roddy"</span>).Find(&amp;users)</span><br><span class="line"><span class="keyword">for</span> _,v := <span class="keyword">range</span> users&#123;</span><br><span class="line">fmt.Printf(<span class="string">"username:%v password:%v\n"</span>,v.Username,v.Password)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 获取第一个匹配的记录</span></span><br><span class="line">db.Where(<span class="string">"name = ?"</span>, <span class="string">"jinzhu"</span>).First(&amp;user)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name = 'jinzhu' limit 1;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有匹配的记录</span></span><br><span class="line">db.Where(<span class="string">"name = ?"</span>, <span class="string">"jinzhu"</span>).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name = 'jinzhu';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &lt;&gt;</span></span><br><span class="line">db.Where(<span class="string">"name &lt;&gt; ?"</span>, <span class="string">"jinzhu"</span>).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name &lt;&gt; 'jinzhu';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IN</span></span><br><span class="line">db.Where(<span class="string">"name IN (?)"</span>, []<span class="keyword">string</span>&#123;<span class="string">"jinzhu"</span>, <span class="string">"jinzhu 2"</span>&#125;).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name in ('jinzhu','jinzhu 2');</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// LIKE</span></span><br><span class="line">db.Where(<span class="string">"name LIKE ?"</span>, <span class="string">"%jin%"</span>).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name LIKE '%jin%';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// AND</span></span><br><span class="line">db.Where(<span class="string">"name = ? AND age &gt;= ?"</span>, <span class="string">"jinzhu"</span>, <span class="string">"22"</span>).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE name = 'jinzhu' AND age &gt;= 22;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Time</span></span><br><span class="line">db.Where(<span class="string">"updated_at &gt; ?"</span>, lastWeek).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE updated_at &gt; '2000-01-01 00:00:00';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// BETWEEN</span></span><br><span class="line">db.Where(<span class="string">"created_at BETWEEN ? AND ?"</span>, lastWeek, today).Find(&amp;users)</span><br><span class="line"><span class="comment">//// SELECT * FROM users WHERE created_at BETWEEN '2000-01-01 00:00:00' AND '2000-01-08 00:00:00';</span></span><br></pre></td></tr></table></figure><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>更新表中username为roddy1的username 字段，修改为”haha”</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.Model(&amp;User&#123;&#125;).Where(<span class="string">"username=?"</span>,<span class="string">"roddy1"</span>).Update(<span class="string">"username"</span>,<span class="string">"haha"</span>)</span><br></pre></td></tr></table></figure><p>参考样例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新单个属性，如果它有变化</span></span><br><span class="line">db.Model(&amp;user).Update(<span class="string">"name"</span>, <span class="string">"hello"</span>)</span><br><span class="line"><span class="comment">//// UPDATE users SET name='hello', updated_at='2013-11-17 21:34:10' WHERE id=111;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据给定的条件更新单个属性</span></span><br><span class="line">db.Model(&amp;user).Where(<span class="string">"active = ?"</span>, <span class="literal">true</span>).Update(<span class="string">"name"</span>, <span class="string">"hello"</span>)</span><br><span class="line"><span class="comment">//// UPDATE users SET name='hello', updated_at='2013-11-17 21:34:10' WHERE id=111 AND active=true;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 map 更新多个属性，只会更新其中有变化的属性</span></span><br><span class="line">db.Model(&amp;user).Updates(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">"name"</span>: <span class="string">"hello"</span>, <span class="string">"age"</span>: <span class="number">18</span>, <span class="string">"actived"</span>: <span class="literal">false</span>&#125;)</span><br><span class="line"><span class="comment">//// UPDATE users SET name='hello', age=18, actived=false, updated_at='2013-11-17 21:34:10' WHERE id=111;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 struct 更新多个属性，只会更新其中有变化且为非零值的字段</span></span><br><span class="line">db.Model(&amp;user).Updates(User&#123;Name: <span class="string">"hello"</span>, Age: <span class="number">18</span>&#125;)</span><br><span class="line"><span class="comment">//// UPDATE users SET name='hello', age=18, updated_at = '2013-11-17 21:34:10' WHERE id = 111;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 警告：当使用 struct 更新时，GORM只会更新那些非零值的字段</span></span><br><span class="line"><span class="comment">// 对于下面的操作，不会发生任何更新，"", 0, false 都是其类型的零值</span></span><br><span class="line">db.Model(&amp;user).Updates(User&#123;Name: <span class="string">""</span>, Age: <span class="number">0</span>, Actived: <span class="literal">false</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除所有数据</span></span><br><span class="line">db.Delete(&amp;User&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除匹配数据</span></span><br><span class="line">db.Where(<span class="string">"email LIKE ?"</span>, <span class="string">"%jinzhu%"</span>).Delete(Email&#123;&#125;)</span><br><span class="line"><span class="comment">//// DELETE from emails where email LIKE "%jinzhu%";</span></span><br><span class="line"></span><br><span class="line">db.Delete(Email&#123;&#125;, <span class="string">"email LIKE ?"</span>, <span class="string">"%jinzhu%"</span>)</span><br><span class="line"><span class="comment">//// DELETE from emails where email LIKE "%jinzhu%";</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gorm </tag>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Macbook Pro Sublime3注册</title>
      <link href="2020/06/29/Macbook%20Pro%20%20Sublime3%E6%B3%A8%E5%86%8C/"/>
      <url>2020/06/29/Macbook%20Pro%20%20Sublime3%E6%B3%A8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p>点击 help -&gt; enter Licence ,然后输入如下信息:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">Member J2TeaM</span><br><span class="line">Single User License</span><br><span class="line">EA7E<span class="number">-1011316</span></span><br><span class="line">D7DA350E <span class="number">1</span>B8B0760 <span class="number">972</span>F8B60 F3E64036</span><br><span class="line">B9B4E234 F356F38F <span class="number">0</span>AD1E3B7 <span class="number">0E9</span>C5FAD</span><br><span class="line">FA0A2ABE <span class="number">25</span>F65BD8 D51458E5 <span class="number">3923</span>CE80</span><br><span class="line"><span class="number">87428428</span> <span class="number">79079</span>A01 AA69F319 A1AF29A4</span><br><span class="line">A684C2DC <span class="number">0</span>B1583D4 <span class="number">19</span>CBD290 <span class="number">217618</span>CD</span><br><span class="line"><span class="number">5653E0</span>A0 BACE3948 BB2EE45E <span class="number">422</span>D2C87</span><br><span class="line">DD9AF44B <span class="number">99</span>C49590 D2DBDEE1 <span class="number">75860</span>FD2</span><br><span class="line"><span class="number">8</span>C8BB2AD B2ECE5A4 EFC08AF2 <span class="number">25</span>A9B864</span><br><span class="line">------ END LICENSE ------​</span><br></pre></td></tr></table></figure><p>测试可用</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django JWT认证(二)</title>
      <link href="2020/06/19/django-JWT%E8%AE%A4%E8%AF%81-%E4%BA%8C/"/>
      <url>2020/06/19/django-JWT%E8%AE%A4%E8%AF%81-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>我们在DRF前后端分离的情况使用django-rest-framework-jwt 这个包，这个包需要单独安装。它支持</p><ul><li>Python (2.7, 3.3, 3.4, 3.5, 3.6)</li><li>Django (1.8, 1.9, 1.10, 1.11) # 2.0设置也是没有问题的</li><li>Django REST Framework (3.1, 3.2, 3.3, 3.4, 3.5, 3.6)</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用pip安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> djangorestframework-jwt</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装完jwt后需要settings.py设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># 设置所有接口都需要被验证</span></span><br><span class="line">    <span class="string">'DEFAULT_PERMISSION_CLASSES'</span>: (</span><br><span class="line">        <span class="comment">#'rest_framework.permissions.IsAuthenticated',  建议是特定接口特定认证</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="comment"># 用户登陆认证方式</span></span><br><span class="line">    <span class="string">'DEFAULT_AUTHENTICATION_CLASSES'</span>: (</span><br><span class="line">        <span class="string">'rest_framework_jwt.authentication.JSONWebTokenAuthentication'</span>,</span><br><span class="line">        <span class="string">'rest_framework.authentication.SessionAuthentication'</span>,</span><br><span class="line">        <span class="string">'rest_framework.authentication.BasicAuthentication'</span>,</span><br><span class="line">    ),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token, refresh_jwt_token</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">r"login"</span>, obtain_jwt_token),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>测试访问</strong></p><img src="/img/20200619113002.png"><p>返回的就是用户的token数据，前端获取到该token存储后携带上，默认token有效期为5分钟</p><p><strong>解析token</strong></p><img src="/img/20200619113409.png"><p><strong>客户端请求</strong></p><p>在headers中带上<code>Authorization JWT &lt;token&gt;</code><br>以postman为例</p><img src="/img/20200619114518.png"><p>如果没有携带后端会提示以下信息</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"detail"</span>: <span class="string">"Authentication credentials were not provided."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JWT设置"><a href="#JWT设置" class="headerlink" title="JWT设置"></a>JWT设置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="comment"># 设置token 有效期</span></span><br><span class="line">    <span class="string">'JWT_EXPIRATION_DELTA'</span>: datetime.timedelta(hours=<span class="number">24</span>),</span><br><span class="line">     <span class="comment">#续期有效期（该设置可在24小时内带未失效的token 进行续期） </span></span><br><span class="line">    <span class="string">'JWT_REFRESH_EXPIRATION_DELTA'</span>: datetime.timedelta(hours=<span class="number">24</span>),</span><br><span class="line">    <span class="comment"># 自定义返回格式，需要手工创建</span></span><br><span class="line">    <span class="string">'JWT_RESPONSE_PAYLOAD_HANDLER'</span>: <span class="string">'utils.jwt.jwt_response_payload_handler'</span>,</span><br><span class="line">    <span class="comment"># 用于令牌和授权标头的另一个常见值是Bearer ,默认是JWT</span></span><br><span class="line">    <span class="string">'JWT_AUTH_HEADER_PREFIX'</span>: <span class="string">'Token:'</span>,</span><br><span class="line">    <span class="comment"># 是否允许刷新</span></span><br><span class="line">    <span class="string">'JWT_ALLOW_REFRESH'</span>: <span class="literal">True</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更详细设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="string">'JWT_ENCODE_HANDLER'</span>:</span><br><span class="line">    <span class="string">'rest_framework_jwt.utils.jwt_encode_handler'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_DECODE_HANDLER'</span>:</span><br><span class="line">    <span class="string">'rest_framework_jwt.utils.jwt_decode_handler'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_PAYLOAD_HANDLER'</span>:</span><br><span class="line">    <span class="string">'rest_framework_jwt.utils.jwt_payload_handler'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_PAYLOAD_GET_USER_ID_HANDLER'</span>:</span><br><span class="line">    <span class="string">'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_RESPONSE_PAYLOAD_HANDLER'</span>:</span><br><span class="line">    <span class="string">'rest_framework_jwt.utils.jwt_response_payload_handler'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_SECRET_KEY'</span>: settings.SECRET_KEY,</span><br><span class="line">    <span class="string">'JWT_GET_USER_SECRET_KEY'</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">'JWT_PUBLIC_KEY'</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">'JWT_PRIVATE_KEY'</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">'JWT_ALGORITHM'</span>: <span class="string">'HS256'</span>,</span><br><span class="line">    <span class="string">'JWT_VERIFY'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'JWT_VERIFY_EXPIRATION'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'JWT_LEEWAY'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'JWT_EXPIRATION_DELTA'</span>: datetime.timedelta(seconds=<span class="number">300</span>),</span><br><span class="line">    <span class="string">'JWT_AUDIENCE'</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">'JWT_ISSUER'</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_ALLOW_REFRESH'</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">'JWT_REFRESH_EXPIRATION_DELTA'</span>: datetime.timedelta(days=<span class="number">7</span>),</span><br><span class="line"></span><br><span class="line">    <span class="string">'JWT_AUTH_HEADER_PREFIX'</span>: <span class="string">'JWT'</span>,</span><br><span class="line">    <span class="string">'JWT_AUTH_COOKIE'</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义返回数据"><a href="#自定义返回数据" class="headerlink" title="自定义返回数据"></a>自定义返回数据</h3><p>在utils目录下创建jwt.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jwt_response_payload_handler</span><span class="params">(token, user=None, request=None, role=None)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">"authenticated"</span>: <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">'id'</span>: user.id,</span><br><span class="line">        <span class="string">"role"</span>: role,</span><br><span class="line">        <span class="string">'username'</span>: user.username,</span><br><span class="line">        <span class="string">'email'</span>: user.email,</span><br><span class="line">        <span class="string">'token'</span>: token,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"authenticated"</span>: <span class="string">"true"</span>,</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"role"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"admin"</span>,</span><br><span class="line">    <span class="attr">"email"</span>: <span class="string">"923401910@qq.com"</span>,</span><br><span class="line">    <span class="attr">"token"</span>: <span class="string">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNTkyNjI3ODk3LCJlbWFpbCI6IjkyMzQwMTkxMEBxcS5jb20iLCJvcmlnX2lhdCI6MTU5MjU0MTQ5N30.YBDrPiz0wX6i0lrQwqb5bbHf8wgEIPk5Si598jHQW1A"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="token-续期"><a href="#token-续期" class="headerlink" title="token 续期"></a>token 续期</h3><p>urls.py中加入refresh</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token, refresh_jwt_token</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> <span class="keyword">admin</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> <span class="type">path</span>, <span class="keyword">include</span></span><br><span class="line"><span class="keyword">from</span> music.views <span class="keyword">import</span> MusicListView</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'login/'</span>, obtain_jwt_token),</span><br><span class="line">    path(<span class="string">'refresh/'</span>, refresh_jwt_token),</span><br><span class="line">    path(<span class="string">'music/'</span>, MusicListView.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>请求使用POST方法并且在BODY中带入token数据</p><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><ul><li><a href="https://github.com/langubtc/django_jwt_demo" target="_blank" rel="noopener">https://github.com/langubtc/django_jwt_demo</a></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://jpadilla.github.io/django-rest-framework-jwt/" target="_blank" rel="noopener">https://jpadilla.github.io/django-rest-framework-jwt/</a></li><li><a href="https://github.com/jpadilla/django-rest-framework-jwt" target="_blank" rel="noopener">https://github.com/jpadilla/django-rest-framework-jwt</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> jwt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django JWT认证(一)</title>
      <link href="2020/06/18/django-JWT%E8%AE%A4%E8%AF%81-%E4%B8%80/"/>
      <url>2020/06/18/django-JWT%E8%AE%A4%E8%AF%81-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h3><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p><h3 id="什么时候使用JWT"><a href="#什么时候使用JWT" class="headerlink" title="什么时候使用JWT"></a>什么时候使用JWT</h3><p>我们在什么时候使用JWT呢，通常情况下JWT用于前后端分离的用户认证(Authentication)，后续用户每次请求都在请求上包含JWT，允许用户请求访问相关资源。单点登录(SSO)，是目前广泛使用的JWT的一项功能。JWT是一种无状态请求，它不需要在服务端保留用户的认证信息或会话信息，一个是为了安全，同时也为应用提供扩展提供了便利。</p><h3 id="请求流程"><a href="#请求流程" class="headerlink" title="请求流程"></a>请求流程</h3><ul><li>用户使用原始账户进行登录认证</li><li>服务器验证用户认证信息</li><li>认证通过后返回一个token一用户</li><li>客户端存储token，并在每一个请求上附带这个token ，一般会附加到header请求头中</li><li>服务器验证token，验证通过即返回数据</li></ul><h3 id="JWT结构"><a href="#JWT结构" class="headerlink" title="JWT结构"></a>JWT结构</h3><ul><li>Header(头部信息)</li><li>Payload(请求载荷)</li><li>Signature(签名)</li></ul><p>通常看起来像这样</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">xxxxx</span><span class="selector-class">.yyyyy</span><span class="selector-class">.zzzzz</span></span><br></pre></td></tr></table></figure><p>例子:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI<span class="number">1</span><span class="symbol">NiIsInR5</span>cCI<span class="number">6</span>IkpX<span class="attr">VCJ9</span>.eyJzdWIiOiIxMj<span class="name">M0</span><span class="symbol">NTY3</span>ODkwIiwibmFtZSI<span class="number">6</span>Ikpva<span class="name">G4</span>gR<span class="name">G9</span>lIiwiaWF<span class="number">0</span>Ijox<span class="symbol">NTE2</span>Mj<span class="name">M5</span>MDIyfQ.SflKxwRJSMeKKF<span class="number">2</span>QT<span class="number">4</span>fwpMeJf<span class="number">36</span>POk<span class="number">6</span>yJV_adQssw<span class="number">5</span>c</span><br></pre></td></tr></table></figure><p>解码JWT可以通过<a href="https://jwt.io" target="_blank" rel="noopener">https://jwt.io</a> 进行解码</p><p>HEADER:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以上数据进行base64加密得到第一部分</p><p>PAYLOAD:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"John Doe"</span>,</span><br><span class="line">  <span class="attr">"iat"</span>: <span class="number">1516239022</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将以上数据进行base64加密得到第二部分</p><p>SIGNATURE：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(<span class="name">header</span>) + <span class="string">"."</span> +</span><br><span class="line">  base64UrlEncode(<span class="name">payload</span>),</span><br><span class="line">  </span><br><span class="line">your-256-bit-secret //这里的secret 就是django settings.py 中的 SECRET_KEY 所有这个特别重要</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>SECRET_KEY一定要保存好，如果流出去就会意味者客户端可以自我生成jwt</strong></p><p>签名由三部分组成:</p><ul><li>header (base64后的)</li><li>payload (base64后的)</li><li>secret</li></ul><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>在用户请求头上加上以下参数</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Authorization:</span> Bearer <span class="params">&lt;token&gt;</span> <span class="comment">//该token由服务端返回</span></span><br></pre></td></tr></table></figure><h3 id="安全提示"><a href="#安全提示" class="headerlink" title="安全提示"></a>安全提示</h3><p>1.由于JWT里面的信息可以解码出来的，基本上任何人都可以阅读(除非有额外加密)，否则不要在JWT中放入重要的信息。<br>2.保存好你的secret</p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> jwt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.4 pip3的安装、升级和卸载</title>
      <link href="2020/06/12/ubuntu-16-04-pip3%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%87%E7%BA%A7%E5%92%8C%E5%8D%B8%E8%BD%BD/"/>
      <url>2020/06/12/ubuntu-16-04-pip3%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%87%E7%BA%A7%E5%92%8C%E5%8D%B8%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>安装pip3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/work/# pip3 -V</span><br><span class="line">pip 8.1.1 from /usr/lib/python3/dist-packages (python 3.5)</span><br></pre></td></tr></table></figure><p>升级</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install --upgrade pip</span><br></pre></td></tr></table></figure><p>卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/work/btcgwserver# sudo apt-get remove python3-pip</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following packages were automatically installed and are no longer required:</span><br><span class="line">  golang-1.6-go golang-1.6-race-detector-runtime golang-1.6-src golang-race-detector-runtime golang-src libpython3-dev libpython3.5-dev python3-dev python3-wheel python3.5-dev</span><br><span class="line">Use 'sudo apt autoremove' to remove them.</span><br><span class="line">The following packages will be REMOVED:</span><br><span class="line">  python3-pip</span><br><span class="line">0 upgraded, 0 newly installed, 1 to remove and 39 not upgraded.</span><br><span class="line">After this operation, 569 kB disk space will be freed.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br><span class="line">(Reading database ... 125477 files and directories currently installed.)</span><br><span class="line">Removing python3-pip (8.1.1-2ubuntu0.4) ...</span><br><span class="line">Processing triggers for man-db (2.7.5-1) ...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.4切换python版本优先级</title>
      <link href="2020/06/12/ubuntu-16-04%E5%88%87%E6%8D%A2python%E7%89%88%E6%9C%AC%E4%BC%98%E5%85%88%E7%BA%A7/"/>
      <url>2020/06/12/ubuntu-16-04%E5%88%87%E6%8D%A2python%E7%89%88%E6%9C%AC%E4%BC%98%E5%85%88%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<p>终端默认使用的是Python2.7，如果需要设置为默认3.5版本，可以在终端运行下面2条命令</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">update</span>-alternatives --install /usr/bin/<span class="keyword">python</span> <span class="keyword">python</span> /usr/bin/python2 <span class="number">100</span></span><br><span class="line"></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives --install /usr/bin/<span class="keyword">python</span> <span class="keyword">python</span> /usr/bin/<span class="keyword">python3</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>调整python3的优先级为150后再次在shell中查询python 版本</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@localhost</span><span class="symbol">:~</span><span class="comment"># python -V</span></span><br><span class="line">Python <span class="number">3.5</span>.<span class="number">2</span></span><br><span class="line">root<span class="variable">@localhost</span><span class="symbol">:~</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(六)</title>
      <link href="2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E5%85%AD/"/>
      <url>2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E5%85%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p><strong>重定向到外部</strong><br>使用Redirect()方法，http.StatusMovedPermanently表示http状态吗 301</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求重定向到百度</span></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/redirect/baidu"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.Redirect(http.StatusMovedPermanently,<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>重定向到内部路由</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由重定向</span></span><br><span class="line">r.GET(<span class="string">"/luyou"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">//跳转到/luyou2对应的路由处理函数</span></span><br><span class="line">c.Request.URL.Path = <span class="string">"/router/info"</span>  <span class="comment">//把请求的URL修改</span></span><br><span class="line">r.HandleContext(c)  <span class="comment">//继续后续处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="上传单个文件"><a href="#上传单个文件" class="headerlink" title="上传单个文件"></a>上传单个文件</h3><p>上传单个文件并存在当前目录下upload。使用FormFile 接收前端的文件，后端使用SaveUploadedFile保存到本地。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上传文件</span></span><br><span class="line">r.POST(<span class="string">"/upload"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">file,err := c.FormFile(<span class="string">"file"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError,gin.H&#123;</span><br><span class="line"><span class="string">"message"</span>:err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">log.Print(file.Filename)</span><br><span class="line">dst := fmt.Sprintf(<span class="string">"./upload/%s"</span>,file.Filename)</span><br><span class="line">c.SaveUploadedFile(file,dst)</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"message"</span>:fmt.Sprintf(<span class="string">"'%s' uploaded!"</span>,file.Filename),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; template "base"&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; define "content"&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        server page &#123;&#123; .username  &#125;&#125; &#123;&#123; .password&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/upload"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="上传多个文件"><a href="#上传多个文件" class="headerlink" title="上传多个文件"></a>上传多个文件</h3><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>Gin路由系统用于接收用户请求，并将请求分发到中间件或请求处理器来进行处理。</p><p>常见的请求方法:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">router.GET()</span><br><span class="line">router.PATCH()</span><br><span class="line">router.POST()</span><br><span class="line">router.DELETE()</span><br><span class="line">router.PUT()</span><br><span class="line">router.ANY()</span><br></pre></td></tr></table></figure><p>创建默认路由引擎</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gin.Default()</span><br></pre></td></tr></table></figure><p>参考实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">r := gin.Default()</span><br><span class="line">r.GET(<span class="string">"/ping"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line">        <span class="string">"message"</span>: <span class="string">"pong"</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">r.Run() <span class="comment">// 监听并在 0.0.0.0:8080 上启动服务</span></span><br></pre></td></tr></table></figure><h3 id="路由组"><a href="#路由组" class="headerlink" title="路由组"></a>路由组</h3><p>使用Group方法定义一个路由组，由组来定义组下面的路由请求。请求方式如/router/info，/router/news 就会匹配到该路由组中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由组</span></span><br><span class="line">NewRouter := r.Group(<span class="string">"/router"</span>)</span><br><span class="line">&#123;</span><br><span class="line">NewRouter.GET(<span class="string">"info"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"path"</span>:<span class="string">"info"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">NewRouter.GET(<span class="string">"news"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"path"</span>:<span class="string">"news"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嵌套路由组比如/router/users/list</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由组</span></span><br><span class="line">NewRouter := r.Group(<span class="string">"/router"</span>)</span><br><span class="line">&#123;</span><br><span class="line">NewRouter.GET(<span class="string">"info"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"path"</span>:<span class="string">"info"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">NewRouter.GET(<span class="string">"news"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"path"</span>:<span class="string">"news"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//嵌套路由</span></span><br><span class="line">UserRouter := r.Group(<span class="string">"user"</span>)</span><br><span class="line"></span><br><span class="line">UserRouter.GET(<span class="string">"list"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"path"</span>:<span class="string">"list"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="404路由"><a href="#404路由" class="headerlink" title="404路由"></a>404路由</h3><p>使用NoRoute识别404 URL</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">r.NoRoute(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"status"</span>:<span class="string">"404"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(五)</title>
      <link href="2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%BA%94/"/>
      <url>2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%BA%94/</url>
      
        <content type="html"><![CDATA[<h3 id="URL路径参数"><a href="#URL路径参数" class="headerlink" title="URL路径参数"></a>URL路径参数</h3><p>在web开发中经常见如下列表,那在gin中可以对这些path参数进行识别<br>/video/223232/02<br>/blog/2020/02/02</p><p>使用方法在path上什么/blog/:xxx/:xxx,注意千万不要直接写成/:xxx/:xxx。这样其它请求会匹配到。然后什么<code>Param()</code>方法获取值.</p><p>参考样例:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">"/blog/:year/:month"</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">year := c.Param(<span class="string">"year"</span>)</span><br><span class="line">month := c.Param(<span class="string">"month"</span>)</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"year"</span>:year,</span><br><span class="line"><span class="string">"month"</span>:month,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>访问<br><img src="/img/20200610150747.png"></p><h3 id="ShouldBind数据绑定"><a href="#ShouldBind数据绑定" class="headerlink" title="ShouldBind数据绑定"></a>ShouldBind数据绑定</h3><p>获取参数的方式还有一种，就是将参数绑定到结构上，使用ShouldBind，还有一个ShouldBindQuery方法,该方法只绑定参数，不返回参数的数据。也就是说只输出key。</p><p>解析前端通过json传递过来的数据参数，绑定到结构体然后去访问，如果没有传递数值默认为空。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`json:"username"`</span></span><br><span class="line">Password <span class="keyword">string</span><span class="string">`json:"password"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shouldbind数据绑定</span></span><br><span class="line">r.POST(<span class="string">"/json2"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> u UserInfo</span><br><span class="line"></span><br><span class="line">err :=c.ShouldBind(&amp;u)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest,gin.H&#123;</span><br><span class="line"><span class="string">"error"</span>:err.Error(),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">c.JSON(http.StatusOK,gin.H&#123;</span><br><span class="line"><span class="string">"status"</span>:<span class="string">"ok"</span>,</span><br><span class="line"><span class="string">"username"</span>:u.Username,</span><br><span class="line"><span class="string">"password"</span>:u.Password,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>此外可以使用框架自带的验证方法，使username and password为必填</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Username <span class="keyword">string</span> <span class="string">`json:"username"  binding:"required"`</span></span><br><span class="line">Password <span class="keyword">string</span><span class="string">`json:"password"  binding:"required"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果前端不填写数据则会提示如下错误</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"Key: 'UserInfo.Username' Error:Field validation for 'Username' failed on the 'required' tag"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(四)</title>
      <link href="2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E5%9B%9B/"/>
      <url>2020/06/10/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h3 id="获取GET参数"><a href="#获取GET参数" class="headerlink" title="获取GET参数"></a>获取GET参数</h3><p><strong>获取参数</strong></p><p>使用Query()方法，如果没有name查询关键字，那就为空。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">"/server"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">queryName := c.Query(<span class="string">"name"</span>)</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:queryName,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>默认参数</strong></p><p>使用DefaultQuery，如果没获取到name默认值就为”default”</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">"/server"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">queryName := c.DefaultQuery(<span class="string">"name"</span>,<span class="string">"default"</span>)</span><br><span class="line">queryAge := c.DefaultQuery(<span class="string">"age"</span>,<span class="string">"18"</span>)</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:queryName,</span><br><span class="line"><span class="string">"age"</span>:queryAge,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>判断请求参数</strong><br>使用GetQuery()方法判断是否有该参数，返回两个值，一个是值，另一个是状态。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">query,ok := c.GetQuery(<span class="string">"queryName"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ok == <span class="literal">false</span>&#123;</span><br><span class="line">query = <span class="string">"123"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">GetQuery</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> values, ok := c.GetQueryArray(key); ok &#123;</span><br><span class="line"><span class="keyword">return</span> values[<span class="number">0</span>], ok</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span>, <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>url请求</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//127.0.0.1:8001/server?name=roddy&amp;age=29</span></span><br></pre></td></tr></table></figure><h3 id="获取form表单参数"><a href="#获取form表单参数" class="headerlink" title="获取form表单参数"></a>获取form表单参数</h3><p><strong>PostForm</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">"/login"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"login"</span>,<span class="literal">nil</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">"/login"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">username := c.PostForm(<span class="string">"username"</span>)</span><br><span class="line">password := c.PostForm(<span class="string">"password"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"username"</span>:username,</span><br><span class="line"><span class="string">"password"</span>:password,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; template "base"&#125;&#125; </span><br><span class="line"></span><br><span class="line">&#123;&#123; define "content"&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>DefaultPostForm</strong></p><p>如果获取不到key，设置默认值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username := c.DefaultPostForm(<span class="string">"username1"</span>,<span class="string">"roddy"</span>)</span><br><span class="line">password := c.DefaultPostForm(<span class="string">"password1"</span>,<span class="string">"pass"</span>)</span><br></pre></td></tr></table></figure><p><strong>GetPostForm</strong><br>如果没有获取到值，那设置一个默认值</p><p>其中GetPostForm判断的三种状态</p><ul><li>1.如果有key并且有值 返回值和true</li><li>2.如果有key没值，返回空和true</li><li>3.如果没key没值，返回空和false</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// For example, during a PATCH request to update the user's email:</span></span><br><span class="line"><span class="comment">//     email=mail@example.com  --&gt;  ("mail@example.com", true) := GetPostForm("email") // set email to "mail@example.com"</span></span><br><span class="line"><span class="comment">//    email=                  --&gt;  ("", true) := GetPostForm("email") // set email to ""</span></span><br><span class="line"><span class="comment">//                             --&gt;  ("", false) := GetPostForm("email") // do nothing with email</span></span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">"/login"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">username,ok := c.GetPostForm(<span class="string">"username"</span>)</span><br><span class="line"><span class="keyword">if</span> username == <span class="string">""</span>&#123;</span><br><span class="line">username=<span class="string">"rrr"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">password,ok := c.GetPostForm(<span class="string">"password"</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(username,password,ok)</span><br><span class="line"><span class="keyword">if</span> password==<span class="string">""</span>&#123;</span><br><span class="line">password=<span class="string">"xxxxx"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(username,password)</span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"username"</span>:username,</span><br><span class="line"><span class="string">"password"</span>:password,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(三)</title>
      <link href="2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%B8%89/"/>
      <url>2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h3 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h3><p>使用模版开发web站点就离不开css,js,img这些静态文件，在gin中也一样可以定义静态文件及使用方法。gin是如何做的呢？</p><p>gin 可使用Static、StaticFile、StaticFS方法定义静态文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载静态资源，例如网页的css、js</span></span><br><span class="line">r.Static(<span class="string">"/static"</span>, <span class="string">"./statics"</span>)    <span class="comment">//默认gin http 访问的static路径，statics是映射的实际目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加载静态资源，一般是上传的资源，例如用户上传的图片</span></span><br><span class="line">r.StaticFS(<span class="string">"/upload"</span>, http.Dir(<span class="string">"upload"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载单个静态文件</span></span><br><span class="line">r.StaticFile(<span class="string">"/favicon.ico"</span>, <span class="string">"./static/favicon.ico"</span>)</span><br></pre></td></tr></table></figure><p>参考实例:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"html/template"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">//自定义模版变量必须放在解析模版之前</span></span><br><span class="line">r.SetFuncMap(template.FuncMap&#123;</span><br><span class="line"><span class="string">"safe"</span>: <span class="function"><span class="keyword">func</span><span class="params">(str <span class="keyword">string</span>)</span> <span class="title">template</span>.<span class="title">HTML</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> template.HTML(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载静态文件,以static开头指向statics</span></span><br><span class="line">r.Static(<span class="string">"/static"</span>,<span class="string">"./statics"</span>)</span><br><span class="line"><span class="comment">// 加载单一文件</span></span><br><span class="line">r.StaticFile(<span class="string">"/favicon.ico"</span>,<span class="string">"./statics/favicon.ico"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//r.LoadHTMLFiles("templates")  //模版渲染 如果只有一层的情况下</span></span><br><span class="line">r.LoadHTMLGlob(<span class="string">"templates/**/*"</span>)  <span class="comment">//**表示文件夹/*表示文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/server"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">"127.0.0.1:8001"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/static/server.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">        server page  &#123;&#123; .name |safe &#125;&#125; </span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="模版继承"><a href="#模版继承" class="headerlink" title="模版继承"></a>模版继承</h3><p>Gin 框架下使用的模板都是单文件模板,多模板继承需要使用 第三方的包<code>multitemplate</code></p><p><strong>安装</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> -<span class="keyword">u</span> github.<span class="keyword">com</span>/gin-contrib/multitemplate</span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><p>创建构建多模版方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">webRender</span><span class="params">()</span> <span class="title">multitemplate</span>.<span class="title">Renderer</span></span> &#123;</span><br><span class="line">r := multitemplate.NewRenderer()</span><br><span class="line"><span class="comment">// 添加两个多模板继承, 初始模板必须写在前面。</span></span><br><span class="line">r.AddFromFiles(<span class="string">"server"</span>, <span class="string">"templates/base.html"</span>, <span class="string">"templates/server.html"</span>)</span><br><span class="line">r.AddFromFiles(<span class="string">"login"</span>, <span class="string">"templates/base.html"</span>, <span class="string">"templates/login.html"</span>)</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//此时渲染模版使用HTMLRender方法</span></span><br><span class="line"><span class="comment">//使用模版</span></span><br><span class="line">r.HTMLRender=webRender()</span><br></pre></td></tr></table></figure><p>html使用block定义 ，这点与django有点类似。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     &#123;&#123; block "content" . &#125;&#125; &#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; template "base"&#125;&#125; </span><br><span class="line"></span><br><span class="line">&#123;&#123; define "content"&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        login page &#123;&#123;.name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p>server.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; template "base"&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; define "content"&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        server page &#123;&#123;.name&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><p>golang实例:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-contrib/multitemplate"</span></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"html/template"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">webRender</span><span class="params">()</span> <span class="title">multitemplate</span>.<span class="title">Renderer</span></span> &#123;</span><br><span class="line">r := multitemplate.NewRenderer()</span><br><span class="line"><span class="comment">// 添加两个多模板继承, 初始模板必须写在前面。</span></span><br><span class="line">r.AddFromFiles(<span class="string">"server"</span>, <span class="string">"templates/base.html"</span>, <span class="string">"templates/server.html"</span>)</span><br><span class="line">r.AddFromFiles(<span class="string">"login"</span>, <span class="string">"templates/base.html"</span>, <span class="string">"templates/login.html"</span>)</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">//自定义模版变量必须放在解析模版之前</span></span><br><span class="line">r.SetFuncMap(template.FuncMap&#123;</span><br><span class="line"><span class="string">"safe"</span>: <span class="function"><span class="keyword">func</span><span class="params">(str <span class="keyword">string</span>)</span> <span class="title">template</span>.<span class="title">HTML</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> template.HTML(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载静态文件,以static开头指向statics</span></span><br><span class="line">r.Static(<span class="string">"/static"</span>,<span class="string">"./statics"</span>)</span><br><span class="line">r.StaticFile(<span class="string">"/favicon.ico"</span>,<span class="string">"./statics/favicon.ico"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//r.LoadHTMLFiles("templates")  //模版渲染 如果只有一层的情况下</span></span><br><span class="line"><span class="comment">//r.LoadHTMLGlob("templates/**/*")  //**表示文件夹/*表示文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用模版</span></span><br><span class="line">r.HTMLRender=webRender()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/server"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"server"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/login"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">c.HTML(http.StatusOK,<span class="string">"login"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// json数据</span></span><br><span class="line">r.GET(<span class="string">"/json"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">data := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line"><span class="string">"message"</span>:<span class="string">"hello world!"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="number">28</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体方式返回json数据</span></span><br><span class="line">r.GET(<span class="string">"/structJson"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"><span class="keyword">type</span> Msg <span class="keyword">struct</span>&#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">Age <span class="keyword">int</span></span><br><span class="line">Message <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">data := Msg&#123;<span class="string">"roddy"</span>,<span class="number">23</span>,<span class="string">"this is "</span>&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,data)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">"127.0.0.1:8001"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><img src="/img/20200609215711.png"><h3 id="github代码"><a href="#github代码" class="headerlink" title="github代码"></a>github代码</h3><ul><li><a href="https://github.com/langubtc/ginweb" target="_blank" rel="noopener">https://github.com/langubtc/ginweb</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(二)</title>
      <link href="2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%BA%8C/"/>
      <url>2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="Gin渲染"><a href="#Gin渲染" class="headerlink" title="Gin渲染"></a>Gin渲染</h3><p>Gin支持各种渲染方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">c.String()   <span class="comment">//返回字符串</span></span><br><span class="line">c.XML()  <span class="comment">//返回XML格式</span></span><br><span class="line">c.JSON() <span class="comment">//返回JSON数据格式</span></span><br><span class="line">c.HTML() <span class="comment">//返回HTML文档格式</span></span><br></pre></td></tr></table></figure><h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><p>通常情况下使用Gin一般是用于写API接口，那另一个就是使用模版渲染。API通常用JSON数据返回即可，如果要用模版渲染就要使用HTML方式。<br>gin的模版文件比较简单，在工作目录下创建一个index.html即可，也可以使用go的模版文件命名index.tmpl。</p><p>参考项目代码:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">r:=gin.Default()</span><br><span class="line">r.LoadHTMLFiles(<span class="string">"index.html"</span>)</span><br><span class="line">r.GET(<span class="string">"/index"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"index.html"</span>,<span class="literal">nil</span>)</span><br><span class="line">&#125;)</span><br><span class="line">http.ListenAndServe(<span class="string">":8003"</span>,r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码首先创建了index.html的模版<br>通过r.LoadHTMLFiles加载这个文件，只有加载后才能使用模版<br>渲染模版context.HTML(200,”index.html”,nil)  nil表示不需要向模版传递变量，设置就可以向模版数据</p><h3 id="模版变量"><a href="#模版变量" class="headerlink" title="模版变量"></a>模版变量</h3><p>上面我们提到了可以向模版传递变量，现在传递一个测试下</p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello world  my &#123;&#123;.&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>传递变量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">r:=gin.Default()</span><br><span class="line">r.LoadHTMLFiles(<span class="string">"index.html"</span>)  <span class="comment">//r.LoadHTMLFiles("index.html","user.html")加载多个模版</span></span><br><span class="line">r.GET(<span class="string">"/index"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"index.html"</span>,<span class="string">"name is roddy"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">r.Run(<span class="string">":8003"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传递多个变量</p><p>使用gin.H, <code>H is a shortcut for map[string]interface{}</code></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">r.GET(<span class="string">"/index"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span> &#123;</span></span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"index.html"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="number">29</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>模版使用  使用.”变量名”,如果使用{{.}}返回渲染的数据，interface对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    hello world  my name &#123;&#123;.name&#125;&#125; age &#123;&#123; .age&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问请求<br><img src="/img/20200609173549.png"></p><h3 id="加载目录"><a href="#加载目录" class="headerlink" title="加载目录"></a>加载目录</h3><p>r.LoadHTMLFiles 可以加载多个模版文件，但是如果想加载一个目录下的所有模版文件如何设置呢？Gin提供了<code>LoadHTMLGlob</code>方法即可。<br>创建一个templates并将html文件移动到该目录下</p><p>修改代码如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r:=gin.Default()</span><br><span class="line">r.LoadHTMLGlob(<span class="string">"template/*"</span>)</span><br></pre></td></tr></table></figure><p>参考实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">r:=gin.Default()</span><br><span class="line">r.LoadHTMLGlob(<span class="string">"templates/*"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/index"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"index.html"</span>,gin.H&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="number">29</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">"/user"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"user.html"</span>,<span class="literal">nil</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">":8003"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>加载子目录</strong></p><p>如果你的模版是类似这样的</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">templates/<span class="keyword">user</span>/<span class="keyword">index</span>.html</span><br><span class="line">templates/<span class="keyword">admin</span>/<span class="keyword">index</span>.html</span><br><span class="line">templates/product/<span class="keyword">index</span>.html</span><br></pre></td></tr></table></figure><p>使用<code>**/*</code>加载多级模版</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.LoadHTMLGlob(<span class="string">"templates/**/*"</span>)</span><br></pre></td></tr></table></figure><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>在html模版中默认的模版功能有时候可能不能满足我们的需求，这个时候我们需要自定一个函数解决，下面演示两个功能。一个是将string格式化成html格式，一个是md5</p><p>使用<code>r.SetFuncMap()</code>方法</p><p>实例一:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">r := gin.Default()</span><br><span class="line"><span class="comment">//自定义模版变量必须放在解析模版之前</span></span><br><span class="line">r.SetFuncMap(template.FuncMap&#123;</span><br><span class="line"><span class="string">"safe"</span>: <span class="function"><span class="keyword">func</span><span class="params">(str <span class="keyword">string</span>)</span> <span class="title">template</span>.<span class="title">HTML</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> template.HTML(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.LoadHTMLGlob(<span class="string">"templates/*"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//r.LoadHTMLFiles("user.html")</span></span><br><span class="line">r.GET(<span class="string">"/user"</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">context.HTML(<span class="number">200</span>,<span class="string">"user.html"</span>,<span class="string">"&lt;a href='xxxx'&gt;herf&lt;/a&gt;"</span>) <span class="comment">//将字符串标签格式成html格式</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This Is User Page &#123;&#123; . |safe &#125;&#125; <span class="tag">&lt;/<span class="name">h1</span>&gt;</span> //使用</span><br></pre></td></tr></table></figure><p>实例二：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">r.SetFuncMap(template.FuncMap&#123;</span><br><span class="line"><span class="string">"safe"</span>: <span class="function"><span class="keyword">func</span><span class="params">(str <span class="keyword">string</span>)</span> <span class="title">template</span>.<span class="title">HTML</span></span>&#123;   <span class="comment">//这里可以添加多个自定义变量</span></span><br><span class="line"><span class="keyword">return</span> template.HTML(str)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"md5"</span>: <span class="function"><span class="keyword">func</span><span class="params">(str <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>,error)</span></span>&#123;</span><br><span class="line">hash:= md5.Sum([]<span class="keyword">byte</span>(str))</span><br><span class="line"><span class="keyword">return</span> hex.EncodeToString(hash[:]),<span class="literal">nil</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; md5 .name&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="返回JSON数据"><a href="#返回JSON数据" class="headerlink" title="返回JSON数据"></a>返回JSON数据</h3><p>很多时候我们需要返回JSON数据给前端，那么可使用JSON渲染。</p><p><strong>1.方法一</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// json数据</span></span><br><span class="line">r.GET(<span class="string">"/json"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">data := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line"><span class="string">"name"</span>:<span class="string">"roddy"</span>,</span><br><span class="line"><span class="string">"message"</span>:<span class="string">"hello world!"</span>,</span><br><span class="line"><span class="string">"age"</span>:<span class="number">28</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>2.方法二</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以结构体返回json数据</span></span><br><span class="line">r.GET(<span class="string">"/structJson"</span>,<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line"><span class="keyword">type</span> Msg <span class="keyword">struct</span>&#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name"`</span></span><br><span class="line">Age <span class="keyword">int</span></span><br><span class="line">Message <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实例化结构体数据</span></span><br><span class="line">data := Msg&#123;<span class="string">"roddy"</span>,<span class="number">23</span>,<span class="string">"this is "</span>&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK,data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gin web开发系列(一)</title>
      <link href="2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%B8%80/"/>
      <url>2020/06/09/Gin-web%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="Gin介绍"><a href="#Gin介绍" class="headerlink" title="Gin介绍"></a>Gin介绍</h3><p>最近在学习Golang，顺带研究下Golang的web框架。目前选择轻量级，也是比较流行的web框架的Gin。<br>官方介绍：Gin 是一个 Go (Golang) 语言框架。 它是一个拥有更好性能的 martini-like API 框架, 由于 httprouter，速度提高了近 40 倍。 如果你是性能和高效的追求者, 那么你会爱上 Gin。</p><h3 id="Gin安装"><a href="#Gin安装" class="headerlink" title="Gin安装"></a>Gin安装</h3><p>1.安装gin</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><p>2.将gin添加到代码中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>3.初始化gin web引擎</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r := gin.Default()</span><br></pre></td></tr></table></figure><p>4.配置方法和路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">r.GET(<span class="string">"/path"</span>)</span><br><span class="line">r.POST(<span class="string">"/path"</span>)</span><br><span class="line">r.PUT(<span class="string">"/path"</span>)</span><br></pre></td></tr></table></figure><p>5.启动</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.Run()  <span class="comment">//除了Run()方法还可以使用http.ListenAndServe方法</span></span><br></pre></td></tr></table></figure><p>参考</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r:=gin.Default()</span><br><span class="line"></span><br><span class="line">http.ListenAndServe(<span class="string">":8003"</span>,r)</span><br></pre></td></tr></table></figure><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>参考样例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HelloHandler</span><span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">c.String(<span class="number">200</span>,<span class="string">"Hello world"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r:=gin.Default()</span><br><span class="line">r.GET(<span class="string">"/index"</span>,HelloHandler)</span><br><span class="line">r.Run(<span class="string">":8002"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果内容不是较为复杂，可使用匿名函数写法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r:=gin.<span class="type">Default</span>()</span><br><span class="line">r.<span class="type">GET</span>(<span class="string">"/index"</span>, <span class="function"><span class="keyword">func</span><span class="params">(<span class="built_in">c</span> *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="built_in">c</span>.<span class="type">String</span>(<span class="number">200</span>,<span class="string">"New Hello world"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">r.<span class="type">Run</span>(<span class="string">":8002"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问结果</p><img src="/img/20200609165112.png"><h3 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h3><ul><li><a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener">https://github.com/gin-gonic/gin</a></li><li><a href="https://gin-gonic.com" target="_blank" rel="noopener">https://gin-gonic.com</a></li><li><a href="https://gin-gonic.com/zh-cn/doc" target="_blank" rel="noopener">https://gin-gonic.com/zh-cn/doc</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Gin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang  报错mismatched types Duration and int</title>
      <link href="2020/06/04/golang-%E6%8A%A5%E9%94%99mismatched-types-Duration-and-int/"/>
      <url>2020/06/04/golang-%E6%8A%A5%E9%94%99mismatched-types-Duration-and-int/</url>
      
        <content type="html"><![CDATA[<p>今天在使用time.sleep方法时遇到如下问题</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mismatched types <span class="built_in">Duration</span> and <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>代码如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.Sleep(time.Second * <span class="keyword">int</span>(refersh))  <span class="comment">//我将原来的5秒改成变量</span></span><br></pre></td></tr></table></figure><p>以上信息表示说是int类型而不是time.Duration类型。</p><p>解决方法:</p><p>使用time.Duration()进行转换<br>参考time.go源码第654行</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//fmt.Print(<span class="built_in">time</span>.Duration(<span class="built_in">seconds</span>)*<span class="built_in">time</span>.Second)<span class="comment"> // prints 10s</span></span><br></pre></td></tr></table></figure><p>修改后的代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">time.Sleep(time.Second * time.Duration(refersh))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go 连接mysql 报错sql: unknown driver mysql (forgotten import?)</title>
      <link href="2020/06/03/go-%E8%BF%9E%E6%8E%A5mysql-%E6%8A%A5%E9%94%99sql-unknown-driver-mysql-forgotten-import/"/>
      <url>2020/06/03/go-%E8%BF%9E%E6%8E%A5mysql-%E6%8A%A5%E9%94%99sql-unknown-driver-mysql-forgotten-import/</url>
      
        <content type="html"><![CDATA[<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sql</span>: <span class="type">unknown</span> driver "mysql" (forgotten <span class="keyword">import</span>?)</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>需要在import中加入如下行</p><pre><code>_ &quot;github.com/go-sql-driver/mysql&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下编译安装Bitcoin核心</title>
      <link href="2020/05/29/ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Bitcoin%E6%A0%B8%E5%BF%83/"/>
      <url>2020/05/29/ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Bitcoin%E6%A0%B8%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>ubuntu | 16.04<br>disk   | 500GB<br>net    | 2M<br>cpu    | 4<br>mem    | 8G</p><h3 id="初始化服务器"><a href="#初始化服务器" class="headerlink" title="初始化服务器"></a>初始化服务器</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install lrzsz  git  wget </span><br><span class="line">mkdir /work</span><br></pre></td></tr></table></figure><h3 id="安装环境依赖"><a href="#安装环境依赖" class="headerlink" title="安装环境依赖"></a>安装环境依赖</h3><p>执行以下命令安装环境依赖包</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> install build-essential libtool autotools-<span class="built_in">dev</span> automake pkg-config bsdmainutils python3 libssl-<span class="built_in">dev</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> install libssl-<span class="built_in">dev</span> libboost-<span class="built_in">all</span>-<span class="built_in">dev</span> libevent-<span class="built_in">dev</span></span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-<span class="built_in">dev</span> qttools5-<span class="built_in">dev</span>-tools libprotobuf-<span class="built_in">dev</span> protobuf-compiler</span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> install libqrencode-<span class="built_in">dev</span> libminiupnpc-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure><h3 id="下载bitcoin核心"><a href="#下载bitcoin核心" class="headerlink" title="下载bitcoin核心"></a>下载bitcoin核心</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /work</span><br><span class="line">wget https:<span class="comment">//github.com/bitcoin/bitcoin/archive/v0.19.1.tar.gz</span></span><br><span class="line">tar zxf v0<span class="number">.19</span><span class="number">.1</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="安装berkeley-db"><a href="#安装berkeley-db" class="headerlink" title="安装berkeley-db"></a>安装berkeley-db</h3><p>因我项目中核心需要钱包功能，所以需要安装berkeley-db,如果不需要可以编译bitcoin时使用<code>./configure --disable-wallet</code></p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> bitcoin-0.19.1</span><br><span class="line"><span class="string">./contrib/install_db4.sh</span> `<span class="keyword">pwd</span>`</span><br></pre></td></tr></table></figure><p>如果执行失败,出现国内服务器无法访问<a href="https://gist.githubusercontent.com的情况下可手动下载clang.patch进行打补丁" target="_blank" rel="noopener">https://gist.githubusercontent.com的情况下可手动下载clang.patch进行打补丁</a></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#编辑./contrib/install_db4.sh第70行屏蔽掉下载</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#http_get <span class="string">"$&#123;CLANG_CXX11_PATCH_URL&#125;"</span> clang.patch <span class="string">"$&#123;CLANG_CXX11_PATCH_HASH&#125;"</span></span></span><br></pre></td></tr></table></figure><p>可手动复制以下文件为clang.patch到/work/bitcoin-0.19.1/db4/db-4.8.30.NC/</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/src/dbinc/atomic.h b/src/dbinc/atomic.h</span><br><span class="line">index <span class="number">6</span>a858f7.<span class="number">.9</span>f338dc <span class="number">100644</span></span><br><span class="line">--- a/src/dbinc/atomic.h</span><br><span class="line">+++ b/src/dbinc/atomic.h</span><br><span class="line">@@ <span class="number">-70</span>,<span class="number">7</span> +<span class="number">70</span>,<span class="number">7</span> @@ <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  * These have no memory barriers; the caller must include them when necessary.</span><br><span class="line">  */</span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span>atomic_read(p)((p)-&gt;value)</span></span><br><span class="line">-<span class="meta">#<span class="meta-keyword">define</span>atomic_init(p, val)((p)-&gt;value = (val))</span></span><br><span class="line">+<span class="meta">#<span class="meta-keyword">define</span>atomic_init_db(p, val)((p)-&gt;value = (val))</span></span><br><span class="line"> </span><br><span class="line"> <span class="meta">#<span class="meta-keyword">ifdef</span> HAVE_ATOMIC_SUPPORT</span></span><br><span class="line"> </span><br><span class="line">@@ <span class="number">-144</span>,<span class="number">7</span> +<span class="number">144</span>,<span class="number">7</span> @@ <span class="keyword">typedef</span> LONG <span class="keyword">volatile</span> *interlocked_val;</span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span>atomic_inc(env, p)__atomic_inc(p)</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span>atomic_dec(env, p)__atomic_dec(p)</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span>atomic_compare_exchange(env, p, o, n)\</span></span><br><span class="line">-__atomic_compare_exchange((p), (o), (n))</span><br><span class="line">+__atomic_compare_exchange_db((p), (o), (n))</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> __atomic_inc(<span class="keyword">db_atomic_t</span> *p)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">int</span>temp;</span><br><span class="line">@@ <span class="number">-176</span>,<span class="number">7</span> +<span class="number">176</span>,<span class="number">7</span> @@ <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> __atomic_dec(<span class="keyword">db_atomic_t</span> *p)</span><br><span class="line">  * http:<span class="comment">//gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Atomic-Builtins.html</span></span><br><span class="line">  * which configure could be changed to use.</span><br><span class="line">  */</span><br><span class="line">-<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> __atomic_compare_exchange(</span><br><span class="line">+<span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> __atomic_compare_exchange_db(</span><br><span class="line"> <span class="keyword">db_atomic_t</span> *p, <span class="keyword">atomic_value_t</span> oldval, <span class="keyword">atomic_value_t</span> newval)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">atomic_value_t</span> was;</span><br><span class="line">@@ <span class="number">-206</span>,<span class="number">7</span> +<span class="number">206</span>,<span class="number">7</span> @@ <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">int</span> __atomic_compare_exchange(</span><br><span class="line"> #defineatomic_dec(env, p)(--(p)-&gt;value)</span><br><span class="line"> #defineatomic_compare_exchange(env, p, oldval, newval)\</span><br><span class="line"> (DB_ASSERT(env, atomic_read(p) == (oldval)),\</span><br><span class="line">-atomic_init(p, (newval)), <span class="number">1</span>)</span><br><span class="line">+atomic_init_db(p, (newval)), <span class="number">1</span>)</span><br><span class="line"> #<span class="keyword">else</span></span><br><span class="line"> #define atomic_inc(env, p)__atomic_inc(env, p)</span><br><span class="line"> #define atomic_dec(env, p)__atomic_dec(env, p)</span><br><span class="line">diff --git a/src/mp/mp_fget.c b/src/mp/mp_fget.c</span><br><span class="line">index <span class="number">16</span>de695..d0dcc29 <span class="number">100644</span></span><br><span class="line">--- a/src/mp/mp_fget.c</span><br><span class="line">+++ b/src/mp/mp_fget.c</span><br><span class="line">@@ <span class="number">-649</span>,<span class="number">7</span> +<span class="number">649</span>,<span class="number">7</span> @@ alloc:<span class="comment">/* Allocate a new buffer header and data space. */</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/* Initialize enough so we can call __memp_bhfree. */</span></span><br><span class="line"> alloc_bhp-&gt;flags = <span class="number">0</span>;</span><br><span class="line">-atomic_init(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line">+atomic_init_db(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line"> #ifdef DIAGNOSTIC</span><br><span class="line"> <span class="keyword">if</span> ((<span class="keyword">uintptr_t</span>)alloc_bhp-&gt;buf &amp; (<span class="keyword">sizeof</span>(<span class="keyword">size_t</span>) - <span class="number">1</span>)) &#123;</span><br><span class="line"> __db_errx(env, DB_STR(<span class="string">"3025"</span>,</span><br><span class="line">@@ <span class="number">-955</span>,<span class="number">7</span> +<span class="number">955</span>,<span class="number">7</span> @@ alloc:<span class="comment">/* Allocate a new buffer header and data space. */</span></span><br><span class="line"> MVCC_MPROTECT(bhp-&gt;buf, mfp-&gt;pagesize,</span><br><span class="line">     PROT_READ);</span><br><span class="line"> </span><br><span class="line">-atomic_init(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line">+atomic_init_db(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line"> MUTEX_LOCK(env, alloc_bhp-&gt;mtx_buf);</span><br><span class="line"> alloc_bhp-&gt;priority = bhp-&gt;priority;</span><br><span class="line"> alloc_bhp-&gt;pgno = bhp-&gt;pgno;</span><br><span class="line">diff --git a/src/mp/mp_mvcc.c b/src/mp/mp_mvcc.c</span><br><span class="line">index <span class="number">770b</span>ad8..e28cce0 <span class="number">100644</span></span><br><span class="line">--- a/src/mp/mp_mvcc.c</span><br><span class="line">+++ b/src/mp/mp_mvcc.c</span><br><span class="line">@@ <span class="number">-276</span>,<span class="number">7</span> +<span class="number">276</span>,<span class="number">7</span> @@ __memp_bh_freeze(dbmp, infop, hp, bhp, need_frozenp)</span><br><span class="line"> #<span class="keyword">else</span></span><br><span class="line"> <span class="built_in">memcpy</span>(frozen_bhp, bhp, SSZA(BH, buf));</span><br><span class="line"> #endif</span><br><span class="line">-atomic_init(&amp;frozen_bhp-&gt;ref, <span class="number">0</span>);</span><br><span class="line">+atomic_init_db(&amp;frozen_bhp-&gt;ref, <span class="number">0</span>);</span><br><span class="line"> <span class="keyword">if</span> (mutex != MUTEX_INVALID)</span><br><span class="line"> frozen_bhp-&gt;mtx_buf = mutex;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> ((ret = __mutex_alloc(env, MTX_MPOOL_BH,</span><br><span class="line">@@ <span class="number">-428</span>,<span class="number">7</span> +<span class="number">428</span>,<span class="number">7</span> @@ __memp_bh_thaw(dbmp, infop, hp, frozen_bhp, alloc_bhp)</span><br><span class="line"> #endif</span><br><span class="line"> alloc_bhp-&gt;mtx_buf = mutex;</span><br><span class="line"> MUTEX_LOCK(env, alloc_bhp-&gt;mtx_buf);</span><br><span class="line">-atomic_init(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line">+atomic_init_db(&amp;alloc_bhp-&gt;ref, <span class="number">1</span>);</span><br><span class="line"> F_CLR(alloc_bhp, BH_FROZEN);</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">diff --git a/src/mp/mp_region.c b/src/mp/mp_region.c</span><br><span class="line">index <span class="number">4952030.</span><span class="number">.47645</span>f8 <span class="number">100644</span></span><br><span class="line">--- a/src/mp/mp_region.c</span><br><span class="line">+++ b/src/mp/mp_region.c</span><br><span class="line">@@ <span class="number">-245</span>,<span class="number">7</span> +<span class="number">245</span>,<span class="number">7</span> @@ __memp_init(env, dbmp, reginfo_off, htab_buckets, max_nreg)</span><br><span class="line">      MTX_MPOOL_FILE_BUCKET, <span class="number">0</span>, &amp;htab[i].mtx_hash)) != <span class="number">0</span>)</span><br><span class="line"> <span class="keyword">return</span> (ret);</span><br><span class="line"> SH_TAILQ_INIT(&amp;htab[i].hash_bucket);</span><br><span class="line">-atomic_init(&amp;htab[i].hash_page_dirty, <span class="number">0</span>);</span><br><span class="line">+atomic_init_db(&amp;htab[i].hash_page_dirty, <span class="number">0</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">@@ -302,7 +302,7 @@ no_prealloc:</span></span><br><span class="line"><span class="comment"> &#125; else</span></span><br><span class="line"><span class="comment"> hp-&gt;mtx_hash = mtx_base + (i % dbenv-&gt;mp_mtxcount);</span></span><br><span class="line"><span class="comment"> SH_TAILQ_INIT(&amp;hp-&gt;hash_bucket);</span></span><br><span class="line"><span class="comment">-atomic_init(&amp;hp-&gt;hash_page_dirty, 0);</span></span><br><span class="line"><span class="comment">+atomic_init_db(&amp;hp-&gt;hash_page_dirty, 0);</span></span><br><span class="line"><span class="comment"> #ifdef HAVE_STATISTICS</span></span><br><span class="line"><span class="comment"> hp-&gt;hash_io_wait = 0;</span></span><br><span class="line"><span class="comment"> hp-&gt;hash_frozen = hp-&gt;hash_thawed = hp-&gt;hash_frozen_freed = 0;</span></span><br><span class="line"><span class="comment">diff --git a/src/mutex/mut_method.c b/src/mutex/mut_method.c</span></span><br><span class="line"><span class="comment">index 09353b0..177353c 100644</span></span><br><span class="line"><span class="comment">--- a/src/mutex/mut_method.c</span></span><br><span class="line"><span class="comment">+++ b/src/mutex/mut_method.c</span></span><br><span class="line"><span class="comment">@@ -474,7 +474,7 @@ atomic_compare_exchange(env, v, oldval, newval)</span></span><br><span class="line"><span class="comment"> MUTEX_LOCK(env, mtx);</span></span><br><span class="line"><span class="comment"> ret = atomic_read(v) == oldval;</span></span><br><span class="line"><span class="comment"> if (ret)</span></span><br><span class="line"><span class="comment">-atomic_init(v, newval);</span></span><br><span class="line"><span class="comment">+atomic_init_db(v, newval);</span></span><br><span class="line"><span class="comment"> MUTEX_UNLOCK(env, mtx);</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> return (ret);</span></span><br><span class="line"><span class="comment">diff --git a/src/mutex/mut_tas.c b/src/mutex/mut_tas.c</span></span><br><span class="line"><span class="comment">index 106b161..fc4de9d 100644</span></span><br><span class="line"><span class="comment">--- a/src/mutex/mut_tas.c</span></span><br><span class="line"><span class="comment">+++ b/src/mutex/mut_tas.c</span></span><br><span class="line"><span class="comment">@@ -47,7 +47,7 @@ __db_tas_mutex_init(env, mutex, flags)</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> #ifdef HAVE_SHARED_LATCHES</span></span><br><span class="line"><span class="comment"> if (F_ISSET(mutexp, DB_MUTEX_SHARED))</span></span><br><span class="line"><span class="comment">-atomic_init(&amp;mutexp-&gt;sharecount, 0);</span></span><br><span class="line"><span class="comment">+atomic_init_db(&amp;mutexp-&gt;sharecount, 0);</span></span><br><span class="line"><span class="comment"> else</span></span><br><span class="line"><span class="comment"> #endif</span></span><br><span class="line"><span class="comment"> if (MUTEX_INIT(&amp;mutexp-&gt;tas)) &#123;</span></span><br><span class="line"><span class="comment">@@ -536,7 +536,7 @@ __db_tas_mutex_unlock(env, mutex)</span></span><br><span class="line"><span class="comment"> F_CLR(mutexp, DB_MUTEX_LOCKED);</span></span><br><span class="line"><span class="comment"> /* Flush flag update before zeroing count */</span></span><br><span class="line"> MEMBAR_EXIT();</span><br><span class="line">-atomic_init(&amp;mutexp-&gt;sharecount, <span class="number">0</span>);</span><br><span class="line">+atomic_init_db(&amp;mutexp-&gt;sharecount, <span class="number">0</span>);</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> DB_ASSERT(env, sharecount &gt; <span class="number">0</span>);</span><br><span class="line"> MEMBAR_EXIT();</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz</span></span><br><span class="line">tar -xzvf db<span class="number">-4.8</span><span class="number">.30</span>.NC.tar.gz</span><br><span class="line"></span><br><span class="line">cd db<span class="number">-4.8</span><span class="number">.30</span>.NC/build_unix/</span><br><span class="line"></span><br><span class="line">../dist/configure --enable-cxx --disable-<span class="keyword">shared</span> --with-pic --prefix=/work/bitcoin<span class="number">-0.19</span><span class="number">.1</span>/db4</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure LDFLAGS=<span class="string">"-L/work/bitcoin-0.19.1/db4/lib/"</span> CPPFLAGS=<span class="string">"-I/work/bitcoin-0.19.1/db4/include/"</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">make</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>默认安装到/usr/local/bin/目录下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-rwxr-xr-x  <span class="number">1</span> root root <span class="number">140376160</span> May <span class="number">29</span> <span class="number">14</span>:<span class="number">08</span> bench_bitcoin*</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> root root   <span class="number">8032176</span> May <span class="number">29</span> <span class="number">14</span>:<span class="number">08</span> bitcoin-cli*</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> root root <span class="number">126259248</span> May <span class="number">29</span> <span class="number">14</span>:<span class="number">08</span> bitcoind*</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> root root  <span class="number">19538256</span> May <span class="number">29</span> <span class="number">14</span>:<span class="number">08</span> bitcoin-tx*</span><br><span class="line">-rwxr-xr-x  <span class="number">1</span> root root  <span class="number">58618744</span> May <span class="number">29</span> <span class="number">14</span>:<span class="number">08</span> bitcoin-wallet*</span><br></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/.bitcoin</span><br><span class="line"><span class="keyword">vim</span> /root/.bitcoin/bitcoin.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><h3 id="启动测试网络"><a href="#启动测试网络" class="headerlink" title="启动测试网络"></a>启动测试网络</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">daemon</span>=<span class="number">1</span>  <span class="comment">#是否后台运行</span></span><br><span class="line"><span class="attr">server</span>=<span class="number">1</span>  <span class="comment">#允许接收JSON-RPC commands</span></span><br><span class="line"><span class="attr">rpcuser</span>=bitcoinrpc  <span class="comment">#rpc用户名</span></span><br><span class="line"><span class="comment"># generate random rpc password:</span></span><br><span class="line"><span class="comment">#   $ strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 30 | tr -d '\n'; echo</span></span><br><span class="line"><span class="attr">rpcpassword</span>=zvGzMyGKczjImkKMpD85WoGyUukhwf  <span class="comment">#rpc用户密码</span></span><br><span class="line"><span class="attr">rpcthreads</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="attr">datadir</span>=/work/blockdata   <span class="comment">#指定区块数据存放目录</span></span><br><span class="line"></span><br><span class="line"><span class="attr">testnet</span>=<span class="number">1</span>    <span class="comment">#为1代表使用测试网络  为0表示正式网络</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">rpcallowip</span>=<span class="number">172.16</span>.<span class="number">0.0</span>/<span class="number">12</span></span><br><span class="line"><span class="attr">rpcallowip</span>=<span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">16</span></span><br><span class="line"><span class="attr">rpcallowip</span>=<span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use 1G memory for utxo, depends on your machine's memory</span></span><br><span class="line"><span class="attr">dbcache</span>=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set maximum BIP141 block weight</span></span><br><span class="line"><span class="attr">blockmaxweight</span>=<span class="number">4000000</span></span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bitcoind </span>   </span><br><span class="line">#会提示<span class="keyword">Bitcoin </span>Core starting</span><br></pre></td></tr></table></figure><p>启动后会在指定目录生成如下区块数据</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">total <span class="number">524</span></span><br><span class="line">drwxr-xr-x <span class="number">5</span> root root   <span class="number">4096</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> ./</span><br><span class="line">drwxr-xr-x <span class="number">3</span> root root   <span class="number">4096</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">13</span> ../</span><br><span class="line">-rw------- <span class="number">1</span> root root     <span class="number">37</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">13</span> banlist.dat</span><br><span class="line">drwx------ <span class="number">3</span> root root   <span class="number">4096</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> blocks/</span><br><span class="line">drwx------ <span class="number">2</span> root root   <span class="number">4096</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">13</span> chainstate/</span><br><span class="line">-rw------- <span class="number">1</span> root root  <span class="number">10073</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> debug.log</span><br><span class="line">-rw------- <span class="number">1</span> root root <span class="number">247985</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> fee_estimates.dat</span><br><span class="line">-rw------- <span class="number">1</span> root root      <span class="number">0</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">13</span> .lock</span><br><span class="line">-rw------- <span class="number">1</span> root root     <span class="number">17</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> mempool.dat</span><br><span class="line">-rw------- <span class="number">1</span> root root <span class="number">244776</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> peers.dat</span><br><span class="line">drwxr-xr-x <span class="number">2</span> root root   <span class="number">4096</span> May <span class="number">29</span> <span class="number">15</span>:<span class="number">14</span> wallets/</span><br></pre></td></tr></table></figure><p>通过  tailf debug.log   查看区块数据同步进度</p><p>停止</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitcoin-cli  <span class="built_in">stop</span></span><br></pre></td></tr></table></figure><h3 id="启动正式网络"><a href="#启动正式网络" class="headerlink" title="启动正式网络"></a>启动正式网络</h3><p>bitcoin.conf配置文件如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将testnet=<span class="number">1</span>改为testnet=<span class="number">0</span>即可</span><br></pre></td></tr></table></figure><p>正式网络同步区块数据较长，取决于网络和节点。截至当前区块数据达300GB。</p><p>参考资料：</p><ul><li><a href="https://github.com/bitcoin/bitcoin/blob/0.18/doc/build-unix.md" target="_blank" rel="noopener">https://github.com/bitcoin/bitcoin/blob/0.18/doc/build-unix.md</a></li><li><a href="https://www.chainnode.com/tutorial/1702" target="_blank" rel="noopener">https://www.chainnode.com/tutorial/1702</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Bitcoin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bitcoin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang cobra应用程序管理</title>
      <link href="2020/05/27/golang-cobra%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86/"/>
      <url>2020/05/27/golang-cobra%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="cobra介绍"><a href="#cobra介绍" class="headerlink" title="cobra介绍"></a>cobra介绍</h3><p>Cobra既是用于创建功能强大的现代CLI应用程序的库，又是用于生成应用程序和命令文件的程序。</p><p>Cobra被用于许多Go项目中，例如Kubernetes， Hugo和Github CLI等。此列表包含使用Cobra的项目的更广泛的列表</p><p>Cobra是一个提供简单界面的库，用于创建功能强大的现代CLI界面，类似于git＆go工具。</p><p>Cobra还是一个应用程序，它将生成您的应用程序框架以快速开发基于Cobra的应用程序。</p><p>Cobra提供：</p><ul><li>简单易用的基于子-的CLI： ，app server，app fetch等。</li><li>完全兼容POSIX的标志（包括短版和长版）</li><li>嵌套子命令</li><li>全局，局部和级联标志</li><li>易产生的应用程序和命令与cobra init appname＆cobra add cmdname</li><li>明智的建议（app srver……是您的意思app server吗？）</li><li>自动生成命令和标志的帮助</li><li>自动帮助标志识别-h，–help等等。</li><li>为您的应用程序自动生成的bash自动完成</li><li>为您的应用程序自动生成的手册页</li><li>命令别名，因此您可以更改内容而不会破坏它们</li><li>定义自己的帮助，用法等的灵活性。</li><li>可选与viper紧密集成，可用于12因子应用程序</li></ul><h3 id="安装cobra"><a href="#安装cobra" class="headerlink" title="安装cobra"></a>安装cobra</h3><p>安装cobra后会在GOPATH/bin目录下创建cobra可执行文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/spf13/cobra/cobra</span><br></pre></td></tr></table></figure><h3 id="初始化cobra项目"><a href="#初始化cobra项目" class="headerlink" title="初始化cobra项目"></a>初始化cobra项目</h3><p>参考文档：</p><ul><li><a href="https://github.com/spf13/cobra/blob/master/cobra/README.md" target="_blank" rel="noopener">https://github.com/spf13/cobra/blob/master/cobra/README.md</a></li></ul><p>Cobra提供了自己的程序，该程序将创建您的应用程序并添加所需的任何命令。这是将Cobra集成到您的应用程序中的最简单方法。</p><p>参考:</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="keyword">new</span><span class="type">App</span> &amp;&amp; cd <span class="keyword">new</span><span class="type">App</span></span><br><span class="line"><span class="type">cobra</span> init --pkg-name github.com/spf13/<span class="keyword">new</span><span class="type">App</span></span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir startApp</span><br><span class="line">cd startAapp</span><br><span class="line">cobra init --pkg-name startApp</span><br></pre></td></tr></table></figure><h3 id="添加命令"><a href="#添加命令" class="headerlink" title="添加命令"></a>添加命令</h3><p>初始化应用程序后，Cobra可以为您创建其他命令。假设您创建了一个应用，并且想要以下命令:</p><ul><li>应用配置</li><li>应用运行</li><li>应用停止</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">E:\GoWorks\src\startApp&gt;cobra <span class="builtin-name">add</span> config</span><br><span class="line">config created at E:\GoWorks\src\startApp</span><br><span class="line"></span><br><span class="line">E:\GoWorks\src\startApp&gt;cobra <span class="builtin-name">add</span> run</span><br><span class="line"><span class="builtin-name">run</span> created at E:\GoWorks\src\startApp</span><br><span class="line"></span><br><span class="line">E:\GoWorks\src\startApp&gt;cobra <span class="builtin-name">add</span> stop</span><br><span class="line">stop created at E:\GoWorks\src\startApp</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">E:\GoWorks\src\startApp&gt;go mod init</span><br><span class="line">go: creating new go.mod: module startApp</span><br><span class="line"></span><br><span class="line">E:\GoWorks\src\startApp&gt;go build</span><br><span class="line">go: finding github.com/spf13/viper v1.7.0</span><br><span class="line">go: downloading github.com/spf13/viper v1.7.0</span><br><span class="line">go: extracting github.com/spf13/viper v1.7.0</span><br><span class="line">go: downloading gopkg.in/yaml.v2 v2.2.4</span><br><span class="line">go: downloading github.com/subosito/gotenv v1.2.0</span><br><span class="line">go: downloading github.com/magiconair/properties v1.8.1</span><br><span class="line">go: downloading golang.org/x/text v0.3.2</span><br><span class="line">go: downloading gopkg.in/ini.v1 v1.51.0</span><br><span class="line">go: extracting github.com/subosito/gotenv v1.2.0</span><br><span class="line">go: extracting gopkg.in/yaml.v2 v2.2.4</span><br><span class="line">go: extracting github.com/magiconair/properties v1.8.1</span><br><span class="line">go: extracting gopkg.in/ini.v1 v1.51.0</span><br><span class="line">go: extracting golang.org/x/text v0.3.2</span><br><span class="line">go: finding github.com/magiconair/properties v1.8.1</span><br><span class="line">go: finding golang.org/x/text v0.3.2</span><br><span class="line">go: finding github.com/subosito/gotenv v1.2.0</span><br><span class="line">go: finding gopkg.in/ini.v1 v1.51.0</span><br><span class="line">go: finding gopkg.in/yaml.v2 v2.2.4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E:\GoWorks\src\startApp&gt;startApp.exe  //执行程序</span><br><span class="line">A longer description that spans multiple lines and likely contains</span><br><span class="line">examples and usage of using your application. For example:</span><br><span class="line"></span><br><span class="line">Cobra is a CLI library for Go that empowers applications.</span><br><span class="line">This application is a tool to generate the needed files</span><br><span class="line">to quickly create a Cobra application.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  startApp [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  config      A brief description of your command   //可以看到新加的config命令</span><br><span class="line">  help        Help about any command</span><br><span class="line">  run         A brief description of your command</span><br><span class="line">  stop        A brief description of your command</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --config string   config file (default is $HOME/.startApp.yaml)</span><br><span class="line">  -h, --help            help for startApp</span><br><span class="line">  -t, --toggle          Help message for toggle</span><br><span class="line"></span><br><span class="line">Use "startApp [command] --help" for more information about a command.</span><br><span class="line"></span><br><span class="line">E:\GoWorks\src\startApp&gt;</span><br></pre></td></tr></table></figure><h3 id="为命令添加功能"><a href="#为命令添加功能" class="headerlink" title="为命令添加功能"></a>为命令添加功能</h3><p>默认情况下，每个命令默认都添加了-h帮助信息，描述信息修改在每个cmd.go文件的Long Short提示标签下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> runCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">"run"</span>,</span><br><span class="line">Short: <span class="string">"start your app"</span>,</span><br><span class="line">Long: <span class="string">`start`</span>,</span><br><span class="line">Run: <span class="function"><span class="keyword">func</span><span class="params">(cmd *cobra.Command, args []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"程序正在运行"</span>)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例:为程序添加version命令</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:<span class="symbol">\G</span>oWorks<span class="symbol">\s</span>rc<span class="symbol">\s</span>tartApp&gt;cobra add version</span><br><span class="line">version created at E:<span class="symbol">\G</span>oWorks<span class="symbol">\s</span>rc<span class="symbol">\s</span>tartApp</span><br></pre></td></tr></table></figure><p>修改version.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Run: <span class="function"><span class="keyword">func</span><span class="params">(cmd *cobra.Command, args []<span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"version is v1.0"</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>编译并执行</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">E:<span class="symbol">\G</span>oWorks<span class="symbol">\s</span>rc<span class="symbol">\s</span>tartApp&gt;startApp.exe version</span><br><span class="line">version is v1.0</span><br><span class="line"></span><br><span class="line">E:<span class="symbol">\G</span>oWorks<span class="symbol">\s</span>rc<span class="symbol">\s</span>tartApp&gt;</span><br></pre></td></tr></table></figure><h3 id="修改程序描述"><a href="#修改程序描述" class="headerlink" title="修改程序描述"></a>修改程序描述</h3><p>编辑cmd目录下root.go文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rootCmd = &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">"startApp"</span>,</span><br><span class="line">Short: <span class="string">"A brief description of your application"</span>,</span><br><span class="line">Long: <span class="string">`startApp to Manager your Apps`</span>,  <span class="comment">//修改此处</span></span><br><span class="line"><span class="comment">// Uncomment the following line if your bare application</span></span><br><span class="line"><span class="comment">// has an action associated with it:</span></span><br><span class="line"><span class="comment">//Run: func(cmd *cobra.Command, args []string) &#123; &#125;,</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料:</p><ul><li><a href="https://github.com/spf13/cobra" target="_blank" rel="noopener">https://github.com/spf13/cobra</a></li><li><a href="https://www.cnblogs.com/sparkdev/p/10856077.html" target="_blank" rel="noopener">https://www.cnblogs.com/sparkdev/p/10856077.html</a></li><li><a href="https://o-my-chenjian.com/2017/09/20/Using-Cobra-With-Golang/" target="_blank" rel="noopener">https://o-my-chenjian.com/2017/09/20/Using-Cobra-With-Golang/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 golang.org/x 包失败</title>
      <link href="2020/05/27/%E8%A7%A3%E5%86%B3-golang-org-x-%E5%8C%85%E5%A4%B1%E8%B4%A5/"/>
      <url>2020/05/27/%E8%A7%A3%E5%86%B3-golang-org-x-%E5%8C%85%E5%A4%B1%E8%B4%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用go get\go install 等命令时会自动去下载相关的依赖包，因我国特殊原因会出现下载失败，通常表现如下。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> golang.org<span class="regexp">/x/</span><span class="string">text:</span> unrecognized <span class="keyword">import</span> path “golang.org<span class="regexp">/x/</span>text” (https <span class="string">fetch:</span> Get <span class="string">https:</span><span class="comment">//golang.org/x/text?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)</span></span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="手动下载包到-GOPATH-src路径下"><a href="#手动下载包到-GOPATH-src路径下" class="headerlink" title="手动下载包到$GOPATH/src路径下"></a>手动下载包到$GOPATH/src路径下</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir $GOPATH/src/golang.org/x</span><br><span class="line">cd $GOPATH/src/golang.org/x</span><br><span class="line">git clone git@github.com:golang/text.git</span><br><span class="line">rm -rf text/.git</span><br></pre></td></tr></table></figure><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p>第二种方式就是设置代理</p><p>使用公共代理服务<a href="https://goproxy.io，我们可参见下面直接使用七牛云的代理，国内用户访问更快。" target="_blank" rel="noopener">https://goproxy.io，我们可参见下面直接使用七牛云的代理，国内用户访问更快。</a></p><h3 id="配置国内七牛代理"><a href="#配置国内七牛代理" class="headerlink" title="配置国内七牛代理"></a>配置国内七牛代理</h3><p>参见文档:</p><ul><li><a href="https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md" target="_blank" rel="noopener">https://github.com/goproxy/goproxy.cn/blob/master/README.zh-CN.md</a></li><li><a href="https://goproxy.cn" target="_blank" rel="noopener">https://goproxy.cn</a></li></ul><h4 id="MacOS或者Linux"><a href="#MacOS或者Linux" class="headerlink" title="MacOS或者Linux"></a>MacOS或者Linux</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="builtin-name">export</span> <span class="attribute">GO111MODULE</span>=on</span><br><span class="line">$ <span class="builtin-name">export</span> <span class="attribute">GOPROXY</span>=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"export GO111MODULE=on"</span> &gt;&gt; ~/.profile</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"export GOPROXY=https://goproxy.cn"</span> &gt;&gt; ~/.profile</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.profile</span></span><br></pre></td></tr></table></figure><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">C:</span>\&gt; <span class="variable">$env</span><span class="symbol">:GO111MODULE</span> = <span class="string">"on"</span></span><br><span class="line"><span class="symbol">C:</span>\&gt; <span class="variable">$env</span><span class="symbol">:GOPROXY</span> = <span class="string">"https://goproxy.cn"</span></span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 打开“开始”并搜索“env”</span><br><span class="line"><span class="number">2.</span> 选择“编辑系统环境变量”</span><br><span class="line"><span class="number">3.</span> 点击“环境变量…”按钮</span><br><span class="line"><span class="number">4.</span> 在“&lt;你的用户名&gt; 的用户变量”章节下（上半部分）</span><br><span class="line"><span class="number">5.</span> 点击“新建…”按钮</span><br><span class="line"><span class="number">6.</span> 选择“变量名”输入框并输入“GO111MODULE”</span><br><span class="line"><span class="number">7.</span> 选择“变量值”输入框并输入“on”</span><br><span class="line"><span class="number">8.</span> 点击“确定”按钮</span><br><span class="line"><span class="number">9.</span> 点击“新建…”按钮</span><br><span class="line"><span class="number">10.</span> 选择“变量名”输入框并输入“GOPROXY”</span><br><span class="line"><span class="number">11.</span> 选择“变量值”输入框并输入“https:<span class="comment">//goproxy.cn”</span></span><br><span class="line"><span class="number">12.</span> 点击“确定”按钮</span><br></pre></td></tr></table></figure><h4 id="重启goland"><a href="#重启goland" class="headerlink" title="重启goland"></a>重启goland</h4><p>切记，切记，切记！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://shockerli.net/post/go-get-golang-org-x-solution/" target="_blank" rel="noopener">https://shockerli.net/post/go-get-golang-org-x-solution/</a></li><li><a href="https://github.com/goproxy/goproxy.cn" target="_blank" rel="noopener">https://github.com/goproxy/goproxy.cn</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>glang 日志解析glog</title>
      <link href="2020/05/26/glang-%E6%97%A5%E5%BF%97%E8%A7%A3%E6%9E%90glog/"/>
      <url>2020/05/26/glang-%E6%97%A5%E5%BF%97%E8%A7%A3%E6%9E%90glog/</url>
      
        <content type="html"><![CDATA[<h3 id="glog"><a href="#glog" class="headerlink" title="glog"></a>glog</h3><p>go语言有一个标准库，log，提供了最基本的日志功能，但是没有什么高级的功能，如果需要高级的特性，可以选择glog或log4go,K8s默认的日志输出就是用的glog。</p><p>glog是google提供的，类似于google的c++ log库，使用起来非常简单，下面介绍一下；log4go的用法和log4j一样，可配置性比较高。</p><p>日志输出格式是固定的(Lmmdd hh:mm:ss.uuuuuu threadid file:line] msg…)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">程序名.电脑名.用户名<span class="selector-class">.log</span><span class="selector-class">.xxx</span><span class="selector-class">.YYYYMMDD-HHMMSS</span><span class="selector-class">.pid</span></span><br></pre></td></tr></table></figure><p>glog只提供了少数几个选项，通过命令行控制，例如：</p><p>-log_dir: 日志文件保存目录</p><p>-alsologtostderr: 日志写入文件的同时，输出到stderr</p><p>-v：配置V输出的等级。</p><p>glog使用非常简单，只需要import就可以了。glog package的init函数会初始化并启动一个glog 的flushDaemon协程，你只需要使用glog.Info, glog.Warning, glog.Error或glog.Fatal即可。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/golang/glog</span><br></pre></td></tr></table></figure><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span>//godoc<span class="meta">.org</span>/github.com/golang/glog</span><br></pre></td></tr></table></figure><p>日志级别</p><ul><li>INFO：普通日志；</li><li>WARNING：告警日志；</li><li>ERROR：错误日志；</li><li>FATAL：严重错误日志，打印完日志后程序将会推出 os.Exit()</li></ul><p>使用方式参考：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">glog.Info(<span class="string">"Prepare to repel boarders"</span>)</span><br><span class="line"></span><br><span class="line">glog.Fatalf(<span class="string">"Initialization failed: %s"</span>, err)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> glog.Flush()</span><br><span class="line"></span><br><span class="line">glog.Info(<span class="string">"This is info message"</span>)</span><br><span class="line">glog.Infof(<span class="string">"This is info message: %v"</span>, <span class="number">12345</span>)</span><br><span class="line">glog.InfoDepth(<span class="number">1</span>, <span class="string">"This is info message"</span>, <span class="number">12345</span>)</span><br><span class="line"></span><br><span class="line">glog.Warning(<span class="string">"This is warning message"</span>)</span><br><span class="line">glog.Warningf(<span class="string">"This is warning message: %v"</span>, <span class="number">12345</span>)</span><br><span class="line">glog.WarningDepth(<span class="number">1</span>, <span class="string">"This is warning message"</span>, <span class="number">12345</span>)</span><br><span class="line"></span><br><span class="line">glog.Error(<span class="string">"This is error message"</span>)</span><br><span class="line">glog.Errorf(<span class="string">"This is error message: %v"</span>, <span class="number">12345</span>)</span><br><span class="line">glog.ErrorDepth(<span class="number">1</span>, <span class="string">"This is error message"</span>, <span class="number">12345</span>)</span><br><span class="line"></span><br><span class="line">glog.Fatal(<span class="string">"This is fatal message"</span>)</span><br><span class="line">glog.Fatalf(<span class="string">"This is fatal message: %v"</span>, <span class="number">12345</span>)</span><br><span class="line">glog.FatalDepth(<span class="number">1</span>, <span class="string">"This is fatal message"</span>, <span class="number">12345</span>)</span><br></pre></td></tr></table></figure><p>日志级别<br>使用日志级别,在程序运行时可以使用-v=5打印这个级别以下定义的日志输出  -alsologtostderr 是将日志同时输出到控制台。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">glog.V(<span class="number">3</span>).Info(<span class="string">"LEVEL 3 message"</span>) <span class="comment">// 使用日志级别 3</span></span><br><span class="line">glog.V(<span class="number">4</span>).Info(<span class="string">"LEVEL 4 message"</span>) <span class="comment">// 使用日志级别 4</span></span><br><span class="line">glog.V(<span class="number">5</span>).Info(<span class="string">"LEVEL 5 message"</span>) <span class="comment">// 使用日志级别 5</span></span><br><span class="line">glog.V(<span class="number">8</span>).Info(<span class="string">"LEVEL 8 message"</span>) <span class="comment">// 使用日志级别 8</span></span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"flag"</span></span><br><span class="line"><span class="string">"github.com/golang/glog"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ConfigData <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerID                    <span class="keyword">uint8</span></span><br><span class="line">ServerPort                  <span class="keyword">int32</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(conf *ConfigData)</span> <span class="title">LoadFromFile</span><span class="params">(file <span class="keyword">string</span>)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">configJSON, err := ioutil.ReadFile(file)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">err = json.Unmarshal(configJSON, conf)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序退出时确保写入文件中</span></span><br><span class="line"><span class="keyword">defer</span> glog.Flush()</span><br><span class="line"></span><br><span class="line">configFilePath := flag.String(<span class="string">"config"</span>, <span class="string">"./config.json"</span>, <span class="string">"Path of config file"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flag.NFlag() &lt; <span class="number">1</span> &#123; <span class="comment">//NFlag返回解析时进行了设置的flag的数量。</span></span><br><span class="line">flag.Usage() <span class="comment">//当参数小于1个打印flag的默认提示</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 读取配置文件</span></span><br><span class="line"><span class="keyword">var</span> configData ConfigData</span><br><span class="line">err := configData.LoadFromFile(*configFilePath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">glog.Fatal(<span class="string">"加载配置文件失败: "</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">glog.Info(<span class="string">"配置加载正确"</span>)</span><br><span class="line">glog.Info(<span class="string">"程序开始启动&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>)</span><br><span class="line">fmt.Println(configData.ServerID,configData.ServerPort)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>会在log文件下生成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GoLogMain.exe -config=<span class="string">"./config.json"</span> -log_dir=<span class="string">"./log"</span> -alsologtostderr</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django Admin常用命令</title>
      <link href="2020/05/21/django-Admin%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2020/05/21/django-Admin%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="Django-Admin"><a href="#Django-Admin" class="headerlink" title="Django Admin"></a>Django Admin</h3><p>django-admin 是Django的命令行工具集，用于处理系统相关操作，比如创建管理员账户，忘记密码，应用数据库等等。如果某工程安装了相关app，那么在使用工程命令时只有django默认的命令行。</p><h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p>help命令主要用户获取帮助信息，显示django可用的命令，如果要显示某个命令使用python manage.py help  shell </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py help</span><br><span class="line"></span><br><span class="line">Type 'manage.py help &lt;subcommand&gt;' for help on a specific subcommand.</span><br><span class="line"></span><br><span class="line">Available subcommands:</span><br><span class="line"></span><br><span class="line">[auth]                         #安装了auth app</span><br><span class="line">    changepassword</span><br><span class="line">    createsuperuser</span><br><span class="line"></span><br><span class="line">[captcha]                      #captcha app</span><br><span class="line">    captcha_clean</span><br><span class="line">    captcha_create_pool</span><br><span class="line"></span><br><span class="line">[contenttypes]</span><br><span class="line">    remove_stale_contenttypes</span><br><span class="line"></span><br><span class="line">[django]</span><br><span class="line">    check</span><br><span class="line">    compilemessages</span><br><span class="line">    createcachetable</span><br><span class="line">    dbshell</span><br><span class="line">    diffsettings</span><br><span class="line">    dumpdata</span><br><span class="line">    flush</span><br><span class="line">    inspectdb</span><br><span class="line">    loaddata</span><br><span class="line">    makemessages</span><br><span class="line">    makemigrations</span><br><span class="line">    migrate</span><br><span class="line">    sendtestemail</span><br><span class="line">    shell</span><br><span class="line">    showmigrations</span><br><span class="line">    sqlflush</span><br><span class="line">    sqlmigrate</span><br><span class="line">    sqlsequencereset</span><br><span class="line">    squashmigrations</span><br><span class="line">    startapp</span><br><span class="line">    startproject</span><br><span class="line">    test</span><br><span class="line">    testserver</span><br><span class="line"></span><br><span class="line">[sessions]     </span><br><span class="line">    clearsessions</span><br><span class="line"></span><br><span class="line">[staticfiles]</span><br><span class="line">    collectstatic</span><br><span class="line">    findstatic</span><br><span class="line">    runserver</span><br></pre></td></tr></table></figure><p>显示单个命令用法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py help shell</span><br><span class="line">usage: manage.py shell [-h] [--no-startup] [-i &#123;ipython,bpython,python&#125;]</span><br><span class="line">                       [-c COMMAND] [--version] [-v &#123;0,1,2,3&#125;]</span><br><span class="line">                       [--settings SETTINGS] [--pythonpath PYTHONPATH]</span><br><span class="line">                       [--traceback] [--no-color]</span><br><span class="line"></span><br><span class="line">Runs a Python interactive interpreter. Tries to use IPython or bpython, if one</span><br><span class="line">of them is available. Any standard input is executed as code.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  --no-startup          When using plain Python, ignore the PYTHONSTARTUP</span><br><span class="line">                        environment variable and ~/.pythonrc.py script.</span><br><span class="line">  -i &#123;ipython,bpython,python&#125;, --interface &#123;ipython,bpython,python&#125;</span><br><span class="line">                        Specify an interactive interpreter interface.</span><br><span class="line">                        Available options: "ipython", "bpython", and "python"</span><br><span class="line">  -c COMMAND, --command COMMAND</span><br><span class="line">                        Instead of opening an interactive shell, run a command</span><br><span class="line">                        as Django and exit.</span><br><span class="line">  --version             show program's version number and exit</span><br><span class="line">  -v &#123;0,1,2,3&#125;, --verbosity &#123;0,1,2,3&#125;</span><br><span class="line">                        Verbosity level; 0=minimal output, 1=normal output,</span><br><span class="line">                        2=verbose output, 3=very verbose output</span><br><span class="line">  --settings SETTINGS   The Python path to a settings module, e.g.</span><br><span class="line">                        "myproject.settings.main". If this isn't provided, the</span><br><span class="line">                        DJANGO_SETTINGS_MODULE environment variable will be</span><br><span class="line">                        used.</span><br><span class="line">  --pythonpath PYTHONPATH</span><br><span class="line">                        A directory to add to the Python path, e.g.</span><br><span class="line">                        "/home/djangoprojects/myproject".</span><br><span class="line">  --traceback           Raise on CommandError exceptions</span><br><span class="line">  --no-color            Don't colorize the command output.</span><br></pre></td></tr></table></figure><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><p>显示当前django版本</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@localhost</span><span class="symbol">:/data/djangosite</span><span class="comment"># python manage.py version</span></span><br><span class="line"><span class="number">2.1</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="changepassword"><a href="#changepassword" class="headerlink" title="changepassword"></a>changepassword</h3><p>修改项目中的用户名和密码，前提需要安装auth库并且正确配置用户信息。 输入两次密码即可修改admin用户的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py changepassword admin</span><br><span class="line">Changing password for user 'admin'</span><br><span class="line">Password:</span><br><span class="line">Password (again):</span><br></pre></td></tr></table></figure><h3 id="createsuperuser"><a href="#createsuperuser" class="headerlink" title="createsuperuser"></a>createsuperuser</h3><p>创建项目中的管理员账户，前提需要安装auth库并且正确配置数据库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py createsuperuser</span><br><span class="line">username:admin</span><br><span class="line">email:admin@qq.com</span><br><span class="line">password:xxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="check"><a href="#check" class="headerlink" title="check"></a>check</h3><p>用于检查工程中是否存在错误，用法：python manage.py check  [app_lable….]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite#python manage.py check</span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">root@localhost:/data/djangosite#</span><br></pre></td></tr></table></figure><p>此时修改一下将url.py改成错误的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite#python manage.py check</span><br><span class="line">.........</span><br><span class="line">  File "/data/djangosite/apps/users/urls.py", line 24</span><br><span class="line">    path('logout/', users_view.LogoutView.as_view(), name="logout"),</span><br><span class="line">       ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure><h3 id="dbshell"><a href="#dbshell" class="headerlink" title="dbshell"></a>dbshell</h3><p>Django 会自动进入在settings.py中设置的数据库,这个就和sql终端是一样的<br>manage.py dbshell  or manage.py dbshell  –database db1  如果配置多数据库的情况下，可以指定进入哪个数据库</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py dbshell </span><br><span class="line">mysql: [<span class="builtin-name">Warning</span>] Using a password on the command line<span class="built_in"> interface </span>can be insecure.</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table <span class="keyword">and</span> column names</span><br><span class="line">You can turn off this feature <span class="keyword">to</span> <span class="builtin-name">get</span> a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL<span class="built_in"> connection </span>id is 10365662</span><br><span class="line">Server version: 5.7.26-log Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.<span class="built_in"> Type </span><span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><p>将修改应用到数据库，如果不加任何参数默认会将所有应用程序的models.py更新到数据库，可以单独指定app更新到数据库。默认应用到数据库后会记录到django_migrations数据表中。</p><p>手动指定撤销到指定的migration文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate users 0002_account_user</span><br></pre></td></tr></table></figure><p>如果手动更新了数据库可以什么–fake参数</p><p>解决migrate命令报错的解决方法：</p><ol><li>终极解决方案原理：就是将之前的那些迁移脚本都不用了。重新来过。要将出问题的app下的所有模型和数据库中表保持一致，重新映射。</li><li>将出问题的app下的所有模型，都和数据库中的表保持一致。</li><li>将出问题的app下的所有迁移脚本文件都删掉。再在django_migrations表中将出问题的app相关的迁移记录都删掉。</li><li>使用makemigrations，重新将模型生成一个迁移脚本。</li><li>使用migrate –fake-initial参数，将刚刚生成的迁移脚本，标记为已经完成（因为这些模型相对应的表，其实都已经在数据库中存在了，不需要重复执行了。）</li><li>可以做其他的映射了。</li></ol><h3 id="makemigrations"><a href="#makemigrations" class="headerlink" title="makemigrations"></a>makemigrations</h3><p>根据model的变化生成对应的python代码，该代码用于更新数据库。代码会存放于每个工程目录下的migrations 目录下。该目录默认包含<strong>init</strong>.py文件。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">migrations/</span><br><span class="line">├── <span class="number">0001</span>_initial.py</span><br><span class="line">├── <span class="number">0002</span>_account_user.py</span><br><span class="line">├── <span class="number">0003</span>_auto_20181129_1941.py</span><br></pre></td></tr></table></figure><h3 id="sqlmigrate"><a href="#sqlmigrate" class="headerlink" title="sqlmigrate"></a>sqlmigrate</h3><p>输出某一migrate所对应的SQL语句。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py sqlmigrate users 0001_initial</span><br><span class="line">2018-12-01 10:00:00</span><br><span class="line">2018-12-01 10:00:00</span><br><span class="line">BEGIN;</span><br><span class="line">--</span><br><span class="line">-- Create model User</span><br><span class="line">--</span><br><span class="line">CREATE TABLE `users_user` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `password` varchar(128) NOT NULL, `last_login` datetime(6) NULL, `is_superuser` bool NOT NULL, `username` varchar(150) NOT NULL UNIQUE, `first_name` varchar(30) NOT NULL, `last_name` varchar(150) NOT NULL, `email` varchar(254) NOT NULL, `is_staff` bool NOT NULL, `is_active` bool NOT NULL, `date_joined` datetime(6) NOT NULL, `mobile` varchar(20) NOT NULL, `PIN` varchar(20) NOT NULL);</span><br><span class="line">CREATE TABLE `users_user_groups` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `user_id` integer NOT NULL, `group_id` integer NOT NULL);</span><br><span class="line">CREATE TABLE `users_user_user_permissions` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `user_id` integer NOT NULL, `permission_id` integer NOT NULL);</span><br><span class="line">--</span><br><span class="line">-- Create model History</span><br><span class="line">--</span><br><span class="line">CREATE TABLE `users_history` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `user` varchar(50) NULL, `login_time` datetime(6) NOT NULL, `logout_time` datetime(6) NOT NULL, `login_status` varchar(11) NULL, `user_ip` char(39) NOT NULL, `create_time` datetime(6) NOT NULL, `update_time` datetime(6) NOT NULL);</span><br><span class="line">ALTER TABLE `users_user_groups` ADD CONSTRAINT `users_user_groups_user_id_5f6f5a90_fk_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users_user` (`id`);</span><br><span class="line">ALTER TABLE `users_user_groups` ADD CONSTRAINT `users_user_groups_group_id_9afc8d0e_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`);</span><br><span class="line">ALTER TABLE `users_user_groups` ADD CONSTRAINT users_user_groups_user_id_group_id_b88eab82_uniq UNIQUE (`user_id`, `group_id`);</span><br><span class="line">ALTER TABLE `users_user_user_permissions` ADD CONSTRAINT `users_user_user_permissions_user_id_20aca447_fk_users_user_id` FOREIGN KEY (`user_id`) REFERENCES `users_user` (`id`);</span><br><span class="line">ALTER TABLE `users_user_user_permissions` ADD CONSTRAINT `users_user_user_perm_permission_id_0b93982e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`);</span><br><span class="line">ALTER TABLE `users_user_user_permissions` ADD CONSTRAINT users_user_user_permissions_user_id_permission_id_43338c45_uniq UNIQUE (`user_id`, `permission_id`);</span><br><span class="line">COMMIT;</span><br></pre></td></tr></table></figure><h3 id="showmigrations"><a href="#showmigrations" class="headerlink" title="showmigrations"></a>showmigrations</h3><p>显示migrations记录<br>如果已经应用到数据库中前面[]后显示[X],否则为[] 使用-p显示所有记录  -l 按应用程序显示记录。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/data/djangosite# python manage.py showmigrations<span class="built_in"> users </span></span><br><span class="line"></span><br><span class="line">users</span><br><span class="line"> [X] 0001_initial</span><br><span class="line"> [X] 0002_auto_20181223_1302</span><br><span class="line"> [X] 0003_auto_20181223_1316</span><br><span class="line"> [X] 0004_verifycode</span><br><span class="line"> [X] 0005_auto_20190104_1141</span><br><span class="line"> [X] 0006_auto_20190216_1647</span><br><span class="line"> [X] 0007_user_region</span><br></pre></td></tr></table></figure><h3 id="startproject"><a href="#startproject" class="headerlink" title="startproject"></a>startproject</h3><p>创建django工程，会在当前目录创建一个文件夹，文件夹下包含manage.py文件以及工程文件夹，同时在工程文件夹下包含settings.py文件及其它文件夹</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@localhost</span><span class="symbol">:/djangodir</span><span class="comment"># django-admin startproject djangosite</span></span><br><span class="line">root<span class="variable">@localhost</span><span class="symbol">:/djangodir</span><span class="comment"># ls</span></span><br><span class="line">djangosite</span><br><span class="line">root<span class="variable">@localhost</span><span class="symbol">:/djangodir</span><span class="comment"># tree djangosite</span></span><br><span class="line">djangosite</span><br><span class="line">├── djangosite</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">└── manage.py</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> directory, <span class="number">5</span> files</span><br></pre></td></tr></table></figure><h3 id="startapp"><a href="#startapp" class="headerlink" title="startapp"></a>startapp</h3><p>创建django app应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/djangodir/djangosite# python manage.py startapp users</span><br><span class="line">root@localhost:/djangodir/djangosite# dir</span><br><span class="line">djangosite  manage.py  users</span><br><span class="line">root@localhost:/djangodir/djangosite# tree</span><br><span class="line">.</span><br><span class="line">├── djangosite</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── __pycache__</span><br><span class="line">│   │   ├── __init__.cpython-36.pyc</span><br><span class="line">│   │   └── settings.cpython-36.pyc</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   ├── urls.py</span><br><span class="line">│   └── wsgi.py</span><br><span class="line">├── manage.py</span><br><span class="line">└── users</span><br><span class="line">    ├── admin.py</span><br><span class="line">    ├── apps.py</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    ├── migrations</span><br><span class="line">    │   └── __init__.py</span><br><span class="line">    ├── models.py</span><br><span class="line">    ├── tests.py</span><br><span class="line">    └── views.py</span><br><span class="line"></span><br><span class="line">4 directories, 14 files</span><br></pre></td></tr></table></figure><h3 id="collectstatic"><a href="#collectstatic" class="headerlink" title="collectstatic"></a>collectstatic</h3><p>python manage.py collectstatic在执行时，django默认会去查看定义在STATICFILES_DIRS里的目录，以及在INSTALLED_APPS里定义了的app的static目录。如果这些目录下有文件，则把文件全部收集起来，拷贝到STATIC_ROOT目录下。当使用django的runserver时，如果请求的是一个静态文件，django也是会默认查看上述的ROOT、DIRS和static目录。但是，在部署到服务器上时，此规则就不使用了。</p><p>配置setting.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [ </span><br><span class="line">            os.path.join(BASE_DIR, <span class="string">"static/"</span>),</span><br><span class="line">]</span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span>   </span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">"staticfiles/"</span>)</span><br></pre></td></tr></table></figure><p>执行命令后会去收集静态资源文件放于STATIC_ROOT文件夹下</p><p>STATIC_ROOT 是在部署的时候才发挥作用, 而实际情况下,静态文件的一般安放位置有两种:</p><p>1.一种就是在每个app里面新建一个static文件夹,将静态文件放到里面,在加载静态文件时,比如要在模板中用到静态文件,django会自动在每个app里面搜索static文件夹(所以,不要把文件夹的名字写错哦, 否则django就找不到你的文件夹了)</p><p>2.另一种,就是在所有的app文件外面,建立一个公共的文件夹, 因为有些静态文件不是某个app独有的,那么就可以把它放到一个公共文件夹里面,方便管理(注意,建立一个公共的静态文件的文件夹只是一种易于管理的做法,但是不是必须的,app是可以跨app应用静态文件的,因为最后所有的静态文件都会在STATIC_ROOT里面存在)<br>那现在的问题是如何让django知道你把一些静态文件放到app以外的公共文件夹中呢,那就需要配置STATICFILES_DIRS了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/djangodir/djangosite# python manage.py collectstatic</span><br></pre></td></tr></table></figure><h3 id="runserver"><a href="#runserver" class="headerlink" title="runserver"></a>runserver</h3><p>在当前机器上启动工程，默认是一个轻量的web服务器，只作为测试用，默认端口为8000，默认监听127.0.0.1:8000<br>修改默认监听和端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/djangodir/djangosite# python manage.py runserver 0.0.0.0:8001  #修改默认监听</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">Django version 2.1.1, using settings 'djangosite.settings'</span><br><span class="line">Starting development server at http://0.0.0.0:8001/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>启动django工程交互，默认情况下使用ipython启动的交互默认，可以自动补全，需要提前安装。在交互窗口下可import 测试相关语法等</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:/djangodir/djangosite# python manage.py shell</span><br><span class="line">Python 3.6.7 (default, Oct 25 2018, 09:16:13) </span><br><span class="line">[GCC 5.4.0 20160609] on linux</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">(InteractiveConsole)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 读取XML配置文件</title>
      <link href="2020/05/21/golang-%E8%AF%BB%E5%8F%96XML%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/05/21/golang-%E8%AF%BB%E5%8F%96XML%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="XML配置文件"><a href="#XML配置文件" class="headerlink" title="XML配置文件"></a>XML配置文件</h3><p>解析xml使用”encoding/xml”包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">smtpServer</span>&gt;</span>smtp.163.com<span class="tag">&lt;/<span class="name">smtpServer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">smtpPort</span>&gt;</span>25<span class="tag">&lt;/<span class="name">smtpPort</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">sender</span>&gt;</span>user@163.com<span class="tag">&lt;/<span class="name">sender</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">senderPasswd</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">senderPasswd</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">receivers</span> <span class="attr">flag</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>29<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">user</span>&gt;</span>roddy@qq.com<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">user</span>&gt;</span>test1@qq.com<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">receivers</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>xml.Unmarshal()</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">data, err := ioutil.ReadAll(file)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"读取文件失败: %v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">v := ConfigXML&#123;&#125;</span><br><span class="line">err = xml.Unmarshal(data, &amp;v)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"解析XML失败: %v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/xml"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SReceivers <span class="keyword">struct</span> &#123;</span><br><span class="line">Flag <span class="keyword">string</span> <span class="string">`xml:"flag,attr"`</span> <span class="comment">// 读取flag属性</span></span><br><span class="line">User []<span class="keyword">string</span> <span class="string">`xml:"user"`</span> <span class="comment">// 读取user数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ConfigXML <span class="keyword">struct</span> &#123;</span><br><span class="line"></span><br><span class="line">XMLName  xml.Name <span class="string">`xml:"config"`</span> <span class="comment">// 指定最外层的标签为config</span></span><br><span class="line">SmtpServer <span class="keyword">string</span> <span class="string">`xml:"smtpServer"`</span> <span class="comment">// 读取smtpServer配置项，并将结果保存到SmtpServer变量中</span></span><br><span class="line">SmtpPort <span class="keyword">int</span> <span class="string">`xml:"smtpPort"`</span></span><br><span class="line">Sender <span class="keyword">string</span> <span class="string">`xml:"sender"`</span></span><br><span class="line">SenderPasswd <span class="keyword">string</span> <span class="string">`xml:"senderPasswd"`</span></span><br><span class="line">Receivers SReceivers <span class="string">`xml:"receivers"`</span> <span class="comment">// 读取receivers标签下的内容，以结构方式获取</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">file, err := os.Open(<span class="string">"config.xml"</span>) <span class="comment">// For read access.</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"配置文件错误: %v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">data, err := ioutil.ReadAll(file)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"读取文件失败: %v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">v := ConfigXML&#123;&#125;</span><br><span class="line">err = xml.Unmarshal(data, &amp;v)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"解析XML失败: %v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(v)</span><br><span class="line">fmt.Println(<span class="string">"SmtpServer : "</span>,v.SmtpServer)</span><br><span class="line">fmt.Println(<span class="string">"SmtpPort : "</span>,v.SmtpPort)</span><br><span class="line">fmt.Println(<span class="string">"Sender : "</span>,v.Sender)</span><br><span class="line">fmt.Println(<span class="string">"SenderPasswd : "</span>,v.SenderPasswd)</span><br><span class="line">fmt.Println(<span class="string">"Receivers.Flag : "</span>,v.Receivers.Flag)</span><br><span class="line"><span class="keyword">for</span> i,element := <span class="keyword">range</span> v.Receivers.User &#123;</span><br><span class="line">fmt.Println(i,element)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 读取YAML配置文件</title>
      <link href="2020/05/21/golang-%E8%AF%BB%E5%8F%96YAML%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/05/21/golang-%E8%AF%BB%E5%8F%96YAML%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="YAML配置"><a href="#YAML配置" class="headerlink" title="YAML配置"></a>YAML配置</h3><p>参考配置文件config.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">languages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Ruby</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Perl</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Python</span></span><br><span class="line"><span class="attr">Nginx:</span></span><br><span class="line">  <span class="attr">Port:</span> <span class="number">443</span></span><br><span class="line">  <span class="attr">LogPath:</span>  <span class="string">"/var/log//nginx/nginx.log"</span></span><br><span class="line">  <span class="attr">Path:</span> <span class="string">"/opt/nginx/"</span></span><br></pre></td></tr></table></figure><h3 id="安装yaml包"><a href="#安装yaml包" class="headerlink" title="安装yaml包"></a>安装yaml包</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">go</span> <span class="built_in">get</span> gopkg.<span class="keyword">in</span>/yaml.v2</span><br></pre></td></tr></table></figure><h3 id="结构体解析"><a href="#结构体解析" class="headerlink" title="结构体解析"></a>结构体解析</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Nginx <span class="keyword">struct</span> &#123;</span><br><span class="line">Port <span class="keyword">int</span> <span class="string">`yaml:"Port"`</span></span><br><span class="line">LogPath <span class="keyword">string</span> <span class="string">`yaml:"LogPath"`</span></span><br><span class="line">Path <span class="keyword">string</span> <span class="string">`yaml:"Path"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> language <span class="keyword">struct</span> &#123;</span><br><span class="line">Languages []<span class="keyword">string</span></span><br><span class="line">SiteNginx  Nginx <span class="string">`yaml:"Nginx"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析YAML"><a href="#解析YAML" class="headerlink" title="解析YAML"></a>解析YAML</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> language language</span><br><span class="line"></span><br><span class="line">file, err := ioutil.ReadFile(<span class="string">"config.yaml"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"yamlFile.Get err   #%v "</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = yaml.Unmarshal(file, &amp;language)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"Unmarshal: %v"</span>, err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"gopkg.in/yaml.v2"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Nginx <span class="keyword">struct</span> &#123;</span><br><span class="line">Port <span class="keyword">int</span> <span class="string">`yaml:"Port"`</span></span><br><span class="line">LogPath <span class="keyword">string</span> <span class="string">`yaml:"LogPath"`</span></span><br><span class="line">Path <span class="keyword">string</span> <span class="string">`yaml:"Path"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> language <span class="keyword">struct</span> &#123;</span><br><span class="line">Languages []<span class="keyword">string</span></span><br><span class="line">SiteNginx  Nginx <span class="string">`yaml:"Nginx"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> language language</span><br><span class="line"></span><br><span class="line">file, err := ioutil.ReadFile(<span class="string">"config.yaml"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">"读取配置文件失败   #%v "</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = yaml.Unmarshal(file, &amp;language)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">"解析失败: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(language.Languages)</span><br><span class="line">fmt.Println(language.SiteNginx.Port)</span><br><span class="line">fmt.Println(language.SiteNginx.LogPath)</span><br><span class="line">fmt.Println(language.SiteNginx.Path)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 读取ini配置文件</title>
      <link href="2020/05/21/golang-%E8%AF%BB%E5%8F%96ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/05/21/golang-%E8%AF%BB%E5%8F%96ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="ini配置文件"><a href="#ini配置文件" class="headerlink" title="ini配置文件"></a>ini配置文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Host]</span></span><br><span class="line"><span class="attr">host</span>=<span class="string">"127.0.0.1"</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">"roddy"</span></span><br><span class="line"><span class="attr">dbpath</span>=<span class="string">"/user/local/mysql/bin/"</span></span><br></pre></td></tr></table></figure><h3 id="安装gcfg-v1"><a href="#安装gcfg-v1" class="headerlink" title="安装gcfg.v1"></a>安装gcfg.v1</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get gopkg.in/gcfg.v1</span><br></pre></td></tr></table></figure><h3 id="解析ini"><a href="#解析ini" class="headerlink" title="解析ini"></a>解析ini</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">config := <span class="keyword">struct</span> &#123;</span><br><span class="line">Host <span class="keyword">struct</span>&#123;</span><br><span class="line">Host <span class="keyword">string</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">DBPath <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err := gcfg.ReadFileInto(&amp;config, <span class="string">"config.ini"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"读取文件失败,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多Section解析"><a href="#多Section解析" class="headerlink" title="多Section解析"></a>多Section解析</h3><p>多节点配置文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Host]</span></span><br><span class="line"><span class="attr">host</span>=<span class="string">"127.0.0.1"</span></span><br><span class="line"><span class="attr">name</span>=<span class="string">"roddy"</span></span><br><span class="line"><span class="attr">dbpath</span>=<span class="string">"/user/local/mysql/bin/"</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Config]</span></span><br><span class="line"><span class="attr">path</span>=<span class="string">"/etc/sys.ini"</span></span><br><span class="line"><span class="attr">user</span>=<span class="string">"roddy"</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3388</span></span><br></pre></td></tr></table></figure><p>解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">config := <span class="keyword">struct</span> &#123;</span><br><span class="line">Host <span class="keyword">struct</span>&#123;</span><br><span class="line">Host <span class="keyword">string</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">DBPath <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Config <span class="keyword">struct</span>&#123;</span><br><span class="line">Path <span class="keyword">string</span></span><br><span class="line">User <span class="keyword">string</span></span><br><span class="line">Port <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="完整实例"><a href="#完整实例" class="headerlink" title="完整实例"></a>完整实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"gopkg.in/gcfg.v1"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">config := <span class="keyword">struct</span> &#123;</span><br><span class="line">Host <span class="keyword">struct</span>&#123;</span><br><span class="line">Host <span class="keyword">string</span></span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">DBPath <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Config <span class="keyword">struct</span>&#123;</span><br><span class="line">Path <span class="keyword">string</span></span><br><span class="line">User <span class="keyword">string</span></span><br><span class="line">Port <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"xxx"</span>)</span><br><span class="line">err := gcfg.ReadFileInto(&amp;config, <span class="string">"config.ini"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"读取文件失败,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(config.Host.Host)</span><br><span class="line">fmt.Println(config.Host.Name)</span><br><span class="line">fmt.Println(config.Host.DBPath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"----------------"</span>)</span><br><span class="line">fmt.Println(config.Config.Path)</span><br><span class="line">fmt.Println(config.Config.Port)</span><br><span class="line">fmt.Println(config.Config.User)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 读取JSON配置文件</title>
      <link href="2020/05/21/golang-%E8%AF%BB%E5%8F%96json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>2020/05/21/golang-%E8%AF%BB%E5%8F%96json%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件叫config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Host"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="attr">"Port"</span>: <span class="number">4569</span>,</span><br><span class="line">  <span class="attr">"Path"</span>: <span class="string">"/user/local/cc.conf"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建结构体"><a href="#创建结构体" class="headerlink" title="创建结构体"></a>创建结构体</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置文件结构体</span></span><br><span class="line"><span class="keyword">type</span> configFile <span class="keyword">struct</span> &#123;</span><br><span class="line">Host <span class="keyword">string</span></span><br><span class="line">Port <span class="keyword">int</span></span><br><span class="line">Path <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析JSON文件"><a href="#解析JSON文件" class="headerlink" title="解析JSON文件"></a>解析JSON文件</h3><p>Decoder 主要负责将 JSON 数据解析成结构对象，JSON-对象</p><p>Encoder 主要负责将结构对象编码成 JSON 数据，对象-JSON</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// json解析文件</span></span><br><span class="line">decoder := json.NewDecoder(file)</span><br><span class="line"></span><br><span class="line">conf := configFile&#123;&#125;</span><br><span class="line"></span><br><span class="line">decodeErr := decoder.Decode(&amp;conf)</span><br></pre></td></tr></table></figure><p>以上代码可以简写成</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// json解析文件</span></span><br><span class="line"><span class="keyword">conf</span> := configFile&#123;&#125;</span><br><span class="line">decoder := json.NewDecoder(<span class="keyword">file</span>).<span class="keyword">Decode</span>(&amp;<span class="keyword">conf</span>)</span><br></pre></td></tr></table></figure><h3 id="完整实例"><a href="#完整实例" class="headerlink" title="完整实例"></a>完整实例</h3><p>读取配置文件config.json的配置属性</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">// 配置文件结构体</span></span><br><span class="line"><span class="keyword">type</span> configFile <span class="keyword">struct</span> &#123;</span><br><span class="line">Host <span class="keyword">string</span></span><br><span class="line">Port <span class="keyword">int</span></span><br><span class="line">Path <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">file, err := os.Open(<span class="string">"./config.json"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"读取文件失败,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭文件</span></span><br><span class="line"><span class="keyword">defer</span>  file.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// json解析文件</span></span><br><span class="line">conf := configFile&#123;&#125;</span><br><span class="line">decoder := json.NewDecoder(file).Decode(&amp;conf)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> decoder !=<span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"解析配置文件失败,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取配置并赋值到变量</span></span><br><span class="line">host := conf.Host</span><br><span class="line"></span><br><span class="line">port := conf.Port</span><br><span class="line"></span><br><span class="line">path :=  conf.Path</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"IP:%v,端口:%v,配置文件:%v"</span>,host,port,path)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 端口扫描</title>
      <link href="2020/05/20/golang-%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
      <url>2020/05/20/golang-%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>简要端口扫描程序代码,可通过用户输入及端口扫描并获得状态。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span>  main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"flag"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"net"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义flag</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">serverIp   = flag.String(<span class="string">"ip"</span>, <span class="string">""</span>, <span class="string">"Server Ip address"</span>)</span><br><span class="line">startPort = flag.Int(<span class="string">"s"</span>, <span class="number">0</span>, <span class="string">"Start Port"</span>)</span><br><span class="line">endPort = flag.Int(<span class="string">"n"</span>, <span class="number">0</span>, <span class="string">"End Port"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// checkPort 检查端口状态</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkPort</span><span class="params">(ip <span class="keyword">string</span>,port <span class="keyword">int</span>,wg *sync.WaitGroup)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span>  wg.Done()</span><br><span class="line">conn, err := net.DialTimeout(<span class="string">"tcp"</span>, fmt.Sprintf(<span class="string">"%s:%d"</span>, ip, port), time.Second * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"端口打开-------------:%v\n"</span>,port)</span><br><span class="line">conn.Close()  <span class="comment">//关闭连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解析flag输入</span></span><br><span class="line">flag.Parse()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> flag.NFlag() &lt;= <span class="number">1</span> &#123; <span class="comment">//Flag返回解析时进行了设置的flag的数量。</span></span><br><span class="line">flag.Usage() <span class="comment">//当参数小于1个打印flag的默认提示</span></span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=*startPort;i&lt;*endPort;i++&#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> checkPort(*serverIp,i,&amp;wg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">fmt.Printf(<span class="string">"扫描完毕\n"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><p>编译</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> build GoPortScan.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Usage of GoPortScan.exe:</span><br><span class="line">  -ip string</span><br><span class="line">       <span class="built_in"> Server Ip </span>address</span><br><span class="line">  -n int</span><br><span class="line">        End Port</span><br><span class="line">  -s int</span><br><span class="line">        Start Port</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GoPortScan.exe -ip <span class="number">36.110</span><span class="number">.236</span><span class="number">.68</span> -s <span class="number">1</span> -n <span class="number">9090</span></span><br><span class="line">端口打开-------------:<span class="number">80</span></span><br><span class="line">端口打开-------------:<span class="number">443</span></span><br><span class="line">扫描完毕</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang goroutine与channel</title>
      <link href="2020/05/19/golang-goroutine%E4%B8%8Echannel/"/>
      <url>2020/05/19/golang-goroutine%E4%B8%8Echannel/</url>
      
        <content type="html"><![CDATA[<h3 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a>并发与并行</h3><p>并发:同一时间段内执行多个任务<br>并行:同一时刻执行多个任务</p><p>golang的并发使用goroutine来实现。goroutine类似于线程，属于用户态的线程，可以根据需要创建成千上万个goroutine并发工作。</p><p>Go还提供channel在多个goroutine间通信。goroutine和channel是GO CSP 并发模式的重要实现基础。</p><h3 id="启动goroutine"><a href="#启动goroutine" class="headerlink" title="启动goroutine"></a>启动goroutine</h3><p>开启goroutine 只需要在函数前面加go 关键字即可。</p><h3 id="并发实例"><a href="#并发实例" class="headerlink" title="并发实例"></a>并发实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"HELLO"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;  <span class="comment">//开启一个主goroutine去执行main函数</span></span><br><span class="line"><span class="keyword">go</span> hello() <span class="comment">//开启一个goroutine去执行hello函数 有可能不输出Hello</span></span><br><span class="line">fmt.Println(<span class="string">"start"</span>)</span><br><span class="line"><span class="comment">//time.Sleep(time.Second * 1)  不建议使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名函数goroutine"><a href="#匿名函数goroutine" class="headerlink" title="匿名函数goroutine"></a>匿名函数goroutine</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;  <span class="comment">// 开启一个主goroutine去执行main函数</span></span><br><span class="line"></span><br><span class="line">wg.Add(<span class="number">100</span>) <span class="comment">//计数</span></span><br><span class="line"><span class="comment">// 启动100个线程</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"hello"</span>,i)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"start"</span>)</span><br><span class="line">wg.Wait()  <span class="comment">//等待所有线程都执行完才结束 是阻塞状态</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过GOMAXPROCS可以设置当前GO占用CPU的核心数</p><p>Go语言中的操作系统线程和goroutine的关系：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>一个操作系统线程对应用户态多个goroutine.</span><br><span class="line"><span class="number">2.</span>go程序可以同时使用多个操作系统线程.</span><br><span class="line"><span class="number">3.</span>goroutine和OS线程是多对多的关系</span><br></pre></td></tr></table></figure><h3 id="channel"><a href="#channel" class="headerlink" title="channel"></a>channel</h3><p>channel是一种类型</p><p>不同的goroutine之间的数据交互采用channel(通道)。通道像一个传送带或者队列，遵循先入先出(FIFO)的规则，保证数据的顺序。</p><h3 id="声明channel类型"><a href="#声明channel类型" class="headerlink" title="声明channel类型"></a>声明channel类型</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// var 变量  chan  元素类型</span></span><br><span class="line"><span class="keyword">var</span> ch1 <span class="keyword">chan</span>  <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">fmt.Println(ch1)  <span class="comment">//默认是nil</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建通道使用make方法"><a href="#创建通道使用make方法" class="headerlink" title="创建通道使用make方法"></a>创建通道使用make方法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ch2 := <span class="built_in">make</span>(<span class="keyword">chan</span> []<span class="keyword">string</span>,<span class="number">20</span>)  <span class="comment">//20为缓存区大小</span></span><br><span class="line">fmt.Println(ch2)</span><br></pre></td></tr></table></figure><h3 id="channel操作"><a href="#channel操作" class="headerlink" title="channel操作"></a>channel操作</h3><h4 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch1&lt;<span class="number">-10</span></span><br></pre></td></tr></table></figure><h4 id="接收"><a href="#接收" class="headerlink" title="接收"></a>接收</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x:= &lt;- ch1</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// var 变量  chan  元素类型</span></span><br><span class="line"><span class="keyword">var</span> ch1  <span class="keyword">chan</span>  <span class="keyword">int</span></span><br><span class="line">ch1 = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">10</span>)  <span class="comment">//ch1 = make(chan int) 无缓冲区通道</span></span><br><span class="line">ch1 &lt;- <span class="number">20</span>  <span class="comment">//将20发送到ch1</span></span><br><span class="line">x := &lt;- ch1</span><br><span class="line">fmt.Println(x)</span><br><span class="line"><span class="built_in">close</span>(ch1)   <span class="comment">//关闭通道</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是无缓冲区通道发送时会阻塞，只有当另一个通道去获取通道数据后才可以。<br>带缓存区通道可以存放缓冲区大小的数据，并不会阻塞，是个异步通道。</p><p>实例:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(ch1 <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++&#123;</span><br><span class="line"></span><br><span class="line">ch1 &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(ch1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f2</span><span class="params">(ch1,ch2 <span class="keyword">chan</span>  <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//从通道中取值1</span></span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line">tmp,ok := &lt;-ch1</span><br><span class="line"><span class="keyword">if</span> !ok&#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ch2 &lt;- tmp * tmp</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(ch2)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// var 变量  chan  元素类型</span></span><br><span class="line">ch1 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">100</span>)</span><br><span class="line">ch2 := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> f1(ch1)</span><br><span class="line"><span class="keyword">go</span> f2(ch1,ch2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//从通道中取值2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ret:=<span class="keyword">range</span> ch2&#123;</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="单向通道"><a href="#单向通道" class="headerlink" title="单向通道"></a>单向通道</h4><p>一般用在给函数传递参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(ch1 <span class="keyword">chan</span> &lt;- <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++&#123;</span><br><span class="line"></span><br><span class="line">ch1 &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(ch1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="worker-pool-goroutine池"><a href="#worker-pool-goroutine池" class="headerlink" title="worker pool(goroutine池)"></a>worker pool(goroutine池)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">worker</span><span class="params">(id <span class="keyword">int</span>,jobs&lt;-<span class="keyword">chan</span> <span class="keyword">int</span>,results <span class="keyword">chan</span>&lt;- <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> job := <span class="keyword">range</span> jobs&#123;</span><br><span class="line">fmt.Printf(<span class="string">"worker:%d,start job:%d\n"</span>,id,job)</span><br><span class="line">results &lt;- job*<span class="number">2</span></span><br><span class="line"></span><br><span class="line">time.Sleep(time.Millisecond* <span class="number">500</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">jobs :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">100</span>)</span><br><span class="line">results :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3个goroutine</span></span><br><span class="line"><span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++&#123;</span><br><span class="line"><span class="keyword">go</span> worker(j,jobs,results)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//5个任务</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++&#123;</span><br><span class="line">jobs &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(jobs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++&#123;</span><br><span class="line">ret := &lt;- results</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="select-多路复用"><a href="#select-多路复用" class="headerlink" title="select 多路复用"></a>select 多路复用</h3><p>select 随机执行一个可运行的 case。如果没有 case 可运行，它将阻塞，直到有 case 可运行。一个默认的子句应该总是可运行的。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">每个 case 都必须是一个通信</span><br><span class="line">所有 channel 表达式都会被求值</span><br><span class="line">所有被发送的表达式都会被求值</span><br><span class="line">如果任意某个通信可以进行，它就执行，其他被忽略。</span><br><span class="line">如果有多个 case 都可以运行，Select 会随机公平地选出一个执行。其他不会执行。</span><br><span class="line"></span><br><span class="line">否则：</span><br><span class="line">1.如果有<span class="built_in"> default </span>子句，则执行该语句。</span><br><span class="line">2.如果没有<span class="built_in"> default </span>子句，select 将阻塞，直到某个通信可以运行；Go 不会重新对 channel 或值进行求值。</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">ch :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> x:=&lt;-ch:</span><br><span class="line">fmt.Println(x)</span><br><span class="line"><span class="keyword">case</span> ch&lt;-i:</span><br><span class="line">fmt.Println(i,<span class="string">"232323"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"不做操作"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 反射</title>
      <link href="2020/05/19/golang-%E5%8F%8D%E5%B0%84/"/>
      <url>2020/05/19/golang-%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<p>参考:<a href="https://blog.csdn.net/u011957758/article/details/81193806" target="_blank" rel="noopener">https://blog.csdn.net/u011957758/article/details/81193806</a></p><h3 id="Golang反射"><a href="#Golang反射" class="headerlink" title="Golang反射"></a>Golang反射</h3><p>Golang提供了一种机制，在编译时不知道类型的情况下，可更新变量、运行时查看值、调用方法以及直接对他们的布局进行操作的机制，称为反射。</p><h3 id="为什么需要反射"><a href="#为什么需要反射" class="headerlink" title="为什么需要反射"></a>为什么需要反射</h3><p>打个比方，有时候我们需要一个函数可以处理各种类型的值。在不知道类型的情况下，你可能会这么写。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码</span></span><br><span class="line"><span class="keyword">switch</span> <span class="keyword">value</span> := <span class="keyword">value</span>.(type) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line"><span class="comment">// ...一些操作</span></span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line"><span class="comment">// ...一些操作</span></span><br><span class="line"><span class="keyword">case</span> cbsStruct: <span class="comment">// 自定义的结构体</span></span><br><span class="line"><span class="comment">// ...一些操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有没发现什么问题？<br>这边存在一个问题：类型很多，这个函数会写的非常长，而且还可能存在自定的类型，也就是说这个判断日后可能还要一直改，因为无法知道未知值到底属于什么类型。</p><p>无法透视一个未知类型的时候，以上代码其实不是很合理，这时候就需要有反射来帮忙你处理，反射使用TypeOf和ValueOf函数从接口中获取目标对象的信息，轻松完成目的</p><h3 id="reflect"><a href="#reflect" class="headerlink" title="reflect"></a>reflect</h3><p>他提供了两种类型来进行访问接口变量的内容:1.reflect.ValueOf(),2.reflect.TypeOf()</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> serverName = <span class="string">"web服务器"</span></span><br><span class="line"></span><br><span class="line">fmt.Println(serverName)</span><br><span class="line"></span><br><span class="line">reflectType := reflect.TypeOf(serverName)</span><br><span class="line">reflectValue := reflect.ValueOf(serverName)</span><br><span class="line">fmt.Println(reflectType,reflectValue)</span><br></pre></td></tr></table></figure><p>输出结果为:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> web服务器</span><br></pre></td></tr></table></figure><p>Go语言中反射中数组、切片、Map、指针等类型的变量，它们的.Name()都是返回为空。</p><h3 id="结构体反射"><a href="#结构体反射" class="headerlink" title="结构体反射"></a>结构体反射</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name" ini:"s_name"`</span></span><br><span class="line">Score <span class="keyword">int</span> <span class="string">`json:"score" ini:"s_score"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">stu1 := student&#123;</span><br><span class="line"><span class="string">"roddy"</span>,</span><br><span class="line"><span class="number">90</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过反射获取结构体中的所有字段信息</span></span><br><span class="line"></span><br><span class="line">t:=reflect.TypeOf(stu1)</span><br><span class="line">fmt.Println(t.Name(),t.Kind())</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历结构体变量的所有字段</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;t.NumField();i++&#123;</span><br><span class="line">fileObj := t.Field(i)</span><br><span class="line"><span class="comment">//fmt.Println(fileObj.Name,fileObj.PkgPath,fileObj.Tag,fileObj.Type)</span></span><br><span class="line"></span><br><span class="line">fmt.Println(fileObj.Tag.Get(<span class="string">"json"</span>),fileObj.Tag.Get(<span class="string">"ini"</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据名字去获取结构体字段</span></span><br><span class="line"></span><br><span class="line">filedObj2,ok :=t.FieldByName(<span class="string">"Score"</span>)</span><br><span class="line"><span class="keyword">if</span> ok&#123;</span><br><span class="line">fmt.Println(filedObj2.Tag.Get(<span class="string">"json"</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 结构体与json</title>
      <link href="2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8Ejson/"/>
      <url>2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8Ejson/</url>
      
        <content type="html"><![CDATA[<h3 id="结构体可见性"><a href="#结构体可见性" class="headerlink" title="结构体可见性"></a>结构体可见性</h3><p>如果一个Go语言中定义的标识符是首字母大写的,那么对外可见</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Miners <span class="keyword">struct</span> &#123;</span><br><span class="line">WorkerName <span class="keyword">string</span>  <span class="comment">//首字母大写</span></span><br><span class="line">Cgminer  <span class="keyword">string</span></span><br><span class="line">Pool  <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体与JSON"><a href="#结构体与JSON" class="headerlink" title="结构体与JSON"></a>结构体与JSON</h3><p>JSON一种轻量级的数据交换格式，易于阅读，通过使用前后端分离项目。利用API获取数据并解析，主要用于数据交互。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Book <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span>     <span class="comment">//字段名必须是大写否则不可见 定制化展示tag  `json:"student_id"`</span></span><br><span class="line">Sn <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">t := Book&#123;<span class="string">"百世go"</span>,<span class="string">"SN2323232323232323"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//json 序列化数据</span></span><br><span class="line"></span><br><span class="line">data,err:=json.Marshal(t)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"json 格式化错误,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>格式输出:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"Name"</span>:<span class="string">"百世go"</span>,<span class="attr">"Sn"</span>:<span class="string">"SN2323232323232323"</span>&#125;</span><br></pre></td></tr></table></figure><p>Make10条数据并且以array格式输出</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Book <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Sn <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//book的构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewBook</span><span class="params">(name,sn <span class="keyword">string</span>)</span> <span class="title">Book</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Book&#123;</span><br><span class="line">Name:name,</span><br><span class="line">Sn:sn,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">book_list := <span class="built_in">make</span>([]Book,<span class="number">0</span>,<span class="number">20</span>)  <span class="comment">//make一个slice序列</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++&#123;</span><br><span class="line"></span><br><span class="line">b1:=NewBook(fmt.Sprintf(<span class="string">"django%v"</span>,i),fmt.Sprintf(<span class="string">"232344422%v"</span>,i))</span><br><span class="line">book_list = <span class="built_in">append</span>(book_list,b1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//json 序列化数据</span></span><br><span class="line"></span><br><span class="line">data,err:=json.Marshal(book_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"json 格式化错误,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">"Name"</span>:<span class="string">"django0"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444220"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django1"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444221"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django2"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444222"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django3"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444223"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django4"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444224"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django5"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444225"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django6"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444226"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django7"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444227"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django8"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444228"</span>&#125;,&#123;<span class="attr">"Name"</span>:<span class="string">"django9"</span>,<span class="attr">"Sn"</span>:<span class="string">"2323444229"</span>&#125;]</span><br></pre></td></tr></table></figure><h3 id="反序列成JSON"><a href="#反序列成JSON" class="headerlink" title="反序列成JSON"></a>反序列成JSON</h3><p>使用json.Unmarshal</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//json反序列化</span></span><br><span class="line"></span><br><span class="line">Jsostr := <span class="string">`&#123;"Name":"百世go","Sn":"SN2323232323232323"&#125;`</span></span><br><span class="line"><span class="keyword">var</span> c2 Book</span><br><span class="line">err =json.Unmarshal([]<span class="keyword">byte</span>(Jsostr),&amp;c2)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"json 解析失败 err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(c2)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 结构体嵌套</title>
      <link href="2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E5%B5%8C%E5%A5%97/"/>
      <url>2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E5%B5%8C%E5%A5%97/</url>
      
        <content type="html"><![CDATA[<h3 id="结构体匿名字段"><a href="#结构体匿名字段" class="headerlink" title="结构体匿名字段"></a>结构体匿名字段</h3><p>如果不给结构体声明字段名,那该字段为匿名字段</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="keyword">string</span></span><br><span class="line"><span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//匿名字段类型不能重复</span></span><br><span class="line">p1 := User&#123;</span><br><span class="line"><span class="string">"roddy"</span>,</span><br><span class="line"><span class="number">18</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//直接使用类型访问值即可</span></span><br><span class="line">fmt.Println(p1,p1.<span class="keyword">string</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h3><p>结构体可以嵌套另一个结构体以作关联，下面以服务器和IDC为例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IDC <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">address <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> CloudServer <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">ip <span class="keyword">string</span></span><br><span class="line">cpu <span class="keyword">int8</span></span><br><span class="line">disk <span class="keyword">int32</span></span><br><span class="line">mem <span class="keyword">int8</span></span><br><span class="line">net <span class="keyword">float32</span></span><br><span class="line">idc IDC    <span class="comment">//嵌套另外的结构体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s1 := CloudServer&#123;</span><br><span class="line"><span class="string">"webserver"</span>,</span><br><span class="line"><span class="string">"10.10.1.1"</span>,</span><br><span class="line"><span class="number">4</span>,</span><br><span class="line"><span class="number">500</span>,</span><br><span class="line"><span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,</span><br><span class="line">IDC&#123;</span><br><span class="line"><span class="string">"北京1区"</span>,</span><br><span class="line"><span class="string">"北京xxxxx路"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(s1.idc.name,s1)</span><br><span class="line">fmt.Println(s1.name)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匿名嵌套结构体</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> IDC <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">address <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> CloudServer <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">ip <span class="keyword">string</span></span><br><span class="line">cpu <span class="keyword">int8</span></span><br><span class="line">disk <span class="keyword">int32</span></span><br><span class="line">mem <span class="keyword">int8</span></span><br><span class="line">net <span class="keyword">float32</span></span><br><span class="line">IDC    <span class="comment">//匿名嵌套另外的结构体   不声明字段名</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s1 := CloudServer&#123;</span><br><span class="line"><span class="string">"webserver"</span>,</span><br><span class="line"><span class="string">"10.10.1.1"</span>,</span><br><span class="line"><span class="number">4</span>,</span><br><span class="line"><span class="number">500</span>,</span><br><span class="line"><span class="number">8</span>,</span><br><span class="line"><span class="number">8</span>,</span><br><span class="line">IDC&#123;</span><br><span class="line"><span class="string">"北京1区"</span>,</span><br><span class="line"><span class="string">"北京xxxxx路"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(s1.idc.name,s1)</span></span><br><span class="line">fmt.Println(s1.address)        <span class="comment">//直接可访问嵌套结构体里的字段 如果嵌套结构体中使用多个重名字段话需要声明访问哪个结构体</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 方法和接收者</title>
      <link href="2020/05/18/golang-%E6%96%B9%E6%B3%95%E5%92%8C%E6%8E%A5%E6%94%B6%E8%80%85/"/>
      <url>2020/05/18/golang-%E6%96%B9%E6%B3%95%E5%92%8C%E6%8E%A5%E6%94%B6%E8%80%85/</url>
      
        <content type="html"><![CDATA[<h3 id="方法和接收者"><a href="#方法和接收者" class="headerlink" title="方法和接收者"></a>方法和接收者</h3><p>Go语言中的方法是一种作用于特定类型变量的函数。这种特定类型变量叫做接收者。接收者的概念类似于其它语言中的this 或者self。</p><p>接收者的参数在命名时，官方建议使用接收者类型名的第一个小写字母。<br>接收者类型：接收者类型和参数类似，可以是指针类型和非指针类型。<br>方法名、参数列表、返回参数:具体格式与函数定义相同</p><p>例子：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Server是一个结构体</span></span><br><span class="line"><span class="keyword">type</span> server <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">ip <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造一个Server的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewServer</span><span class="params">(name,ip <span class="keyword">string</span>)</span> *<span class="title">server</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;server&#123;</span><br><span class="line">name:name,</span><br><span class="line">ip:ip,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数不属于任何类型,可以在任何地方调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法属于具体类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义方法 Check and Ping</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s server)</span> <span class="title">Check</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s\n"</span>,s.ip)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s server)</span> <span class="title">Ping</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"正在检查ping %s\n"</span>,s.ip)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">server1 := NewServer(<span class="string">"news"</span>,<span class="string">"192.168.1.2"</span>)</span><br><span class="line">server1.Check()</span><br><span class="line"><span class="comment">//(*server1).Ping()</span></span><br><span class="line">server1.Ping()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针类型的接收者"><a href="#指针类型的接收者" class="headerlink" title="指针类型的接收者"></a>指针类型的接收者</h3><p>指针类型的接收者由一个结构体指针组成，由于指针特性，调用方法时修改接收者指针的任意成员变量，在方法结束后，修改都是有效的。例如修改服务器IP</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指针接收者,类型是指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *server)</span> <span class="title">ChangeIp</span><span class="params">(ip <span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"修改前的IP:"</span>,s.ip)</span><br><span class="line"></span><br><span class="line">s.ip=ip</span><br><span class="line">fmt.Println(<span class="string">"修改后的IP:"</span>,s.ip)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server1 := NewServer(<span class="string">"news"</span>,<span class="string">"192.168.1.2"</span>)</span><br><span class="line">server1.Check()</span><br><span class="line"><span class="comment">//(*server1).Ping()</span></span><br><span class="line">server1.Ping()</span><br><span class="line">server1.ChangeIp(<span class="string">"10.10.10.2"</span>)     <span class="comment">// 修改IP</span></span><br></pre></td></tr></table></figure><p><strong><em>值类型的接收者</em></strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//值接收者不会修改原来的值,只作用于当前函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s server)</span> <span class="title">ChangeValueIp</span><span class="params">(ip <span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"修改前的IP:"</span>,s.ip)</span><br><span class="line"></span><br><span class="line">s.ip=ip</span><br><span class="line">fmt.Println(<span class="string">"修改后的IP:"</span>,s.ip)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用情况下使用指针类型</p><p>1.需要修改接收者中的值<br>2.接收者是拷贝代价比较大的对象<br>3.保证一致性，如果某个方法使用了指针接收者，那么其它的方法也应该使用指针接收者。</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 结构体构造函数</title>
      <link href="2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
      <url>2020/05/18/golang-%E7%BB%93%E6%9E%84%E4%BD%93%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="构造体函数"><a href="#构造体函数" class="headerlink" title="构造体函数"></a>构造体函数</h3><p>构造一个结构体实例的函数就叫结构体构造函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">name,city <span class="keyword">string</span></span><br><span class="line">age <span class="keyword">int8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造一个结构体函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newPerson</span><span class="params">(name,city <span class="keyword">string</span>,age <span class="keyword">int8</span>)</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回person结构体</span></span><br><span class="line"><span class="keyword">return</span> Person&#123;</span><br><span class="line">name:name,</span><br><span class="line">city:city,</span><br><span class="line">age:age,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果结构体数据过大，建议优化成结构体指针的方式</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newPerson01</span><span class="params">(name,city <span class="keyword">string</span>,age <span class="keyword">int8</span>)</span> *<span class="title">Person</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回person结构体指针程序优化</span></span><br><span class="line"><span class="keyword">return</span> &amp;Person&#123;</span><br><span class="line">name:name,</span><br><span class="line">city:city,</span><br><span class="line">age:age,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">a :=newPerson(<span class="string">"roddy"</span>,<span class="string">"成都"</span>,<span class="number">29</span>)</span><br><span class="line">av :=newPerson01(<span class="string">"roddy01"</span>,<span class="string">"成都2"</span>,<span class="number">29</span>)</span><br><span class="line">fmt.Printf(<span class="string">"%#v\n"</span>,a)</span><br><span class="line">fmt.Println(av)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 标准库time</title>
      <link href="2020/05/15/golang-%E6%A0%87%E5%87%86%E5%BA%93time/"/>
      <url>2020/05/15/golang-%E6%A0%87%E5%87%86%E5%BA%93time/</url>
      
        <content type="html"><![CDATA[<h3 id="Time标准库"><a href="#Time标准库" class="headerlink" title="Time标准库"></a>Time标准库</h3><p>golang 时间显示和格式化等等操作主要是使用time包，日历的计算采用的是公历时间。</p><p>标准库用法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Now()</span><br><span class="line">Unix()</span><br><span class="line">Date()</span><br><span class="line">UnixNano()</span><br></pre></td></tr></table></figure><p>1.显示当前时间,返回的是Time类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">now := time.Now() <span class="comment">//时间对象</span></span><br><span class="line">fmt.Println(now)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-05</span><span class="number">-15</span> <span class="number">14</span>:<span class="number">55</span>:<span class="number">29.0136499</span> +<span class="number">0800</span> CST m=+<span class="number">0.004986301</span></span><br></pre></td></tr></table></figure><p>2.通过Time对象获取当前时间的年、月、日 小时、分钟等</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">now := time.Now() <span class="comment">//时间对象</span></span><br><span class="line">year := now.Year()  <span class="comment">//年</span></span><br><span class="line">month := now.Month()  <span class="comment">//月</span></span><br><span class="line">day := now.Day()     <span class="comment">//日</span></span><br><span class="line">hour := now.Hour()   <span class="comment">//小时</span></span><br><span class="line">minute := now.Minute() <span class="comment">//分钟</span></span><br><span class="line">second := now.Second()  <span class="comment">//秒</span></span><br></pre></td></tr></table></figure><p>3.Sleep沉睡</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time.Sleep(time.Second * <span class="number">1</span>)  <span class="comment">//沉睡1秒</span></span><br></pre></td></tr></table></figure><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p>1.获取当前的时间戳，从1970 01 01到现在的时间的秒数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">timeStamp1 := now.Unix()</span><br><span class="line">timeStamp2 := now.UnixNano()</span><br><span class="line">fmt.Println(timeStamp1)  <span class="comment">//当前世间戳</span></span><br><span class="line">fmt.Println(timeStamp2)  <span class="comment">//当前世间戳微秒，纳秒</span></span><br></pre></td></tr></table></figure><p>输出时间戳</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1589526157</span></span><br><span class="line"><span class="number">1589526157438067900</span></span><br></pre></td></tr></table></figure><p>2.通过时间戳转成Time时间格式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t:=time.Unix(<span class="number">1589514825</span>,<span class="number">0</span>) <span class="comment">//0纳秒</span></span><br><span class="line">fmt.Println(t)</span><br><span class="line">fmt.Printf(<span class="string">"%v年%v月%v日\n"</span>,t.Year(),t.Month(),t.Day())</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span><span class="number">-05</span><span class="number">-15</span> <span class="number">11</span>:<span class="number">53</span>:<span class="number">45</span> +<span class="number">0800</span> CST</span><br><span class="line"><span class="number">2020</span>年May月<span class="number">15</span>日</span><br></pre></td></tr></table></figure><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>定时器使用time.Tick()方法,可以用于写循环执行的定时任务。当使用Tick()时会返回一个channel。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> tmp  := <span class="keyword">range</span>  time.Tick(time.Second * <span class="number">3</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//do something</span></span><br><span class="line">fmt.Println(tmp)  <span class="comment">//每隔3秒打印当前时间</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tmp:= time.Tick(time.Second * <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-tmp:</span><br><span class="line">fmt.Println(<span class="string">"执行任务"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取之后或者之前的时间"><a href="#获取之后或者之前的时间" class="headerlink" title="获取之后或者之前的时间"></a>获取之后或者之前的时间</h3><p>1.获取未来5小时的时间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">newTime := currentTime.Add(time.Hour * <span class="number">5</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>获取昨日时间</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">oldTime := currentTime.AddDate(<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>)  <span class="comment">//之前就是-1</span></span><br></pre></td></tr></table></figure><p>3.获取7天前的时间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">oldTime := currentTime.AddDate(<span class="number">0</span>, <span class="number">0</span>, <span class="number">-7</span>)</span><br></pre></td></tr></table></figure><p>4.获取5天后的时间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">currentTime := time.Now()</span><br><span class="line">newTime := currentTime.AddDate(<span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>)   <span class="comment">//5天后的日期就是正整数</span></span><br></pre></td></tr></table></figure><p>5.两个时间相减</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">newTime := currentTime.Add(time.Hour * <span class="number">5</span>)</span><br><span class="line">t8:=newTime.Sub(currentTime)   </span><br><span class="line">fmt.Println(t8)</span><br></pre></td></tr></table></figure><h3 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h3><p>golang的时间格式化和其它语言格式化非常不一样，可以说独具一格。其它语言基本上为Y-m-d 或者YYYY-MM-DD这种类似。golang以是”2006 01 02 15 04 05”分别来代表<br>年、月、日、时、分、秒。记录口诀就是2006 1 2 3(下午的3点) 4 5 </p><table><thead><tr><th>类型</th><th>表示</th></tr></thead><tbody><tr><td>年</td><td>2006</td></tr><tr><td>月</td><td>01</td></tr><tr><td>日</td><td>02</td></tr><tr><td>时</td><td>15</td></tr><tr><td>分</td><td>04</td></tr><tr><td>秒</td><td>05</td></tr></tbody></table><p>样例<br>1.将当前时间格式成”2020/02/03 15:21:00”这种类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">currentTime := time.Now()</span><br><span class="line">currentStr := currentTime.Format(<span class="string">"2006/01/02 15:04:05"</span>)</span><br><span class="line">fmt.Println(currentStr)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">05</span>/<span class="number">15</span> <span class="number">15</span>:<span class="number">33</span>:<span class="number">13</span></span><br></pre></td></tr></table></figure><p>2.格式化精确到毫秒<br>在秒后面加上.000即可</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">currentTime := <span class="type">time</span>.Now()</span><br><span class="line">currentStr := currentTime.Format("2006/01/02 15:04:05.000")</span><br><span class="line">fmt.Println(currentStr)</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>/<span class="number">05</span>/<span class="number">15</span> <span class="number">15</span>:<span class="number">34</span>:<span class="number">52.040</span></span><br></pre></td></tr></table></figure><h3 id="解析字符串时间"><a href="#解析字符串时间" class="headerlink" title="解析字符串时间"></a>解析字符串时间</h3><p>如果解析一个字符串时间呢？比如我们现在要解析字符串”2020-03-25 05:02:00”<br>使用Parse会根据当前时区来解析</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">timeStr := <span class="string">"2020-03-25 05:02:00"</span></span><br><span class="line"></span><br><span class="line">strToTime,_ := time.Parse(<span class="string">"2006-01-02 15:04:05"</span>,timeStr)</span><br><span class="line">fmt.Println(strToTime,reflect.TypeOf(strToTime))</span><br></pre></td></tr></table></figure><p>将字符串时间解析成指定时区时间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载时区</span></span><br><span class="line">loc,err := time.LoadLocation(<span class="string">"America/New_York"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">timeStr := <span class="string">"2020-03-25 05:02:00"</span></span><br><span class="line"></span><br><span class="line">strToTime,_ := time.ParseInLocation(<span class="string">"2006-01-02 15:04:05"</span>,timeStr,loc)  <span class="comment">//指定时区变量</span></span><br><span class="line">fmt.Println(strToTime,reflect.TypeOf(strToTime))</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">***将UTC时间"2020-05-14 02:08:23"转成当前时间***</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span> <span class="keyword">go</span> </span><br><span class="line">utcTime := <span class="string">"2020-05-14 02:08:23"</span></span><br><span class="line"></span><br><span class="line">tm,_:=time.Parse(<span class="string">"2006-01-02 15:04:05"</span>,utcTime)  <span class="comment">//先格式化成UTC的时间 </span></span><br><span class="line"></span><br><span class="line">timeStamp3:=tm.Unix()     <span class="comment">//获得时间戳</span></span><br><span class="line">tLocal:=time.Unix(timeStamp3,<span class="number">0</span>)  <span class="comment">//将时间戳转成Time类型</span></span><br><span class="line">fmt.Println(tLocal)    <span class="comment">//输出</span></span><br></pre></td></tr></table></figure><h3 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间类型比较,是否在Time之后</span></span><br><span class="line">After(u Time) <span class="keyword">bool</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//时间类型比较,是否在Time之前</span></span><br><span class="line">Before(u Time) <span class="keyword">bool</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//比较两个时间是否相等</span></span><br><span class="line">Equal(u Time) <span class="keyword">bool</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//判断时间是否为零值,如果sec和nsec两个属性都是0的话,则该时间类型为0</span></span><br><span class="line">IsZero() <span class="keyword">bool</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回年月日,三个参数</span></span><br><span class="line">Date() (year <span class="keyword">int</span>, month Month, day <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回年份</span></span><br><span class="line">Year() <span class="keyword">int</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回月份.是Month类型</span></span><br><span class="line">Month() Month </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回多少号</span></span><br><span class="line">Day() <span class="keyword">int</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回星期几,是Weekday类型</span></span><br><span class="line">Weekday() Weekday </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回年份,和该填是在这年的第几周.</span></span><br><span class="line">ISOWeek() (year, week <span class="keyword">int</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回小时,分钟,秒</span></span><br><span class="line">Clock() (hour, min, sec <span class="keyword">int</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回小时</span></span><br><span class="line">Hour() <span class="keyword">int</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回分钟</span></span><br><span class="line">Minute() <span class="keyword">int</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回秒数</span></span><br><span class="line">Second() <span class="keyword">int</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//返回纳秒</span></span><br><span class="line">Nanosecond() <span class="keyword">int</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 文件写入</title>
      <link href="2020/05/14/golang-%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/"/>
      <url>2020/05/14/golang-%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="Write写入"><a href="#Write写入" class="headerlink" title="Write写入"></a>Write写入</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">func write()&#123;</span><br><span class="line">//os.O_TRUNC 会清空原来的文件</span><br><span class="line">//os.O_APPEND  在原来文件中追加</span><br><span class="line">fileObj,err:=os.OpenFile("xx.txt",os.O_CREATE|os.O_WRONLY|os.O_APPEND,0644)</span><br><span class="line"></span><br><span class="line">if err !=nil&#123;</span><br><span class="line">fmt.Printf("open file failed, err:%v\n",err)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">str := "成都"</span><br><span class="line">fileObj.Write([]byte(str))</span><br><span class="line">fileObj.WriteString("\n")</span><br><span class="line">fileObj.WriteString("哈哈哈")</span><br><span class="line">fileObj.WriteString("\n")</span><br><span class="line"></span><br><span class="line">defer fileObj.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Bufio写入"><a href="#Bufio写入" class="headerlink" title="Bufio写入"></a>Bufio写入</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeByBufio</span><span class="params">()</span></span>&#123;</span><br><span class="line">fileObj,err:=os.OpenFile(<span class="string">"xx.txt"</span>,os.O_CREATE|os.O_WRONLY|os.O_APPEND,<span class="number">0644</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"open file failed, err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> fileObj.Close()</span><br><span class="line">writer := bufio.NewWriter(fileObj)</span><br><span class="line">writer.WriteString(<span class="string">"xxxxxx"</span>)  <span class="comment">//将内容写入到缓冲区</span></span><br><span class="line">writer.Flush()  <span class="comment">//将缓存区内容写入磁盘</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Ioutil写入"><a href="#Ioutil写入" class="headerlink" title="Ioutil写入"></a>Ioutil写入</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">func</span> <span class="selector-tag">writeByIoutil</span>()&#123;</span><br><span class="line"><span class="attribute">str </span>:= <span class="string">"测试123554434"</span></span><br><span class="line">err:=ioutil.<span class="built_in">WriteFile</span>(<span class="string">"./xx.txt"</span>,[]byte(str),<span class="number">0644</span>)</span><br><span class="line">if err != nil&#123;</span><br><span class="line"></span><br><span class="line">fmt.<span class="built_in">Printf</span>(<span class="string">"write file failed,err:%v\n"</span>,err)</span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 文件读取</title>
      <link href="2020/05/14/golang-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
      <url>2020/05/14/golang-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<p>golang文件读取3种方式</p><ul><li>1.按行读取</li><li>2.读取整个内容</li><li>3.分段读取</li></ul><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><p>打开文件使用os模块,使用os.Open(文件路径)</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.<span class="keyword">Open</span>(<span class="string">"./xx.txt"</span>)</span><br></pre></td></tr></table></figure><p>参考实例</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileObj,<span class="keyword">err</span> := os.<span class="keyword">Open</span>(<span class="string">"./test.txt"</span>) <span class="comment">//相对目录打开文件</span></span><br></pre></td></tr></table></figure><h3 id="按行读取文件"><a href="#按行读取文件" class="headerlink" title="按行读取文件"></a>按行读取文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">fileObj,err:=os.Open(<span class="string">"./xx.txt"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"read file failed,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> fileObj.Close()  <span class="comment">//defer关闭文件</span></span><br><span class="line">s :=bufio.NewReader(fileObj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;   <span class="comment">//for循环逐行读取文件</span></span><br><span class="line">reader,err := s.ReadString(<span class="string">'\n'</span>)  <span class="comment">//指定文件每行的换行符号</span></span><br><span class="line"></span><br><span class="line">fmt.Print(reader)    <span class="comment">//打印内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err == io.EOF&#123;           <span class="comment">//如果是文件结尾会抛EOF错误</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取整个文件"><a href="#读取整个文件" class="headerlink" title="读取整个文件"></a>读取整个文件</h3><p>使用ioutil来读取整个文件内容，如果文件过大则不建议使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">content,err:=ioutil.ReadFile(<span class="string">"./xx.txt"</span>)</span><br><span class="line"><span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"read file failed, err:%v\n"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(<span class="keyword">string</span>(content))  <span class="comment">//将内容转成string输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分块读取文件"><a href="#分块读取文件" class="headerlink" title="分块读取文件"></a>分块读取文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">fileObj,err := os.Open(<span class="string">"./xx.txt"</span>) <span class="comment">//相对目录打开文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"open file failed,err:%v\n"</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span>  fileObj.Close()  <span class="comment">//关闭文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tmp  = <span class="built_in">make</span>([]<span class="keyword">byte</span>,<span class="number">128</span>)   <span class="comment">//按字节数读取文件内容</span></span><br><span class="line">n,err:=fileObj.Read(tmp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err == io.EOF&#123;</span><br><span class="line">fmt.Print(<span class="keyword">string</span>(tmp[:n]))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"read  from file failed, err:%v\n"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Print(<span class="keyword">string</span>(tmp))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 函数学习(三)</title>
      <link href="2020/05/07/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%B8%89/"/>
      <url>2020/05/07/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h3 id="panic"><a href="#panic" class="headerlink" title="panic"></a>panic</h3><p>panic主要用于作异常处理，是一个内建的停止控制流函数。相当于其它编程语言的抛异常。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getname</span><span class="params">()</span> <span class="title">string</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">"name"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"starting......!"</span>)</span><br><span class="line"></span><br><span class="line">a :=<span class="number">23</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">23</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"crash"</span>) <span class="comment">//手动触发宕机</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(getname())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="recover"><a href="#recover" class="headerlink" title="recover"></a>recover</h3><p>recover是内建函数，可以让进入宕机流程恢复回来，同时recover仅在defer中有效。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getname</span><span class="params">()</span> <span class="title">string</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">"name"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span>&#123;</span><br><span class="line">err:=<span class="built_in">recover</span>()</span><br><span class="line"><span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"触发宕机捕获异常:"</span>,err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()  <span class="comment">//recover只能在defer中</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"starting......!"</span>)</span><br><span class="line"></span><br><span class="line">a :=<span class="number">23</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">23</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"crash"</span>) <span class="comment">//手动触发宕机,后面的代码不会执行</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(getname())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 指针</title>
      <link href="2020/05/07/golang-%E6%8C%87%E9%92%88/"/>
      <url>2020/05/07/golang-%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h3 id="Golang-指针"><a href="#Golang-指针" class="headerlink" title="Golang 指针"></a>Golang 指针</h3><p>指针就是一个变量，用于存储另一个变量的内存地址。这个内存地址往往是在内存中存储的另一个变量的值的起始位置。</p><p><strong>指针特点</strong></p><ul><li>默认值是nil，没有NULL常量</li><li>操作符”&amp;”用于获取变量地址,”*” 通过指针目标对象</li><li>不支持指针运算</li></ul><p><strong>实例</strong><br>声明一个变量x 并且设置值为1, 声明变量p 值为x的地址 </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">x := <span class="number">1</span></span><br><span class="line">p := &amp;x  <span class="comment">//&amp;获取x的地址</span></span><br><span class="line">fmt.Println(p) <span class="comment">//打印地址</span></span><br><span class="line">fmt.Println(x,*p) <span class="comment">//*p获取x所对应的值</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上输出结果为</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>通过指针修改变量的值</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">x := <span class="number">1</span></span><br><span class="line">p := &amp;x  <span class="comment">//&amp;获取x的地址</span></span><br><span class="line">fmt.Println(x,*p) <span class="comment">//*p获取x所对应的值</span></span><br><span class="line"></span><br><span class="line">*p = <span class="number">3</span> <span class="comment">//修改变量的值</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x,*p)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">3</span>   //*p指向x 修改*p等于修改x</span><br></pre></td></tr></table></figure><p><strong>指针作用函数参数</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">incr</span><span class="params">(p,b *<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">*p++</span><br><span class="line">*b=*b+<span class="number">30</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">x := <span class="number">1</span></span><br><span class="line">c :=<span class="number">2</span></span><br><span class="line">p := &amp;x  <span class="comment">//&amp;获取x的地址</span></span><br><span class="line">fmt.Println(x,*p) <span class="comment">//*p获取x所对应的值</span></span><br><span class="line"></span><br><span class="line">*p = <span class="number">3</span> <span class="comment">//修改变量的值</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x,*p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//将x地址传递给incr函数，然后返回变量修改</span></span><br><span class="line">incr(&amp;x,&amp;c)</span><br><span class="line">fmt.Println(x,c)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">1</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">32</span></span><br></pre></td></tr></table></figure><h3 id="new和make"><a href="#new和make" class="headerlink" title="new和make"></a>new和make</h3><p>在golang中,make和new都是分配内存的，但是它们之间还是有些区别的，只有理解了它们之间的不同，才能在合适的场合使用。</p><p>简单来说  new只是分配内存，不初始化内存,而make即分配又初始化内存。所谓的初始化就是给类型赋初值，比如字符为空，整型为0, 逻辑值为false等。</p><p>备注</p><ol><li>make 仅用来分配及初始化类型为 slice、map、chan 的数据。new 可分配任意类型的数据.</li><li>new 分配返回的是指针，即类型 *Type。make 返回引用，即 Type.</li><li>new 分配的空间被清零, make 分配空间后，会进行初始化.</li></ol><p>new返回的是一个指针</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name := <span class="built_in">new</span>(<span class="keyword">string</span>)</span><br><span class="line">server := <span class="built_in">new</span>(<span class="keyword">string</span>)</span><br><span class="line">fmt.Println(name,server) <span class="comment">//输出0xc0000421f0 0xc000042200</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang Interface</title>
      <link href="2020/05/07/golang-Interface/"/>
      <url>2020/05/07/golang-Interface/</url>
      
        <content type="html"><![CDATA[<h3 id="golang-接口"><a href="#golang-接口" class="headerlink" title="golang 接口"></a>golang 接口</h3><p>接口可以理解为某一个方面的抽象，可以是多对一的(多个类型实现一个接口)，是多态的体现。</p><p>接口是一组包含方法名、参数、返回值的未具体实现的方法的集合。</p><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> interfaceName <span class="keyword">interface</span> &#123; </span><br><span class="line"><span class="comment">// 方法列表 </span></span><br><span class="line">    GetName() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> interfaceName <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// 方法列表</span></span><br><span class="line">GetName() <span class="keyword">string</span></span><br><span class="line">GetAge() <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span>  Name <span class="keyword">struct</span> &#123;   <span class="comment">//定义结构体</span></span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s Name)</span> <span class="title">GetName</span><span class="params">()</span> <span class="title">string</span></span>  &#123;   <span class="comment">//实现两个方法</span></span><br><span class="line"><span class="keyword">return</span> s.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s Name)</span> <span class="title">GetAge</span><span class="params">()</span> <span class="title">int</span></span>  &#123;</span><br><span class="line"><span class="keyword">return</span> s.age</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">s := Name&#123;<span class="string">"roddy"</span>,<span class="number">28</span>&#125;     <span class="comment">//声明一个对象</span></span><br><span class="line">a := s.GetName()         </span><br><span class="line">fmt.Println(a,s.GetAge(),s.age)  <span class="comment">//调用对象中的方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空接口"><a href="#空接口" class="headerlink" title="空接口"></a>空接口</h3><p>空接口就是不包含任何方法的接口。<strong>所有类型都实现了空接口</strong>，并且空接口可以存任何类型的数据。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> allData <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">allData = <span class="number">234</span></span><br><span class="line"></span><br><span class="line">fmt.Println(allData,reflect.TypeOf(allData))</span><br></pre></td></tr></table></figure><p>覆盖变量值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> allData <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> allList <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">allData = <span class="number">234</span></span><br><span class="line"></span><br><span class="line">fmt.Println(allData,reflect.TypeOf(allData))</span><br><span class="line"></span><br><span class="line">m :=<span class="number">123</span></span><br><span class="line">ms := <span class="string">"check all"</span></span><br><span class="line"></span><br><span class="line">allList = m</span><br><span class="line">allList = ms    <span class="comment">//可覆盖此前的变量值</span></span><br><span class="line">fmt.Println(allList)   <span class="comment">//此时的输出就为check all</span></span><br></pre></td></tr></table></figure><h3 id="接口零值"><a href="#接口零值" class="headerlink" title="接口零值"></a>接口零值</h3><p>接口的默认值为nil</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> DefaultI <span class="keyword">interface</span> &#123;</span><br><span class="line">GetName()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mk DefaultI</span><br><span class="line">fmt.Println(mk)  <span class="comment">//接口的默认值为nil</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu配置nginx htpasswd访问密码</title>
      <link href="2020/04/28/ubuntu%E9%85%8D%E7%BD%AEnginx-htpasswd%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81/"/>
      <url>2020/04/28/ubuntu%E9%85%8D%E7%BD%AEnginx-htpasswd%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="Ubuntu-16-4-Nginx设置访问密码"><a href="#Ubuntu-16-4-Nginx设置访问密码" class="headerlink" title="Ubuntu 16.4 Nginx设置访问密码"></a>Ubuntu 16.4 Nginx设置访问密码</h3><p>1.安装apache2-utils </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@rodddy:/# apt-<span class="builtin-name">get</span> install apache2-utils</span><br><span class="line">Reading package lists<span class="built_in">..</span>. Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information<span class="built_in">..</span>. Done</span><br><span class="line">The following packages were automatically installed <span class="keyword">and</span> are <span class="literal">no</span> longer required:</span><br><span class="line">  libopts25 python-meld3 python-pkg-resources</span><br><span class="line">Use <span class="string">'apt autoremove'</span> <span class="keyword">to</span> <span class="builtin-name">remove</span> them.</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libapr1 libaprutil1</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  apache2-utils libapr1 libaprutil1</span><br><span class="line">0 upgraded, 3 newly installed, 0 <span class="keyword">to</span> <span class="builtin-name">remove</span> <span class="keyword">and</span> 199 <span class="keyword">not</span> upgraded.</span><br><span class="line">Need <span class="keyword">to</span> <span class="builtin-name">get</span> 82.1 kB/245 kB of archives.</span><br><span class="line">After this operation, 810 kB of additional disk space will be used.</span><br><span class="line"><span class="keyword">Do</span> you want <span class="keyword">to</span> continue? [Y/n] y</span><br></pre></td></tr></table></figure><p>2.创建用户名和密码，并把用户名和密码保存到指定文件中</p><p>创建用户admin  保存的文件位置/usr/local/src/nginx/passwd</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@roddy:~# htpasswd -c /usr/local/src/nginx/passwd admin</span><br><span class="line">New password: </span><br><span class="line">Re-type new password: </span><br><span class="line">Adding password <span class="keyword">for</span><span class="built_in"> user </span>admin</span><br></pre></td></tr></table></figure><p>3.修改nginx配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">   <span class="attr">listen</span> <span class="string">80;</span></span><br><span class="line">   <span class="attr">server_name</span>  <span class="string">localhost;</span></span><br><span class="line">   <span class="attr">.......</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">   #新增两行</span></span><br><span class="line">   <span class="attr">auth_basic</span> <span class="string">"Please input password"; #这里是提示信息 </span></span><br><span class="line">   <span class="attr">auth_basic_user_file</span> <span class="string">/usr/local/src/nginx/passwd;</span></span><br><span class="line"> </span><br><span class="line">   <span class="attr">location</span> <span class="string">/&#123;</span></span><br><span class="line">   <span class="attr">.......</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p>4.先检查下配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@roddy:~# nginx -t</span><br><span class="line">nginx: the configuration <span class="keyword">file</span> /etc/nginx/nginx.<span class="keyword">conf</span> <span class="keyword">syntax</span> <span class="keyword">is</span> ok</span><br><span class="line">nginx: configuration <span class="keyword">file</span> /etc/nginx/nginx.<span class="keyword">conf</span> test <span class="keyword">is</span> successful</span><br><span class="line">root@roddy:~#</span><br></pre></td></tr></table></figure><p>5.重新加载配置文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:~</span><span class="comment"># systemctl  reload nginx.service</span></span><br></pre></td></tr></table></figure><p>备注:</p><p>htpasswd命令选项参数说明</p><p>-c 创建一个加密文件<br>-n 不更新加密文件，只将htpasswd命令加密后的用户名密码显示在屏幕上<br>-m 默认htpassswd命令采用MD5算法对密码进行加密<br>-d htpassswd命令采用CRYPT算法对密码进行加密<br>-p htpassswd命令不对密码进行进行加密，即明文密码<br>-s htpassswd命令采用SHA算法对密码进行加密<br>-b htpassswd命令行中一并输入用户名和密码而不是根据提示输入密码<br>-D 删除指定的用户</p><p>创建用户</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:~</span><span class="comment"># htpasswd -c /usr/local/src/nginx/passwd admin</span></span><br></pre></td></tr></table></figure><p>添加用户(在原文件下)</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:~</span><span class="comment"># htpasswd  -b /usr/local/src/nginx/passwd  roddy 123456</span></span><br></pre></td></tr></table></figure><p>删除用户</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:~</span><span class="comment"># htpasswd -D /usr/local/src/nginx/passwd admin</span></span><br></pre></td></tr></table></figure><p>修改密码</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:~</span><span class="comment"># htpasswd -b /usr/local/src/nginx/passwd admin 12345678</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu删除apt源</title>
      <link href="2020/04/28/ubuntu%E5%88%A0%E9%99%A4apt%E6%BA%90/"/>
      <url>2020/04/28/ubuntu%E5%88%A0%E9%99%A4apt%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>1.进入到源列表文件目录</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:/</span><span class="comment"># cd  /etc/apt/sources.list.d/</span></span><br></pre></td></tr></table></figure><p>2.编辑源列表文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@roddy</span><span class="symbol">:/etc/apt/sources</span>.list.d/<span class="comment"># vim  nginx.list</span></span><br></pre></td></tr></table></figure><p>3.删除或者注释其中源即可</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang struct 结构体</title>
      <link href="2020/04/27/golang-struct-%E7%BB%93%E6%9E%84%E4%BD%93/"/>
      <url>2020/04/27/golang-struct-%E7%BB%93%E6%9E%84%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h3 id="golang-结构体"><a href="#golang-结构体" class="headerlink" title="golang 结构体"></a>golang 结构体</h3><p>什么是结构体？</p><p>结构体可以存不同项定义的数据类型，它是一组数据的集合。我们可以将数据按指定的格式进行保存和读取。</p><p>下面以一台服务器参数作为例子:</p><p>服务器名: ServerName<br>CPU: CPU<br>内存: Mem<br>硬盘: Disk<br>IP地址: IP</p><p>定义一个SERVER的结构体：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 结构体名 <span class="keyword">struct</span> &#123;</span><br><span class="line">member <span class="keyword">string</span> <span class="comment">// 成员及成员类型</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SERVER <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerName <span class="keyword">string</span></span><br><span class="line">CPU <span class="keyword">int</span></span><br><span class="line">MEM <span class="keyword">int</span></span><br><span class="line">DISK <span class="keyword">int</span></span><br><span class="line">IP <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建结构体"><a href="#创建结构体" class="headerlink" title="创建结构体"></a>创建结构体</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SERVER <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerName <span class="keyword">string</span></span><br><span class="line">CPU <span class="keyword">int</span></span><br><span class="line">MEM <span class="keyword">int</span></span><br><span class="line">DISK <span class="keyword">int</span></span><br><span class="line">IP <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//&#123;HOSTNAME 4 8 500 200.2.14.2&#125; 创建一个结构体，并赋予值</span></span><br><span class="line">fmt.Println(SERVER&#123;<span class="string">"DBSERVER"</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">500</span>,<span class="string">"200.2.14.2"</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//也可以使用KEY-&gt;VALUE格式定义一个结构体</span></span><br><span class="line">serverInfo := SERVER&#123;ServerName:<span class="string">"web server"</span>,CPU:<span class="number">4</span>,MEM:<span class="number">8</span>,DISK:<span class="number">200</span>,IP:<span class="string">"47.23.23.1"</span>&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(serverInfo.IP)</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果没有赋值，将使用缺省默认值</span></span><br><span class="line">webInfo := SERVER&#123;ServerName:<span class="string">"web 2server"</span>,DISK:<span class="number">200</span>,IP:<span class="string">"47.23.23.2"</span>&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(webInfo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问成员"><a href="#访问成员" class="headerlink" title="访问成员"></a>访问成员</h3><p>使用方法为struct.xxxx 赋值或者访问</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> SERVER <span class="keyword">struct</span> &#123;</span><br><span class="line">ServerName <span class="keyword">string</span></span><br><span class="line">CPU <span class="keyword">int</span></span><br><span class="line">MEM <span class="keyword">int</span></span><br><span class="line">DISK <span class="keyword">int</span></span><br><span class="line">IP <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line">newServer.ServerName = <span class="string">"new server"</span></span><br><span class="line">newServer.DISK = <span class="number">500</span></span><br><span class="line">newServer.MEM = <span class="number">4</span></span><br><span class="line">newServer.CPU = <span class="number">2</span></span><br><span class="line">newServer.IP = <span class="string">"2.2.3.2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"服务器名%s,磁盘:%d,内存:%d,CPU:%d,IP:%s"</span>, newServer.ServerName,</span><br><span class="line">newServer.DISK, newServer.MEM,</span><br><span class="line">newServer.CPU, newServer.IP,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体传递"><a href="#结构体传递" class="headerlink" title="结构体传递"></a>结构体传递</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetServerInfo</span><span class="params">(server SERVER)</span></span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"server ip:%s\n"</span>,server.IP)  <span class="comment">//访问结构体中的成员信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newServer SERVER</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line">newServer.ServerName = <span class="string">"new server"</span></span><br><span class="line">newServer.DISK = <span class="number">500</span></span><br><span class="line">newServer.MEM = <span class="number">6</span></span><br><span class="line">newServer.CPU = <span class="number">2</span></span><br><span class="line">newServer.IP = <span class="string">"2.2.3.2"</span></span><br><span class="line"></span><br><span class="line">GetServerInfo(newServer)  <span class="comment">//将结构体传递给GetServerInfo函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结构体做为参数传递，如果要修改数据，需要用结构体指针方式</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">changeServer</span><span class="params">(server *SERVER)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> server.MEM &gt; <span class="number">4</span>&#123;</span><br><span class="line">server.MEM = <span class="number">8</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newServer SERVER</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line">newServer.ServerName = <span class="string">"new server"</span></span><br><span class="line">newServer.DISK = <span class="number">500</span></span><br><span class="line">newServer.MEM = <span class="number">6</span></span><br><span class="line">newServer.CPU = <span class="number">2</span></span><br><span class="line">newServer.IP = <span class="string">"2.2.3.2"</span></span><br><span class="line"></span><br><span class="line">changeServer(&amp;newServer) <span class="comment">//结构体指针传递</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"服务器名%s,磁盘:%d,内存:%d,CPU:%d,IP:%s"</span>, newServer.ServerName,</span><br><span class="line">newServer.DISK, newServer.MEM,</span><br><span class="line">newServer.CPU, newServer.IP,</span><br><span class="line">)</span><br><span class="line"><span class="comment">//结果server.MEM =8</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django vue 跨域问题解决</title>
      <link href="2020/04/27/django-vue-%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>2020/04/27/django-vue-%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>一直在做python后端开发，之前一直会遇见django 和vue结合后的垮域问题。现特记录下解决方法</p><h3 id="什么是跨域"><a href="#什么是跨域" class="headerlink" title="什么是跨域"></a>什么是跨域</h3><p>解释来源链接：<a href="https://www.jianshu.com/p/3961366f9ce9" target="_blank" rel="noopener">https://www.jianshu.com/p/3961366f9ce9</a></p><p>跨域是指一个域下的文档或脚本试图去请求另一个域下的资源，这里跨域是广义的。<br>其实我们通常所说的跨域是狭义的，是由浏览器同源策略限制的一类请求场景。</p><p>什么是同源策略？</p><p>同源策略/SOP（Same origin policy）是一种约定，由Netscape公司1995年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指”协议+域名+端口”三者相同，即便两个不同的域名指向同一个ip地址，也非同源。</p><p>同源策略限制以下几种行为：</p><ul><li>Cookie、LocalStorage 和 IndexDB 无法读取</li><li>DOM 和 Js对象无法获得</li><li>AJAX 请求不能发送</li></ul><p>1.安装django-cors-headers</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> django-cors-headers</span><br></pre></td></tr></table></figure><p>2.配置settings.py文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//将corsheaders添加到apps中</span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">...</span><br><span class="line">    'corsheaders',</span><br><span class="line">    ....</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#跨域增加忽略</span></span><br><span class="line">CORS_ALLOW_CREDENTIALS = True</span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = True</span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">    'http://localhost:8000',</span><br><span class="line">    'http://127.0.0.1:8000',</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line">    '<span class="keyword">DELETE</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">GET</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span>OPTIONS<span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">PATCH</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span>POST<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>PUT<span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">VIEW</span><span class="string">',</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CORS_ALLOW_HEADERS = (</span></span><br><span class="line"><span class="string">    '</span>XMLHttpRequest<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>X_FILENAME<span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">accept</span>-<span class="keyword">encoding</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span>authorization<span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">content</span>-<span class="keyword">type</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span>dnt<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>origin<span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">user</span>-<span class="keyword">agent</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span>x-csrftoken<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>x-requested-<span class="keyword">with</span><span class="string">',</span></span><br><span class="line"><span class="string">    '</span><span class="keyword">Pragma</span><span class="string">',</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MIDDLEWARE = [</span></span><br><span class="line"><span class="string">    '</span>django.middleware.security.SecurityMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django.contrib.sessions.middleware.SessionMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>corsheaders.middleware.CorsMiddleware<span class="string">',  //将corshaders添加到common之上</span></span><br><span class="line"><span class="string">    '</span>django.middleware.common.CommonMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django.middleware.csrf.CsrfViewMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django.contrib.auth.middleware.AuthenticationMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django.contrib.messages.middleware.MessageMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django.middleware.clickjacking.XFrameOptionsMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>django_user_agents.middleware.UserAgentMiddleware<span class="string">',</span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure><p>3.重新启动项目即可</p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
            <tag> python </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 函数学习(二)</title>
      <link href="2020/04/27/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%BA%8C/"/>
      <url>2020/04/27/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>匿名函数就是一个没有名字的函数，只有函数体，函数可以被作为一种类型被赋值给函数类型的变量，匿名函数往往是以变量方式被传递。</p><p><strong>匿名函数的定义</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(参数列表)</span><span class="params">(返回值列表)</span> &#123;</span></span><br><span class="line">函数体</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>调用方式</strong></p><ul><li>声明时直接调用</li><li>赋值给变量进行调用</li></ul><p>实例：匿名函数调用</p><p>1.声明时直接调用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//func (参数列表)(返回值列表) &#123;</span></span><br><span class="line"><span class="comment">//函数体</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(userId,age <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">fmt.Printf(<span class="string">"用户ID:%d,年龄:%d\n"</span>,userId,age)</span><br><span class="line">&#125;(<span class="number">1</span>,<span class="number">24</span>)<span class="comment">//声明时直接调用</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.赋值给变量调用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//func (参数列表)(返回值列表) &#123;</span></span><br><span class="line"><span class="comment">//函数体</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">result :=<span class="function"><span class="keyword">func</span> <span class="params">(a,b <span class="keyword">int</span> )</span><span class="title">int</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(result(<span class="number">2</span>,<span class="number">6</span>))   <span class="comment">//直接赋值给result，然后调用即可</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局匿名函数"><a href="#全局匿名函数" class="headerlink" title="全局匿名函数"></a>全局匿名函数</h3><p>以上我们的函数调用都是一个局部调用，如何进行全局调用呢，可以将匿名函数赋值给一个全局变量，就可以程序中使用了。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"><span class="comment">//全局匿名函数</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">getResult = <span class="function"><span class="keyword">func</span><span class="params">(a,b <span class="keyword">int</span>,meth_type <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> meth_type == <span class="string">"+"</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> meth_type == <span class="string">"-"</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a -b</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> meth_type == <span class="string">"*"</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a *b</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcMethod</span><span class="params">(a,b <span class="keyword">int</span>)</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加法</span></span><br><span class="line">add := getResult(a,b,<span class="string">"+"</span>)   <span class="comment">//函数中调用全局匿名函数</span></span><br><span class="line"><span class="comment">//减法</span></span><br><span class="line">sub := getResult(a,b,<span class="string">"-"</span>)</span><br><span class="line"><span class="comment">//乘法</span></span><br><span class="line">mul := getResult(a,b,<span class="string">"*"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> add,sub,mul</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">fmt.Println(funcMethod(<span class="number">1</span>,<span class="number">23</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数闭包"><a href="#函数闭包" class="headerlink" title="函数闭包"></a>函数闭包</h3><p>闭包就是一个函数与其相关的引用环境组成的一个整体。它本质上是一个函数,但是这个函数会用于函数外的变量，它们共同组成的整体称为闭包。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//累积数据,返回值是一个func  </span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addUpper</span><span class="params">()</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">n := <span class="number">10</span></span><br><span class="line">n -= <span class="number">1</span></span><br><span class="line">c := <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span> <span class="params">(x <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">c -= <span class="number">2</span></span><br><span class="line">fmt.Println(c)</span><br><span class="line"></span><br><span class="line">n = n +x</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">t := addUpper()  <span class="comment">//t变量用于接收返回的函数 </span></span><br><span class="line"></span><br><span class="line">fmt.Println(t(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="defer（延迟函数）"><a href="#defer（延迟函数）" class="headerlink" title="defer（延迟函数）"></a>defer（延迟函数）</h3><p>defer用来声明一个延迟函数，并把这个函数放到一个栈上，当外部的包含方法return之前，放回参数到调用方法之前调用。通常用于做资源释放，比如关闭io等。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//defer 用于程序释放资源,用于延迟操作。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//延迟调用，采用FILO(先进后出原则)  延迟函数执行按后进先出顺序执行，即先出现的defer后执行</span></span><br><span class="line">i:=<span class="number">0</span></span><br><span class="line"><span class="keyword">defer</span>  fmt.Println(i)</span><br><span class="line">i++</span><br><span class="line"><span class="keyword">defer</span> fmt.Println(i)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">f()  <span class="comment">//结果是1 后是0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关闭文件io</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeFile</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">f, _ := os.Open(<span class="string">"Godefer.go"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//将文件名交给带有缓存的IO Reader</span></span><br><span class="line">r := bufio.NewReader(f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">line, err := r.ReadString(<span class="string">'\n'</span>) <span class="comment">//指定分割符</span></span><br><span class="line"><span class="comment">//判断是否是文件结尾</span></span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(line)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span>  f.Close()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h3><p>1.在函数内部声明/定义的变量叫局部变量,<strong>作用域仅限于函数内部</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">change</span><span class="params">()</span></span>&#123;  </span><br><span class="line">a := <span class="number">124</span>    <span class="comment">//在change函数体内部声明的变量叫局部变量</span></span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.函数外部声明/定义的变量叫全局变量,<strong>作用于在整个包内</strong>。如果变量的首字母大写，则可以外部访问调用(作用域为整个程序)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 外部变量</span></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">Name <span class="keyword">string</span> = <span class="string">"default"</span></span><br><span class="line">Age <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">change</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//修改的就是全局变量</span></span><br><span class="line">Name = <span class="string">"1234"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"></span><br><span class="line">Age = <span class="number">100</span></span><br><span class="line">fmt.Println(Name,Age)</span><br><span class="line"></span><br><span class="line">change()</span><br><span class="line">Age = <span class="number">100</span></span><br><span class="line">fmt.Println(Name,Age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 函数学习(一)</title>
      <link href="2020/04/26/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%B8%80/"/>
      <url>2020/04/26/golang-%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="函数声明"><a href="#函数声明" class="headerlink" title="函数声明"></a>函数声明</h3><p>golang 的函数声明包含func关键字、函数名、形式参数列表（可省略）、返回值列表及函数体</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">FuncName</span><span class="params">(username <span class="keyword">string</span>,age <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最简单的函数定义如果，以func开头及函数名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Simple</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//表示该函数不需要输入参数，以及没有返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面通过两个实例来介绍下函数的使用</p><p>1.计算两个数相加。定义一下funcAdd 函数，接收两个参数a,b 类型为int  返回值为int。函数调用时，以函数名()的形式进行调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcAdd</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span><span class="title">int</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(funcAdd(<span class="number">3</span>,<span class="number">5</span>))  <span class="comment">//输出结果为8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数返回时还可以直接以变量的形式进行返回</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcAdd</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span> <span class="params">(result <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">result=a+b</span><br><span class="line"><span class="keyword">return</span>                  <span class="comment">//直接输入return进行返回即可</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(funcAdd(<span class="number">7</span>,<span class="number">8</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.计算商品价格。定义一个函数名加ShopPrice,接收几个参数，并且返回商品价格。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ShopPrice</span><span class="params">(s_price,number,sale <span class="keyword">float64</span>)</span><span class="params">(price <span class="keyword">float64</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//商品原价 * 数量 * 折扣</span></span><br><span class="line"><span class="comment">// 999.88 * 2 * 98/100</span></span><br><span class="line">price = s_price * number * sale / <span class="number">100.00</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fmt.Println(ShopPrice(<span class="number">999.25</span>,<span class="number">2</span>,<span class="number">98</span>))</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以返回多个数据,传入商品名、价格、数量。最后返回商品及计算结果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ShopDetail</span><span class="params">(s_price,number,sale <span class="keyword">float64</span>,name <span class="keyword">string</span>)</span><span class="params">(<span class="keyword">float64</span>, <span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//商品原价 * 数量 * 折扣</span></span><br><span class="line"><span class="comment">// 999.88 * 2 * 98/100</span></span><br><span class="line">price := s_price * number * sale / <span class="number">100.00</span></span><br><span class="line"><span class="keyword">return</span> price,name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">price,name := ShopDetail(<span class="number">999.25</span>,<span class="number">2</span>,<span class="number">98</span>,<span class="string">"大衣"</span>)</span><br><span class="line">fmt.Println(<span class="string">"商品:"</span>,name,<span class="string">"价格:"</span>,price)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数多返回值"><a href="#函数多返回值" class="headerlink" title="函数多返回值"></a>函数多返回值</h3><p>在go中，一个函数可以接收多个参数列表，同时也可以返回多个值，便于我们进行处理。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AbcFunc</span><span class="params">(a,b,c <span class="keyword">int</span>)</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>&#123;   <span class="comment">//返回值为3个int数值</span></span><br><span class="line"><span class="keyword">return</span> c,b,a   <span class="comment">//将123 转成321输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">c,b,a := AbcFunc(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">fmt.Println(c,b,a)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空白符号的使用"><a href="#空白符号的使用" class="headerlink" title="空白符号的使用"></a>空白符号的使用</h3><p>如果在接收参数时，有不想使用的变量数值，可以使用_进行代替,程序不作处理。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nullValue</span><span class="params">(username <span class="keyword">string</span>,age <span class="keyword">int</span>,address <span class="keyword">string</span>)</span><span class="params">(<span class="keyword">string</span>,<span class="keyword">int</span>,<span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> username,age,address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//_用于接收任何类型的任何值，如果以“_”表示，那将省略，可以理解为垃圾桶</span></span><br><span class="line">username,age,_ := nullValue(<span class="string">"roddy"</span>,<span class="number">27</span>,<span class="string">"sichuan"</span>)</span><br><span class="line">fmt.Println(username,age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数可变参数"><a href="#函数可变参数" class="headerlink" title="函数可变参数"></a>函数可变参数</h3><p>向函数传递一个未知数量的参数值时，可以使用…来代替，下面样例就是传递一个数字序列，然后分别打印出来例子。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">func MultipleNumber(args ...<span class="built_in">int</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;len(args);i++&#123;</span><br><span class="line">fmt.Println(args[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">func main()&#123;</span><br><span class="line"></span><br><span class="line">MultipleNumber(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>输入一列数据，返回这组数据的最小值与最大值</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">package</span> main</span><br><span class="line"></span><br><span class="line">import <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line">func MinMax(<span class="built_in">input</span> ...int)(<span class="built_in">min</span>,<span class="built_in">max</span> int)&#123;</span><br><span class="line"><span class="built_in">min</span> = <span class="built_in">input</span>[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">max</span> = <span class="built_in">input</span>[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i :=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(<span class="built_in">input</span>);i++&#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">input</span>[i] &lt; <span class="built_in">min</span>&#123;</span><br><span class="line"><span class="built_in">min</span> = <span class="built_in">input</span>[i]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">input</span>[i] &gt;<span class="built_in">max</span> &#123;</span><br><span class="line"><span class="built_in">max</span> = <span class="built_in">input</span>[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main()&#123;</span><br><span class="line"><span class="built_in">min</span>,<span class="built_in">max</span> :=MinMax(<span class="number">1</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)</span><br><span class="line">fmt.Println(<span class="string">"最小值为:"</span>,<span class="built_in">min</span>,<span class="string">"最大值为:"</span>,<span class="built_in">max</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang 打印乘法表</title>
      <link href="2020/04/22/golang-%E6%89%93%E5%8D%B0%E4%B9%98%E6%B3%95%E8%A1%A8/"/>
      <url>2020/04/22/golang-%E6%89%93%E5%8D%B0%E4%B9%98%E6%B3%95%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="如何使用golang打印一个乘法表"><a href="#如何使用golang打印一个乘法表" class="headerlink" title="如何使用golang打印一个乘法表"></a>如何使用golang打印一个乘法表</h3><p>使用模块fmt，语法使用for循环嵌套，然后使用fmt.Printf格式化输出结果。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++ &#123;</span><br><span class="line"><span class="keyword">for</span> c:=<span class="number">1</span>;c&lt;=i;c++&#123;</span><br><span class="line">fmt.Printf(<span class="string">"%d * %d = %d "</span>,i,c,i*c)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时输出结果发现，细微发现数字没有对齐</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span> </span><br><span class="line"><span class="number">2</span> * <span class="number">1</span> = <span class="number">2</span> <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span> </span><br><span class="line"><span class="number">3</span> * <span class="number">1</span> = <span class="number">3</span> <span class="number">3</span> * <span class="number">2</span> = <span class="number">6</span> <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span> </span><br><span class="line"><span class="number">4</span> * <span class="number">1</span> = <span class="number">4</span> <span class="number">4</span> * <span class="number">2</span> = <span class="number">8</span> <span class="number">4</span> * <span class="number">3</span> = <span class="number">12</span> <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span> </span><br><span class="line"><span class="number">5</span> * <span class="number">1</span> = <span class="number">5</span> <span class="number">5</span> * <span class="number">2</span> = <span class="number">10</span> <span class="number">5</span> * <span class="number">3</span> = <span class="number">15</span> <span class="number">5</span> * <span class="number">4</span> = <span class="number">20</span> <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span> </span><br><span class="line"><span class="number">6</span> * <span class="number">1</span> = <span class="number">6</span> <span class="number">6</span> * <span class="number">2</span> = <span class="number">12</span> <span class="number">6</span> * <span class="number">3</span> = <span class="number">18</span> <span class="number">6</span> * <span class="number">4</span> = <span class="number">24</span> <span class="number">6</span> * <span class="number">5</span> = <span class="number">30</span> <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span> </span><br><span class="line"><span class="number">7</span> * <span class="number">1</span> = <span class="number">7</span> <span class="number">7</span> * <span class="number">2</span> = <span class="number">14</span> <span class="number">7</span> * <span class="number">3</span> = <span class="number">21</span> <span class="number">7</span> * <span class="number">4</span> = <span class="number">28</span> <span class="number">7</span> * <span class="number">5</span> = <span class="number">35</span> <span class="number">7</span> * <span class="number">6</span> = <span class="number">42</span> <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span> </span><br><span class="line"><span class="number">8</span> * <span class="number">1</span> = <span class="number">8</span> <span class="number">8</span> * <span class="number">2</span> = <span class="number">16</span> <span class="number">8</span> * <span class="number">3</span> = <span class="number">24</span> <span class="number">8</span> * <span class="number">4</span> = <span class="number">32</span> <span class="number">8</span> * <span class="number">5</span> = <span class="number">40</span> <span class="number">8</span> * <span class="number">6</span> = <span class="number">48</span> <span class="number">8</span> * <span class="number">7</span> = <span class="number">56</span> <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span> </span><br><span class="line"><span class="number">9</span> * <span class="number">1</span> = <span class="number">9</span> <span class="number">9</span> * <span class="number">2</span> = <span class="number">18</span> <span class="number">9</span> * <span class="number">3</span> = <span class="number">27</span> <span class="number">9</span> * <span class="number">4</span> = <span class="number">36</span> <span class="number">9</span> * <span class="number">5</span> = <span class="number">45</span> <span class="number">9</span> * <span class="number">6</span> = <span class="number">54</span> <span class="number">9</span> * <span class="number">7</span> = <span class="number">63</span> <span class="number">9</span> * <span class="number">8</span> = <span class="number">72</span> <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure><p>改进代码在=%d改成%-2d  2d表示2位数字。-标识缺省</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.<span class="constructor">Printf(<span class="string">"%d * %d = %-2d "</span>,<span class="params">i</span>,<span class="params">c</span>,<span class="params">i</span><span class="operator">*</span><span class="params">c</span>)</span></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> * <span class="number">1</span> = <span class="number">1</span>  </span><br><span class="line"><span class="number">2</span> * <span class="number">1</span> = <span class="number">2</span>  <span class="number">2</span> * <span class="number">2</span> = <span class="number">4</span>  </span><br><span class="line"><span class="number">3</span> * <span class="number">1</span> = <span class="number">3</span>  <span class="number">3</span> * <span class="number">2</span> = <span class="number">6</span>  <span class="number">3</span> * <span class="number">3</span> = <span class="number">9</span>  </span><br><span class="line"><span class="number">4</span> * <span class="number">1</span> = <span class="number">4</span>  <span class="number">4</span> * <span class="number">2</span> = <span class="number">8</span>  <span class="number">4</span> * <span class="number">3</span> = <span class="number">12</span> <span class="number">4</span> * <span class="number">4</span> = <span class="number">16</span> </span><br><span class="line"><span class="number">5</span> * <span class="number">1</span> = <span class="number">5</span>  <span class="number">5</span> * <span class="number">2</span> = <span class="number">10</span> <span class="number">5</span> * <span class="number">3</span> = <span class="number">15</span> <span class="number">5</span> * <span class="number">4</span> = <span class="number">20</span> <span class="number">5</span> * <span class="number">5</span> = <span class="number">25</span> </span><br><span class="line"><span class="number">6</span> * <span class="number">1</span> = <span class="number">6</span>  <span class="number">6</span> * <span class="number">2</span> = <span class="number">12</span> <span class="number">6</span> * <span class="number">3</span> = <span class="number">18</span> <span class="number">6</span> * <span class="number">4</span> = <span class="number">24</span> <span class="number">6</span> * <span class="number">5</span> = <span class="number">30</span> <span class="number">6</span> * <span class="number">6</span> = <span class="number">36</span> </span><br><span class="line"><span class="number">7</span> * <span class="number">1</span> = <span class="number">7</span>  <span class="number">7</span> * <span class="number">2</span> = <span class="number">14</span> <span class="number">7</span> * <span class="number">3</span> = <span class="number">21</span> <span class="number">7</span> * <span class="number">4</span> = <span class="number">28</span> <span class="number">7</span> * <span class="number">5</span> = <span class="number">35</span> <span class="number">7</span> * <span class="number">6</span> = <span class="number">42</span> <span class="number">7</span> * <span class="number">7</span> = <span class="number">49</span> </span><br><span class="line"><span class="number">8</span> * <span class="number">1</span> = <span class="number">8</span>  <span class="number">8</span> * <span class="number">2</span> = <span class="number">16</span> <span class="number">8</span> * <span class="number">3</span> = <span class="number">24</span> <span class="number">8</span> * <span class="number">4</span> = <span class="number">32</span> <span class="number">8</span> * <span class="number">5</span> = <span class="number">40</span> <span class="number">8</span> * <span class="number">6</span> = <span class="number">48</span> <span class="number">8</span> * <span class="number">7</span> = <span class="number">56</span> <span class="number">8</span> * <span class="number">8</span> = <span class="number">64</span> </span><br><span class="line"><span class="number">9</span> * <span class="number">1</span> = <span class="number">9</span>  <span class="number">9</span> * <span class="number">2</span> = <span class="number">18</span> <span class="number">9</span> * <span class="number">3</span> = <span class="number">27</span> <span class="number">9</span> * <span class="number">4</span> = <span class="number">36</span> <span class="number">9</span> * <span class="number">5</span> = <span class="number">45</span> <span class="number">9</span> * <span class="number">6</span> = <span class="number">54</span> <span class="number">9</span> * <span class="number">7</span> = <span class="number">63</span> <span class="number">9</span> * <span class="number">8</span> = <span class="number">72</span> <span class="number">9</span> * <span class="number">9</span> = <span class="number">81</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
